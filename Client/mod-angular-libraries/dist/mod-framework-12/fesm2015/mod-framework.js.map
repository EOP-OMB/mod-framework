{"version":3,"file":"mod-framework.js","sources":["../../../projects/mod-framework/src/lib/static/mod-config.const.ts","../../../projects/mod-framework/src/lib/models/mod-framework-config.model.ts","../../../projects/mod-framework/src/lib/services/loading.service.ts","../../../projects/mod-framework/src/lib/services/loading.interceptor.ts","../../../projects/mod-framework/src/lib/models/current-user.model.ts","../../../projects/mod-framework/src/lib/services/current-user.service.ts","../../../projects/mod-framework/src/lib/components/mod-progress-spinner/mod-progress-spinner.component.html","../../../projects/mod-framework/src/lib/components/mod-progress-spinner/mod-progress-spinner.component.ts","../../../projects/mod-framework/src/lib/components/mod-loading-overlay/mod-loading-overlay.component.html","../../../projects/mod-framework/src/lib/components/mod-loading-overlay/mod-loading-overlay.component.ts","../../../projects/mod-framework/src/lib/components/mod-user-display/mod-user-display.component.html","../../../projects/mod-framework/src/lib/components/mod-user-display/mod-user-display.component.ts","../../../projects/mod-framework/src/lib/components/mod-header/mod-header.component.html","../../../projects/mod-framework/src/lib/components/mod-header/mod-header.component.ts","../../../projects/mod-framework/src/lib/components/mod-side-menu/mod-side-menu.component.html","../../../projects/mod-framework/src/lib/components/mod-side-menu/mod-side-menu.component.ts","../../../projects/mod-framework/src/lib/components/mod-layout/mod-layout.component.html","../../../projects/mod-framework/src/lib/components/mod-layout/mod-layout.component.ts","../../../projects/mod-framework/src/lib/components/mod-welcome-banner/mod-welcome-banner.component.ts","../../../projects/mod-framework/src/lib/components/mod-welcome-banner/mod-welcome-banner.component.html","../../../projects/mod-framework/src/lib/components/browser-check/browser-check.component.html","../../../projects/mod-framework/src/lib/components/browser-check/browser-check.component.ts","../../../projects/mod-framework/src/lib/services/http-request.interceptor.ts","../../../projects/mod-framework/src/lib/services/role-guard.service.ts","../../../projects/mod-framework/src/lib/mod-framework.module.ts","../../../projects/mod-framework/src/lib/models/dto-base.model.ts","../../../projects/mod-framework/src/lib/models/mod-side-menu-config.model.ts","../../../projects/mod-framework/src/lib/models/user-info.model.ts","../../../projects/mod-framework/src/lib/static/logging.static.ts","../../../projects/mod-framework/src/lib/services/mod-promise.service.base.ts","../../../projects/mod-framework/src/public-api.ts","../../../projects/mod-framework/src/mod-framework.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\n\r\nexport const ModConfig = new InjectionToken<ModFrameworkConfig>('modConfig');\r\n","export class ModFrameworkConfig {\r\n    loginSiteUrl: string;\r\n    loadingDelay: number;\r\n    urlsToSkip: string[];\r\n    showHelp: boolean = false;\r\n    helpOptions: string[] = [];\r\n    showSearch: boolean = false;\r\n    userOptions: string[] = [];\r\n    profileUrl: string = 'https://portfolio.staging.omb.gov/portfolio';\r\n}\r\n","//loading.service.ts\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\nimport { ModConfig } from '../static/mod-config.const';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n    public isLoading = new BehaviorSubject(false);\r\n    public loadingDelay: number = 500;\r\n\r\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\r\n        this.loadingDelay = config ? config.loadingDelay : 500;\r\n    }\r\n}\r\n","// loader.interceptors.ts\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse, HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from './loading.service';\r\nimport { ModConfig } from '../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../public-api';\r\n\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadingIntercepter implements HttpInterceptor {\n    private requests: HttpRequest<any>[] = [];\r\n\r\n    private urlsToSkip: string[] = ['frameworkapi/maxpicker/search'];\r\n\r\n    constructor(private loadingService: LoadingService, @Inject(ModConfig) config: ModFrameworkConfig) {\r\n        for (let x of config.urlsToSkip)\r\n            this.urlsToSkip.push(x);\r\n    }\r\n\r\n    removeRequest(req: HttpRequest<any>) {\r\n        const i = this.requests.indexOf(req);\r\n        if (i >= 0) {\r\n            this.requests.splice(i, 1);\r\n        }\r\n        this.loadingService.isLoading.next(this.requests.length > 0);\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.skipThisRequest(req)) {\n            return next.handle(req);\n        } else {\n            this.requests.push(req);\n            setTimeout(() => {\n                if (this.requests.length > 0)\r\n                    this.loadingService.isLoading.next(true);\n            }, this.loadingService.loadingDelay);\n            \r\n            return Observable.create(observer => {\r\n                const subscription = next.handle(req)\r\n                    .subscribe(\r\n                        event => {\r\n                            if (event instanceof HttpResponse) {\r\n                                this.removeRequest(req);\r\n                                observer.next(event);\r\n                            }\r\n                        },\r\n                        err => {\r\n                            this.removeRequest(req);\r\n                            observer.error(err);\r\n                        },\r\n                        () => {\r\n                            this.removeRequest(req);\r\n                            observer.complete();\r\n                        });\r\n                // remove request from queue when cancelled\r\n                return () => {\r\n                    this.removeRequest(req);\r\n                    subscription.unsubscribe();\r\n                };\r\n            });\n        }\r\n    }\n\n    private skipThisRequest(req: HttpRequest<any>): boolean {\n        var matched = false;\n        for (let url of this.urlsToSkip) {\n            matched = req.url.match(url) != null;\n            if (matched) break;\r\n        }\n        return matched;\r\n    }\r\n}\r\n","export class CurrentUser {\r\n    userId: string;\r\n    upn: string;\r\n    emailAddress: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    title: string;\r\n    phone: string;\r\n    groups: string[];\r\n    roles: string[];\r\n    displayName: string;\r\n}\n","import { Injectable, Inject } from '@angular/core';\r\nimport { CurrentUser } from '../models/current-user.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport * as parseUri from 'parse-uri';\r\nimport { ModConfig } from '../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrentUserService {\r\n    public loginPromise: Promise<CurrentUser>;\r\n\r\n    private serviceUrl = '';\r\n    private setCookieUrl = '';\r\n    private checkCookieUrl = '';\r\n    private noOpUrl = '';\r\n    private cookieName = 'CookieSettingsCheck';\r\n\r\n    private _user: CurrentUser;\r\n    private _browserOk: boolean = false;\r\n\r\n    private loginSiteUrl = \"https://localhost:44374\";\r\n\r\n    constructor(private http: HttpClient, @Inject(ModConfig) config: ModFrameworkConfig) {\r\n        this.loginSiteUrl = config ? config.loginSiteUrl : 'https://localhost:44374';\r\n\r\n        this.serviceUrl = this.siteUrl + \"api/claims/user\";\r\n        this.setCookieUrl = this.siteUrl + \"api/health/setcookie\";\r\n        this.checkCookieUrl = this.siteUrl + \"api/health/checkcookie\";\r\n        this.noOpUrl = this.siteUrl + \"api/health/noop\";\r\n    }\r\n\r\n    public getDomain(url): string {\r\n        var u = parseUri(url);\r\n        return u.host;\r\n    }\r\n\r\n    public get user(): CurrentUser {\r\n        return this._user;\r\n    }\r\n\r\n    public get browserOk(): boolean {\r\n        return this._browserOk;\r\n    }\r\n\r\n    public get domain(): string {\r\n        return this.getDomain(this.loginSiteUrl);\r\n    }\r\n\r\n    public get siteUrl(): string {\r\n        return this.loginSiteUrl + (this.loginSiteUrl.endsWith(\"/\") ? \"\" : \"/\");\r\n    }\r\n\r\n    browserCheck(): Promise<boolean> {\r\n        return this.http.get(this.noOpUrl, { withCredentials: false })\r\n            .toPromise()\r\n            .then(() => {\r\n                return this.http.get(this.setCookieUrl)\r\n                    .toPromise()\r\n                    .then(response => {\r\n                        return this.http.get(this.checkCookieUrl)\r\n                            .toPromise().then(response => {\r\n                                this._browserOk = true;\r\n                                return true;\r\n                            })\r\n                    })\r\n                    .catch((error: Response) => {\r\n                        this._browserOk = false;\r\n                        this._user = null;\r\n                        return Promise.reject<boolean>(\"Domain \" + this.getDomain(this.setCookieUrl) + \" probably doesn't allow CORS from domain \" + this.domain);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                this._browserOk = false;\r\n                this._user = null;\r\n                return Promise.reject<boolean>(\"Can't reach site \" + this.loginSiteUrl);\r\n            });\r\n    }\r\n\r\n    preFlight(): Promise<any> {\r\n        return this.http.options(this.serviceUrl)\r\n            .toPromise()\r\n            .then(response => { return response; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    redirectLogin() {\r\n        var returnUrl = window.location.href;\r\n\r\n        sessionStorage.setItem('authenticating', 'authenticating');\r\n        var url = this.siteUrl + 'api/login' + \"?ReturnUrl=\" + returnUrl;\r\n        window.open(url, '_self');\r\n    }\r\n\r\n    login(): Promise<CurrentUser> {\r\n        this.loginPromise = this.http.get(this.serviceUrl)\r\n            .toPromise()\r\n            .then((response: CurrentUser) => {\r\n                var user: CurrentUser;\r\n                user = Object.assign(new CurrentUser(), response);\r\n                this._user = user;\r\n                return user;\r\n            })\r\n            .catch(error => {\r\n                return this.handleError(error);\r\n            });\r\n        return this.loginPromise;\r\n    }\r\n\r\n    logout() {\r\n        this._user = null;\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n    public isInRole(role: string): boolean {\r\n        return this.user.roles.find(x => x == role) !== undefined;\r\n    }\r\n\r\n    public isInRoles(roles: string[]): boolean {\r\n        var returnValue = false;\r\n\r\n        roles.forEach(x => {\r\n            returnValue = returnValue || this.isInRole(x);\r\n        });\r\n\r\n        return returnValue;\r\n    }\r\n}\r\n","<ng-container *ngIf=\"overlay;else progressSpinner\">\r\n    <div class=\"overlay\">\r\n        <div class=\"center\">\r\n            <ng-template [ngTemplateOutlet]=\"progressSpinner\"></ng-template>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<ng-template #progressSpinner>\r\n    <mat-progress-spinner [diameter]=\"diameter\"\r\n                          [mode]=\"mode\"\r\n                          [color]=\"color\"\r\n                          [strokeWidth]=\"strokeWidth\"\r\n                          [value]=\"value\">\r\n    </mat-progress-spinner>\r\n</ng-template>\r\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'mod-progress-spinner',\n    templateUrl: './mod-progress-spinner.component.html',\n    styleUrls: ['./mod-progress-spinner.component.scss']\n})\nexport class ModProgressSpinnerComponent implements OnInit {\n\n    @Input() value: number = 100;\n    @Input() diameter: number = 100;\n    @Input() mode: string = \"indeterminate\";\n    @Input() strokeWidth: number = 10;\n    @Input() overlay: boolean = false;\n    @Input() color: string = \"primary\";\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<mod-progress-spinner *ngIf=\"showProgressSpinner\" [overlay]=\"true\"></mod-progress-spinner>\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingService } from '../../services/loading.service';\r\n\n@Component({\n    selector: 'mod-loading-overlay',\n    templateUrl: './mod-loading-overlay.component.html',\n    styleUrls: ['./mod-loading-overlay.component.scss']\n})\nexport class ModLoadingOverlayComponent implements OnInit {\n\n    public showProgressSpinner: boolean = false;\n\n    constructor(private loadingService: LoadingService) {\n        this.loadingService.isLoading.subscribe((isLoading) => {\n            if (isLoading) {\n                this.showProgressSpinner = true;\n            }\n            else {\n                this.showProgressSpinner = false;\n            }\n        })\n    }\n    ngOnInit(): void {\n    }\n\n}\n","<div *ngIf=\"user\">\r\n    <span style=\"padding-right: 5px;\">{{ user.displayName }}</span>\r\n    <ng-container *ngIf=\"showUser;else showMenu\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"mod-user-icon\" aria-label=\"User Menu\">\r\n            <mat-icon>account_circle</mat-icon>\r\n        </button>\r\n    </ng-container>\r\n    <ng-template #showMenu>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"mat-icon-button\" aria-label=\"User Menu\">\r\n            <mat-icon>keyboard_arrow_down</mat-icon>\r\n        </button>\r\n    </ng-template>\r\n    <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item *ngFor=\"let option of config.userOptions\" (click)=\"optionSelected(option)\">{{ option }}</button>\r\n    </mat-menu>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { CurrentUserService } from '../../services/current-user.service';\nimport { ModConfig } from '../../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\r\n\n@Component({\n    selector: 'mod-user-display',\n    templateUrl: './mod-user-display.component.html',\n    styleUrls: ['./mod-user-display.component.scss']\n})\nexport class ModUserDisplayComponent implements OnInit {\n\n    @Input()\n    showUser: boolean = false;\n\n    @Output()\n    selectOption = new EventEmitter<string>();\n\n\n    public config: ModFrameworkConfig;\n\n    constructor(private userService: CurrentUserService, @Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n        this.config.userOptions.push('User Profile');\n    }\n\n    ngOnInit() {\n        \n    }\n\n    get user() {\n        return this.userService.user;\n    }\n\n    public optionSelected(option: string) {\n        if (option == \"User Profile\") {\r\n            window.open(this.config.profileUrl, '_blank')\r\n        }\r\n        else {\r\n            this.selectOption.emit(option);\r\n        }\r\n    }\n}\n","<mat-toolbar class=\"mod-header\">\r\n    <!--<button mat-icon-button (click)=\"onMenuClick()\">\r\n        <mat-icon>\r\n            menu\r\n        </mat-icon>\r\n    </button>-->\r\n\r\n    <a class=\"logo-text-mark\" [routerLink]=\"['/']\">\r\n        <img class=\"mod-logo\" src=\"/assets/US-OfficeOfManagementAndBudget-Seal.png\" tabindex=\"-1\" />\r\n        <div tabindex=\"-1\" alt=\"Textmark\" class=\"text-mark\">{{ appName }}</div>\r\n    </a>\r\n\r\n    <span class=\"fill-remaining-space\">\r\n        <ng-content></ng-content>\r\n    </span>\r\n\r\n    <div class=\"welcome-user\">\r\n        <mod-user-display [showUser]=\"true\" (selectOption)=\"onUserOptionSelect($event)\"></mod-user-display>\r\n        <div *ngIf=\"config.showHelp\">\r\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Help Menu\">\r\n                <mat-icon>help</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item *ngFor=\"let option of config.helpOptions\" (click)=\"optionSelected(option)\">{{ option }}</button>\r\n            </mat-menu>\r\n        </div>\r\n    </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { ModConfig } from '../../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\n\n@Component({\n    selector: 'mod-header',\n    templateUrl: './mod-header.component.html',\n    styleUrls: ['./mod-header.component.scss']\n})\nexport class ModHeaderComponent implements OnInit {\n\n    @Input()\n    appName: string;\n\n    @Output()\n    menuClick = new EventEmitter<any>();\n\n    @Output()\n    userOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    helpOptionSelect = new EventEmitter<string>();\n\n    public config: ModFrameworkConfig;\n\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n    }\n\n    ngOnInit(): void {\n    }\n\n    public onMenuClick(): void {\n        this.menuClick.emit();\r\n    }\n\n    public onUserOptionSelect(option: string): void {\n        this.userOptionSelect.emit(option);\r\n    }\n\n    public optionSelected(option: string): void {\n        this.helpOptionSelect.emit(option);\r\n    }\n}\n","<mat-sidenav-container class=\"mod-side-menu-container\">\r\n    <mat-sidenav #sidenav mode=\"side\" opened role=\"navigation\" id=\"navigation-menu\" [ngClass]=\"{'mod-side-menu' : true, 'collapsed' : (!expanded && opened)}\">\r\n        <h1 mat-subheader>\r\n            {{ expanded ? config.title : \"\" }}\r\n            <mat-icon *ngIf=\"expanded\" class=\"menu-close\" (click)=\"expandMenu(!this.expanded)\">\r\n                keyboard_arrow_left\r\n            </mat-icon>\r\n            <mat-icon *ngIf=\"!expanded\" class=\"menu-open\" (click)=\"expandMenu(!this.expanded)\">\r\n                keyboard_arrow_right\r\n            </mat-icon>\r\n        </h1>\r\n\r\n        <div *ngFor=\"let section of viewableSections\">\r\n            <h1 mat-subheader>\r\n                {{ expanded ? section.name : \"\" }}\r\n            </h1>\r\n            <mat-nav-list>\r\n                <mat-list-item *ngFor=\"let item of getViewableMenuItems(section)\"\r\n                               [routerLink]=\"item.route\"\r\n                               routerLinkActive=\"active\"\r\n                               [routerLinkActiveOptions]=\"{exact: true}\"\r\n                               (keyup.enter)=\"navigateTo(item.route)\">\r\n                    <mat-icon mat-list-icon [matTooltip]=\"item.text\">{{item.icon}}</mat-icon>\r\n                    {{ expanded ? item.text : \"\"}}\r\n                </mat-list-item>\r\n            </mat-nav-list>\r\n        </div>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content [ngClass]=\"{'mod-side-menu-content' : true, 'collapsed' : (!expanded && opened)}\" role=\"main\" #mainContent tabindex=\"0\">\r\n        <ng-content></ng-content>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, OnChanges, Input, SimpleChange, ElementRef, ViewChild, Renderer2 } from '@angular/core';\nimport { ModSideMenuConfig, ModMenuItem, ModMenuSection } from '../../models/mod-side-menu-config.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { CurrentUserService } from '../../services/current-user.service';\r\n\n@Component({\n    selector: 'mod-side-menu',\n    templateUrl: './mod-side-menu.component.html',\n    styleUrls: ['./mod-side-menu.component.scss']\n})\nexport class ModSideMenuComponent implements OnInit, OnChanges {\n\n    public menuOption: string;\n    public expanded: boolean = true;\n    public opened: boolean = true;\n\n    @Input()\n    config: ModSideMenuConfig;\n\n    @ViewChild('mainContent', { static: true }) mainContentElement: ElementRef;\n    @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\n\n    constructor(\n        public router: Router,\n        private activatedRoute: ActivatedRoute,\n        private renderer: Renderer2,\n        private userService: CurrentUserService) {\n    }\n\n    public ngOnInit() {\n    }\n\n    public ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        if (changes['config'] && changes['config'].previousValue != changes['config'].currentValue) {\n            this.selectCurrentRoute();\n        }\n    }\n\n    private selectCurrentRoute(): void {\n        var urls = this.router.url.split('/');\n\n        for (let section of this.config.sections) {\n            for (let item of section.menuItems) {\n                if (urls[urls.length - 1].toString() == item.route) {\n                    this.menuOption = item.text;\n\n                    break;\n                }\n            }\n        }\n    }\n\n    // Used by menu item keyup.enter handler to provide keyboard navigation\n    public navigateTo(urlSegment: string) {\n        urlSegment = urlSegment.split('#')[0];\n        var url = \"\";\n        if (urlSegment.startsWith('/')) {\n            url = urlSegment;\n        } else {\n            url = this.activatedRoute.snapshot.url.join('/') + '/' + urlSegment;\n        }\n\n        // nav to the route, and then set focus on the main content div rather than keep focus\n        // on the nav menu itself (users will need to Shift+Tab their way back to nav menu)\n        this.router.navigateByUrl(url).then(x => {\n            if (this.mainContentElement)\n                this.mainContentElement.nativeElement.focus();\n        });\n    }\n\n    public expandMenu(expanded: boolean = true) {\n        this.expanded = expanded;\n    }\n\n    public toggleSideNav() {\n        //this.sidenav.toggle();\n        var opening = !this.opened;\n\n        if (opening) {\n            this.opened = !this.opened;\n            this.sidenav.toggle();\n        }\n        else {\n            this.sidenav.toggle().then(() => {\r\n                this.opened = !this.opened;\r\n            });\r\n        }\r\n    }\n\n    public get viewableSections(): ModMenuSection[] {\n        let sections: ModMenuSection[] = [];\r\n\r\n        this.config.sections.forEach(section => {\r\n            if (!section.allowedRoles || this.userService.isInRoles(section.allowedRoles))\r\n                sections.push(section);\r\n        });\r\n        return sections;\r\n    }\n\n    public getViewableMenuItems(section: ModMenuSection): ModMenuItem[] {\n        let items: ModMenuItem[] = [];\r\n\r\n        section.menuItems.forEach(item => {\r\n            if (!item.allowedRoles || this.userService.isInRoles(item.allowedRoles))\r\n                items.push(item);\r\n        })\r\n\r\n        return items;\r\n    }\n\n}\n","<mod-loading-overlay></mod-loading-overlay>\r\n<div class=\"mod-layout-container\">\r\n    <div class=\"layout-header\">\r\n        <!--<mod-welcome-banner>\r\n        </mod-welcome-banner>-->\r\n        <mod-header [appName]=\"appName\" (menuClick)=\"onMenuClicked()\" (userOptionSelect)=\"onUserOptionSelect($event)\" (helpOptionSelect)=\"onHelpOptionSelect($event)\">\r\n            <div *ngIf=\"config.showSearch\" style=\"display: flex; justify-content: center;\">\r\n                <input [(ngModel)]=\"searchText\" matInput placeholder=\"Search\" class=\"search-box\" (keyup.enter)=\"onSearch()\">\r\n            </div>\r\n        </mod-header>\r\n    </div>\r\n    <div class=\"layout-content\">\r\n        <mod-side-menu [config]=\"menuConfig\" #sidemenu>\r\n            <ng-content></ng-content>\r\n        </mod-side-menu>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { ModSideMenuComponent } from '../mod-side-menu/mod-side-menu.component';\r\nimport { ModSideMenuConfig } from '../../models/mod-side-menu-config.model';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\r\nimport { ModConfig } from '../../static/mod-config.const';\r\n\n@Component({\n    selector: 'mod-layout',\n    templateUrl: './mod-layout.component.html',\n    styleUrls: ['./mod-layout.component.scss']\n})\nexport class ModLayoutComponent implements OnInit {\n\n    @ViewChild('sidemenu', { static: true }) sideMenu: ModSideMenuComponent;\n\n    @Input()\n    appName: string;\n\n    @Input()\n    menuConfig: ModSideMenuConfig;\n\n    @Output()\n    userOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    helpOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    search = new EventEmitter<string>();\n\n    public searchText: string;\n\n    public config: ModFrameworkConfig;\n\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n    }\n\n    ngOnInit(): void {\n    }\n\n    public onMenuClicked(): void {\n        this.sideMenu.toggleSideNav();\r\n    }\n\n    public onUserOptionSelect(option: string): void {\n        this.userOptionSelect.emit(option);\r\n    }\n\n    public onHelpOptionSelect(option: string): void {\n        this.helpOptionSelect.emit(option);\r\n    }\n\n    public onSearch(): void {\n        this.search.emit(this.searchText);\r\n        this.searchText = '';\r\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'mod-welcome-banner',\n    templateUrl: './mod-welcome-banner.component.html',\n    styleUrls: ['./mod-welcome-banner.component.scss']\n})\nexport class ModWelcomeBanner implements OnInit {\n    @Output()\n    onLogin = new EventEmitter<any>();\n\n    @Output()\r\n    onLogout = new EventEmitter<any>();\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","<header class=\"mod-header\" role=\"banner\">\r\n    <div class=\"mod-welcome-banner\">\r\n        <div class=\"welcome-user\">\r\n            <mod-user-display></mod-user-display>\r\n        </div>\r\n    </div>\r\n</header>\r\n","<div *ngIf=\"browserFail\" class=\"container-fluid browser-check-container\">\r\n    <span class=\"fa fa-warning browser-check-icon\"></span><span class=\"browser-check-header-text\">&nbsp;&nbsp;You can't log in to this site.</span>\r\n    <div class=\"browser-check-text\">\r\n        Possible reasons for this include:\r\n        <ul>\r\n            <li>\r\n                You can't reach the site {{loginSite}}.\r\n                <ul>\r\n                    <li>Please check your network connection.</li>\r\n                </ul>\r\n            </li>\r\n            <li>\r\n                Site {{loginSite}} does not allow cross-origin scripting (CORS) from your domain {{myDomain}}.\r\n                <ul>\r\n                    <li>Please contact the administrator of {{loginSite}} and request access for your site.</li>\r\n                </ul>\r\n            </li>\r\n            <li>\r\n                Your browser doesn't accept third-party cookies from domain {{loginDomain}}.\r\n                <ul>\r\n                    <li>In your browser settings, either allow all third-party cookies, or </li>\r\n                    <li>Disallow third-party cookies, but add {{loginDomain}} as an exception.</li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n        <i>The actual error returned is \"{{browserFail}}\".<br /></i>\r\n        Please correct these problems and try again.\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CurrentUserService } from \"../../services/current-user.service\";\n\ndeclare var $: any;\n\n@Component({\n    selector: 'mod-browser-check',\n    templateUrl: './browser-check.component.html',\n    styleUrls: ['./browser-check.component.scss']\n})\n\nexport class BrowserCheckComponent implements OnInit {\n\n    constructor(private currentUserService: CurrentUserService) {\n    }\n\n    public browserFail: string;\n    public loginSite: string;\n    public loginDomain: string;\n    public myDomain: string;\n\n    ngOnInit(): void {\n        this.currentUserService.browserCheck().then(response => {\n            this.browserFail = '';\n            return;\n        }).catch(error => {\n            $(\"#loginout\").css(\"display\", \"none\");\n            this.browserFail = error;\n            this.loginSite = this.currentUserService.siteUrl;\n            this.loginDomain = this.currentUserService.domain;\n            this.myDomain = this.currentUserService.getDomain(window.location.href);\n        });\n\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n    HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap, filter } from 'rxjs/operators';\r\nimport { CurrentUserService } from './current-user.service';\r\n\r\n// Add credentials to every request.\r\n// Credit to https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private userService: CurrentUserService) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        req = req.clone({\r\n            withCredentials: true\r\n        });\r\n\r\n        return next.handle(req).pipe(\r\n            filter(event => event instanceof HttpResponse),\r\n            tap((event: HttpResponse<any>) => {\r\n                // Don't force login when making a call to claims/user\r\n                if (!this.userService.user && !event.url.endsWith(\"claims/user\"))\r\n                    this.userService.login();\r\n            }, (err: any) => {\r\n                if (err.status == 0)\r\n                    this.userService.redirectLogin();\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { CurrentUserService } from './current-user.service';\r\n\n@Injectable()\nexport class RoleGuardService implements CanActivate {\n    constructor(public userService: CurrentUserService, public router: Router) { }\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        // this will be passed from the route config\n        // on the data property\n        const expectedRoles = route.data.expectedRoles;\n\n        if (!this.userService.user || !this.userService.isInRoles(expectedRoles)\n        ) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        return true;\n    }\n}\n","import { NgModule, APP_INITIALIZER, SkipSelf, Optional, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { RouterModule } from '@angular/router';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\n// Configuration\r\nimport { ModConfig } from './static/mod-config.const';\nimport { ModFrameworkConfig } from './models/mod-framework-config.model';\r\n\r\n// Services\r\nimport { LoadingIntercepter } from './services/loading.interceptor';\r\nimport { CurrentUserService } from './services/current-user.service';\nimport { LoadingService } from './services/loading.service';\n\n// Modules\r\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CommonModule } from '@angular/common';\n\n// Components\nimport { ModLayoutComponent } from './components/mod-layout/mod-layout.component';\nimport { ModHeaderComponent } from './components/mod-header/mod-header.component';\r\nimport { ModWelcomeBanner } from './components/mod-welcome-banner/mod-welcome-banner.component';\nimport { ModSideMenuComponent } from './components/mod-side-menu/mod-side-menu.component';\nimport { ModProgressSpinnerComponent } from './components/mod-progress-spinner/mod-progress-spinner.component';\nimport { ModLoadingOverlayComponent } from './components/mod-loading-overlay/mod-loading-overlay.component';\nimport { ModUserDisplayComponent } from './components/mod-user-display/mod-user-display.component';\r\nimport { BrowserCheckComponent } from './components/browser-check/browser-check.component';\nimport { HttpRequestInterceptor } from './services/http-request.interceptor';\r\nimport { RoleGuardService } from './services/role-guard.service';\r\n\r\n\nexport function initiateSingleSignOn(userService: CurrentUserService) {\n    return () => {\r\n        var auth = sessionStorage.getItem(\"authenticating\")?.toString();\r\n\r\n        if (auth) {\r\n            return userService.login().then(response => {\r\n                sessionStorage.removeItem(\"authenticating\");\r\n            });\r\n        }\r\n        else {\r\n            userService.redirectLogin();\r\n            let promise = new Promise((resolve, reject) => {\r\n                reject(\"Authenticating\");\r\n            });\r\n\r\n            return promise;\r\n        }\r\n    }\r\n}\n\n@NgModule({\n    declarations: [\n        ModWelcomeBanner,\n        ModSideMenuComponent,\n        ModLayoutComponent,\n        ModHeaderComponent,\n        ModProgressSpinnerComponent,\n        ModLoadingOverlayComponent,\n        ModUserDisplayComponent,\n        BrowserCheckComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\r\n        ReactiveFormsModule,\n        HttpClientModule,\n        RouterModule,\n        MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule,\n    ],\n    providers: [\n    ],\n    exports: [\n        ModHeaderComponent,\n        ModLayoutComponent,\n        ModLoadingOverlayComponent,\n        ModProgressSpinnerComponent,\n        ModSideMenuComponent,\n        ModUserDisplayComponent,\n        ModWelcomeBanner,\n        BrowserCheckComponent,\n    ]\n})\nexport class ModFrameworkModule {\n    static forRoot(config: ModFrameworkConfig = null): ModuleWithProviders<ModFrameworkModule> {\n        return {\r\n            ngModule: ModFrameworkModule,\r\n            providers: [\r\n                {\r\n                    provide: ModConfig,\r\n                    useValue: config\r\n                },\r\n                CurrentUserService,\n                {\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: LoadingIntercepter,\r\n                    multi: true\r\n                },\n                LoadingService,\r\n                // see https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: HttpRequestInterceptor,\r\n                    multi: true\r\n                },\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: initiateSingleSignOn,\r\n                    multi: true,\r\n                    deps: [CurrentUserService]\r\n                },\r\n                RoleGuardService,\r\n            ]\r\n        }\r\n    }\n\n    constructor(@Optional() @SkipSelf() parentModule: ModFrameworkModule) {\n        if (parentModule) {\n            throw new Error('ModFrameworkModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n","import { IDto } from '../interfaces/dto.interface';\r\n\r\nexport abstract class DtoBase implements IDto {\r\n    id: number = 0;\r\n    createdBy: string;\r\n    createdTime: Date;\r\n    modifiedBy: string;\r\n    modifiedTime: Date;\r\n}\r\n","export class ModSideMenuConfig {\r\n    public title: string;\r\n\r\n    public sections: ModMenuSection[] = [];\r\n\r\n    public constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class ModMenuSection {\r\n    public name: string = \"\";\r\n    public shortName: string = \"\";\r\n    public visible: boolean = true;\r\n    public allowedRoles: string[] = [];\r\n    public menuItems: ModMenuItem[] = [];    \r\n}\r\n\r\nexport class ModMenuItem {\r\n    public text: string;\r\n    public icon: string;\r\n    public route: string;\r\n    public defaultState: string;\r\n    public allowedRoles: string[] = [];\r\n}\r\n","export class UserInfo {\r\n    uniqueName: string;\r\n    upn: string;\r\n    displayName: string;\r\n    emailAddress: string;\r\n    userProfileUrl: string;\r\n\r\n    public constructor(uniqueName: string, upn: string) {\r\n        this.uniqueName = uniqueName;\r\n        this.upn = upn;\r\n        console.log(uniqueName + '[]asdf');\r\n        console.log(uniqueName == 'LOGIN\\\\kuennen_s');\r\n        this.displayName = (uniqueName == \"LOGIN\\\\kuennen_s\") ? \"Kuennen, Steve (Contractor)\" : uniqueName;\r\n        this.userProfileUrl = \"\";\r\n    }\r\n}\r\n","export class Logging {\r\n    static logToConsole: boolean = true;\r\n\r\n    static log(val: any) {\r\n        if (this.logToConsole) \r\n            console.log(val);\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { IDto } from '../interfaces/dto.interface';\r\nimport { Logging } from '../static/logging.static';\r\n\r\nexport abstract class ModPromiseServiceBase<T extends IDto> {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public url: string,\r\n        public endpoint: string,\n        private TCreator: { new(): T; }) {\n\n        this.url = (url.endsWith('/') ? url.slice(0, -1) : url) + '/api';\n    }\r\n\r\n    public save(item: T): Promise<T> {\r\n        if (item.id <= 0)\r\n            return this.create(item);\r\n        else\r\n            return this.update(item);\r\n    }\r\n\r\n    public getAll(params?: HttpParams): Promise<T[]> {\r\n        var url = `${this.url}/${this.endpoint}`;\r\n\r\n        return this.http\r\n            .get<T[]>(url, {params})\r\n            .toPromise()\r\n            .then(response => {\r\n                var data: T[] = [];\n\n                response.forEach(x => {\n                    var obj = this.formatResponse(x);\n                    data.push(obj);\n                });\r\n\r\n                return data;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public create(item: T): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}`;\r\n\r\n        return this.http.post<T>(url, item)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public get(id: number): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}/${id}`;\r\n\r\n        return this.http.get<T>(url)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public update(item: T): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}/${item.id}`;\r\n\r\n        return this.http.put<T>(url, item)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public delete(id: number): Promise<any> {\r\n        return this.http.delete(`${this.url}/${this.endpoint}/${id}`).toPromise();\r\n    }\n\r\n    // Override to fully instantiate child objects.  Be sure to call super.formatResponse first to instantiate the parent object.\r\n    formatResponse(data: T): T {\n        return Object.assign(new this.TCreator(), data);\r\n    }\r\n\r\n    handleError(error: Response | any): Promise<any> {\r\n        Logging.log(error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\r\n","/*\n * Public API Surface of mod-framework\n */\n\nexport * from './lib/mod-framework.module';\n\nexport * from './lib/interfaces/dto.interface';\n\nexport * from './lib/models/dto-base.model';\nexport * from './lib/models/mod-framework-config.model';\nexport * from './lib/models/mod-side-menu-config.model';\nexport * from './lib/models/user-info.model';\n\nexport * from './lib/components/mod-header/mod-header.component';\nexport * from './lib/components/mod-layout/mod-layout.component';\nexport * from './lib/components/mod-loading-overlay/mod-loading-overlay.component';\nexport * from './lib/components/mod-progress-spinner/mod-progress-spinner.component';\nexport * from './lib/components/mod-side-menu/mod-side-menu.component';\nexport * from './lib/components/mod-user-display/mod-user-display.component';\nexport * from './lib/components/mod-welcome-banner/mod-welcome-banner.component';\nexport * from './lib/components/browser-check/browser-check.component';\n\nexport * from './lib/services/current-user.service';\nexport * from './lib/services/loading.interceptor';\nexport * from './lib/services/loading.service';\nexport * from './lib/services/mod-promise.service.base';\nexport * from './lib/services/role-guard.service';\n\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}