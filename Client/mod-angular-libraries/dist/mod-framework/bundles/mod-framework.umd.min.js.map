{"version":3,"sources":["../../../projects/mod-framework/src/lib/static/mod-config.const.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/mod-framework/src/lib/models/mod-framework-config.model.ts","../../../projects/mod-framework/src/lib/services/loading.service.ts","../../../projects/mod-framework/src/lib/services/loading.interceptor.ts","../../../projects/mod-framework/src/lib/models/current-user.model.ts","../../../projects/mod-framework/src/lib/services/current-user.service.ts","../../../projects/mod-framework/src/lib/components/mod-progress-spinner/mod-progress-spinner.component.html","../../../projects/mod-framework/src/lib/components/mod-progress-spinner/mod-progress-spinner.component.ts","../../../projects/mod-framework/src/lib/components/mod-loading-overlay/mod-loading-overlay.component.html","../../../projects/mod-framework/src/lib/components/mod-loading-overlay/mod-loading-overlay.component.ts","../../../projects/mod-framework/src/lib/components/mod-user-display/mod-user-display.component.html","../../../projects/mod-framework/src/lib/components/mod-user-display/mod-user-display.component.ts","../../../projects/mod-framework/src/lib/components/mod-header/mod-header.component.html","../../../projects/mod-framework/src/lib/components/mod-header/mod-header.component.ts","../../../projects/mod-framework/src/lib/components/mod-side-menu/mod-side-menu.component.html","../../../projects/mod-framework/src/lib/components/mod-side-menu/mod-side-menu.component.ts","../../../projects/mod-framework/src/lib/components/mod-layout/mod-layout.component.html","../../../projects/mod-framework/src/lib/components/mod-layout/mod-layout.component.ts","../../../projects/mod-framework/src/lib/components/mod-welcome-banner/mod-welcome-banner.component.ts","../../../projects/mod-framework/src/lib/components/browser-check/browser-check.component.html","../../../projects/mod-framework/src/lib/components/mod-welcome-banner/mod-welcome-banner.component.html","../../../projects/mod-framework/src/lib/components/browser-check/browser-check.component.ts","../../../projects/mod-framework/src/lib/services/http-request.interceptor.ts","../../../projects/mod-framework/src/lib/services/role-guard.service.ts","../../../projects/mod-framework/src/lib/mod-framework.module.ts","../../../projects/mod-framework/src/lib/models/dto-base.model.ts","../../../projects/mod-framework/src/lib/models/mod-side-menu-config.model.ts","../../../projects/mod-framework/src/lib/models/user-info.model.ts","../../../projects/mod-framework/src/lib/static/logging.static.ts","../../../projects/mod-framework/src/lib/services/mod-promise.service.base.ts"],"names":["ModConfig","InjectionToken","Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","this","showHelp","helpOptions","showSearch","userOptions","profileUrl","config","isLoading","BehaviorSubject","loadingDelay","LoadingService","i0","ɵɵinject","factory","ɵfac","providedIn","Injectable","Inject","LoadingIntercepter","loadingService","requests","urlsToSkip","_b","_c","x","push","prototype","removeRequest","req","indexOf","splice","intercept","_this","skipThisRequest","handle","setTimeout","Observable","observer","subscription","subscribe","event","HttpResponse","err","error","complete","unsubscribe","matched","url","match","CurrentUser","CurrentUserService","http","serviceUrl","setCookieUrl","checkCookieUrl","noOpUrl","cookieName","_browserOk","loginSiteUrl","siteUrl","getDomain","parseUri","host","defineProperty","_user","endsWith","browserCheck","get","withCredentials","toPromise","then","response","catch","Promise","reject","domain","preFlight","options","handleError","redirectLogin","returnUrl","window","location","href","sessionStorage","setItem","open","login","loginPromise","user","assign","logout","message","isInRole","role","undefined","roles","find","isInRoles","returnValue","forEach","i0.ɵɵelementContainerStart","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵelement","ctx_r2","mode","color","strokeWidth","i1","HttpClient","ModProgressSpinnerComponent","diameter","overlay","ngOnInit","selectors","inputs","decls","vars","consts","template","rf","ctx","_r1","Component","selector","templateUrl","styleUrls","Input","ModLoadingOverlayComponent","showProgressSpinner","i0.ɵɵtext","i0.ɵɵlistener","i0.ɵɵtextInterpolate","_r2","ɵɵdirectiveInject","ModUserDisplayComponent","userService","showUser","selectOption","EventEmitter","optionSelected","option","emit","outputs","Output","ModHeaderComponent","menuClick","userOptionSelect","helpOptionSelect","onMenuClick","onUserOptionSelect","appName","ngContentSelectors","i0.ɵɵprojection","$event","ɵɵpureFunction0","_c2","i0.ɵɵtextInterpolate1","ModSideMenuComponent","router","activatedRoute","renderer","expanded","opened","ngOnChanges","changes","previousValue","currentValue","selectCurrentRoute","urls","split","sections","_d","section","_e","e_2","menuItems","_f","item","toString","route","menuOption","text","navigateTo","urlSegment","startsWith","snapshot","join","navigateByUrl","mainContentElement","nativeElement","focus","expandMenu","toggleSideNav","sidenav","toggle","allowedRoles","getViewableMenuItems","items","i1$1","Router","ActivatedRoute","Renderer2","viewQuery","ViewChild","static","ɵɵrestoreView","_r3_1","ɵɵnextContext","onSearch","ModLayoutComponent","search","onMenuClicked","sideMenu","onHelpOptionSelect","searchText","menuConfig","ModWelcomeBanner","onLogin","onLogout","i0.ɵɵtextInterpolate2","BrowserCheckComponent","currentUserService","browserFail","$","css","loginSite","loginDomain","myDomain","HttpRequestInterceptor","clone","pipe","filter","tap","status","RoleGuardService","canActivate","expectedRoles","data","navigate","initiateSingleSignOn","_a","getItem","removeItem","resolve","ModFrameworkModule","parentModule","Error","forRoot","ngModule","providers","provide","useValue","HTTP_INTERCEPTORS","useClass","multi","APP_INITIALIZER","useFactory","deps","imports","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","RouterModule","MatIconModule","MatDividerModule","MatListModule","MatSidenavModule","MatToolbarModule","MatMenuModule","MatButtonModule","MatProgressSpinnerModule","MatAutocompleteModule","MatTooltipModule","MatFormFieldModule","MatInputModule","MatSelectModule","declarations","exports","NgModule","decorators","Optional","SkipSelf","id","name","shortName","visible","uniqueName","upn","console","log","displayName","userProfileUrl","Logging","val","logToConsole","ModPromiseServiceBase","endpoint","TCreator","slice","save","update","getAll","params","obj","formatResponse","post","put","delete"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\n\r\nexport const ModConfig = new InjectionToken<ModFrameworkConfig>('modConfig');\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class ModFrameworkConfig {\r\n    loginSiteUrl: string;\r\n    loadingDelay: number;\r\n    urlsToSkip: string[];\r\n    showHelp: boolean = false;\r\n    helpOptions: string[] = [];\r\n    showSearch: boolean = false;\r\n    userOptions: string[] = [];\r\n    profileUrl: string = 'https://portfolio.staging.omb.gov/portfolio';\r\n}\r\n","//loading.service.ts\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\nimport { ModConfig } from '../static/mod-config.const';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n    public isLoading = new BehaviorSubject(false);\r\n    public loadingDelay: number = 500;\r\n\r\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\r\n        this.loadingDelay = config ? config.loadingDelay : 500;\r\n    }\r\n}\r\n","// loader.interceptors.ts\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse, HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from './loading.service';\r\nimport { ModConfig } from '../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../public-api';\r\n\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadingIntercepter implements HttpInterceptor {\n    private requests: HttpRequest<any>[] = [];\r\n\r\n    private urlsToSkip: string[] = ['frameworkapi/maxpicker/search'];\r\n\r\n    constructor(private loadingService: LoadingService, @Inject(ModConfig) config: ModFrameworkConfig) {\r\n        for (let x of config.urlsToSkip)\r\n            this.urlsToSkip.push(x);\r\n    }\r\n\r\n    removeRequest(req: HttpRequest<any>) {\r\n        const i = this.requests.indexOf(req);\r\n        if (i >= 0) {\r\n            this.requests.splice(i, 1);\r\n        }\r\n        this.loadingService.isLoading.next(this.requests.length > 0);\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.skipThisRequest(req)) {\n            return next.handle(req);\n        } else {\n            this.requests.push(req);\n            setTimeout(() => {\n                if (this.requests.length > 0)\r\n                    this.loadingService.isLoading.next(true);\n            }, this.loadingService.loadingDelay);\n            \r\n            return Observable.create(observer => {\r\n                const subscription = next.handle(req)\r\n                    .subscribe(\r\n                        event => {\r\n                            if (event instanceof HttpResponse) {\r\n                                this.removeRequest(req);\r\n                                observer.next(event);\r\n                            }\r\n                        },\r\n                        err => {\r\n                            this.removeRequest(req);\r\n                            observer.error(err);\r\n                        },\r\n                        () => {\r\n                            this.removeRequest(req);\r\n                            observer.complete();\r\n                        });\r\n                // remove request from queue when cancelled\r\n                return () => {\r\n                    this.removeRequest(req);\r\n                    subscription.unsubscribe();\r\n                };\r\n            });\n        }\r\n    }\n\n    private skipThisRequest(req: HttpRequest<any>): boolean {\n        var matched = false;\n        for (let url of this.urlsToSkip) {\n            matched = req.url.match(url) != null;\n            if (matched) break;\r\n        }\n        return matched;\r\n    }\r\n}\r\n","export class CurrentUser {\r\n    userId: string;\r\n    upn: string;\r\n    emailAddress: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    title: string;\r\n    phone: string;\r\n    groups: string[];\r\n    roles: string[];\r\n    displayName: string;\r\n}\n","import { Injectable, Inject } from '@angular/core';\r\nimport { CurrentUser } from '../models/current-user.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport * as parseUri from 'parse-uri';\r\nimport { ModConfig } from '../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrentUserService {\r\n    public loginPromise: Promise<CurrentUser>;\r\n\r\n    private serviceUrl = '';\r\n    private setCookieUrl = '';\r\n    private checkCookieUrl = '';\r\n    private noOpUrl = '';\r\n    private cookieName = 'CookieSettingsCheck';\r\n\r\n    private _user: CurrentUser;\r\n    private _browserOk: boolean = false;\r\n\r\n    private loginSiteUrl = \"https://localhost:44374\";\r\n\r\n    constructor(private http: HttpClient, @Inject(ModConfig) config: ModFrameworkConfig) {\r\n        this.loginSiteUrl = config ? config.loginSiteUrl : 'https://localhost:44374';\r\n\r\n        this.serviceUrl = this.siteUrl + \"api/claims/user\";\r\n        this.setCookieUrl = this.siteUrl + \"api/health/setcookie\";\r\n        this.checkCookieUrl = this.siteUrl + \"api/health/checkcookie\";\r\n        this.noOpUrl = this.siteUrl + \"api/health/noop\";\r\n    }\r\n\r\n    public getDomain(url): string {\r\n        var u = parseUri(url);\r\n        return u.host;\r\n    }\r\n\r\n    public get user(): CurrentUser {\r\n        return this._user;\r\n    }\r\n\r\n    public get browserOk(): boolean {\r\n        return this._browserOk;\r\n    }\r\n\r\n    public get domain(): string {\r\n        return this.getDomain(this.loginSiteUrl);\r\n    }\r\n\r\n    public get siteUrl(): string {\r\n        return this.loginSiteUrl + (this.loginSiteUrl.endsWith(\"/\") ? \"\" : \"/\");\r\n    }\r\n\r\n    browserCheck(): Promise<boolean> {\r\n        return this.http.get(this.noOpUrl, { withCredentials: false })\r\n            .toPromise()\r\n            .then(() => {\r\n                return this.http.get(this.setCookieUrl)\r\n                    .toPromise()\r\n                    .then(response => {\r\n                        return this.http.get(this.checkCookieUrl)\r\n                            .toPromise().then(response => {\r\n                                this._browserOk = true;\r\n                                return true;\r\n                            })\r\n                    })\r\n                    .catch((error: Response) => {\r\n                        this._browserOk = false;\r\n                        this._user = null;\r\n                        return Promise.reject<boolean>(\"Domain \" + this.getDomain(this.setCookieUrl) + \" probably doesn't allow CORS from domain \" + this.domain);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                this._browserOk = false;\r\n                this._user = null;\r\n                return Promise.reject<boolean>(\"Can't reach site \" + this.loginSiteUrl);\r\n            });\r\n    }\r\n\r\n    preFlight(): Promise<any> {\r\n        return this.http.options(this.serviceUrl)\r\n            .toPromise()\r\n            .then(response => { return response; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    redirectLogin() {\r\n        var returnUrl = window.location.href;\r\n\r\n        sessionStorage.setItem('authenticating', 'authenticating');\r\n        var url = this.siteUrl + 'api/login' + \"?ReturnUrl=\" + returnUrl;\r\n        window.open(url, '_self');\r\n    }\r\n\r\n    login(): Promise<CurrentUser> {\r\n        this.loginPromise = this.http.get(this.serviceUrl)\r\n            .toPromise()\r\n            .then((response: CurrentUser) => {\r\n                var user: CurrentUser;\r\n                user = Object.assign(new CurrentUser(), response);\r\n                this._user = user;\r\n                return user;\r\n            })\r\n            .catch(error => {\r\n                return this.handleError(error);\r\n            });\r\n        return this.loginPromise;\r\n    }\r\n\r\n    logout() {\r\n        this._user = null;\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n    public isInRole(role: string): boolean {\r\n        return this.user.roles.find(x => x == role) !== undefined;\r\n    }\r\n\r\n    public isInRoles(roles: string[]): boolean {\r\n        var returnValue = false;\r\n\r\n        roles.forEach(x => {\r\n            returnValue = returnValue || this.isInRole(x);\r\n        });\r\n\r\n        return returnValue;\r\n    }\r\n}\r\n","<ng-container *ngIf=\"overlay;else progressSpinner\">\r\n    <div class=\"overlay\">\r\n        <div class=\"center\">\r\n            <ng-template [ngTemplateOutlet]=\"progressSpinner\"></ng-template>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<ng-template #progressSpinner>\r\n    <mat-progress-spinner [diameter]=\"diameter\"\r\n                          [mode]=\"mode\"\r\n                          [color]=\"color\"\r\n                          [strokeWidth]=\"strokeWidth\"\r\n                          [value]=\"value\">\r\n    </mat-progress-spinner>\r\n</ng-template>\r\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'mod-progress-spinner',\n    templateUrl: './mod-progress-spinner.component.html',\n    styleUrls: ['./mod-progress-spinner.component.scss']\n})\nexport class ModProgressSpinnerComponent implements OnInit {\n\n    @Input() value: number = 100;\n    @Input() diameter: number = 100;\n    @Input() mode: string = \"indeterminate\";\n    @Input() strokeWidth: number = 10;\n    @Input() overlay: boolean = false;\n    @Input() color: string = \"primary\";\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<mod-progress-spinner *ngIf=\"showProgressSpinner\" [overlay]=\"true\"></mod-progress-spinner>\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingService } from '../../services/loading.service';\r\n\n@Component({\n    selector: 'mod-loading-overlay',\n    templateUrl: './mod-loading-overlay.component.html',\n    styleUrls: ['./mod-loading-overlay.component.scss']\n})\nexport class ModLoadingOverlayComponent implements OnInit {\n\n    public showProgressSpinner: boolean = false;\n\n    constructor(private loadingService: LoadingService) {\n        this.loadingService.isLoading.subscribe((isLoading) => {\n            if (isLoading) {\n                this.showProgressSpinner = true;\n            }\n            else {\n                this.showProgressSpinner = false;\n            }\n        })\n    }\n    ngOnInit(): void {\n    }\n\n}\n","<div *ngIf=\"user\">\r\n    Welcome \r\n    <span style=\"padding-right: 5px;\">{{ user.displayName }}</span>\r\n    <ng-container *ngIf=\"showUser;else showMenu\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"mod-user-icon\" aria-label=\"User Menu\">\r\n            <mat-icon>account_circle</mat-icon>\r\n        </button>\r\n    </ng-container>\r\n    <ng-template #showMenu>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"mat-icon-button\" aria-label=\"User Menu\">\r\n            <mat-icon>keyboard_arrow_down</mat-icon>\r\n        </button>\r\n    </ng-template>\r\n    <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item *ngFor=\"let option of config.userOptions\" (click)=\"optionSelected(option)\">{{ option }}</button>\r\n    </mat-menu>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { CurrentUserService } from '../../services/current-user.service';\nimport { ModConfig } from '../../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\r\n\n@Component({\n    selector: 'mod-user-display',\n    templateUrl: './mod-user-display.component.html',\n    styleUrls: ['./mod-user-display.component.scss']\n})\nexport class ModUserDisplayComponent implements OnInit {\n\n    @Input()\n    showUser: boolean = false;\n\n    @Output()\n    selectOption = new EventEmitter<string>();\n\n\n    public config: ModFrameworkConfig;\n\n    constructor(private userService: CurrentUserService, @Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n        this.config.userOptions.push('User Profile');\n    }\n\n    ngOnInit() {\n        \n    }\n\n    get user() {\n        return this.userService.user;\n    }\n\n    public optionSelected(option: string) {\n        if (option == \"User Profile\") {\r\n            window.open(this.config.profileUrl, '_blank')\r\n        }\r\n        else {\r\n            this.selectOption.emit(option);\r\n        }\r\n    }\n}\n","<mat-toolbar class=\"mod-header\">\r\n    <button mat-icon-button (click)=\"onMenuClick()\">\r\n        <mat-icon>\r\n            menu\r\n        </mat-icon>\r\n    </button>\r\n\r\n    <a class=\"logo-text-mark\" [routerLink]=\"['/']\">\r\n        <img class=\"mod-logo\" src=\"/assets/US-OfficeOfManagementAndBudget-Seal.png\" tabindex=\"-1\" />\r\n        <div tabindex=\"-1\" alt=\"Textmark\" class=\"text-mark\">{{ appName }}</div>\r\n    </a>\r\n\r\n    <span class=\"fill-remaining-space\">\r\n        <ng-content></ng-content>\r\n    </span>\r\n\r\n    <div class=\"welcome-user\">\r\n        <mod-user-display [showUser]=\"true\" (selectOption)=\"onUserOptionSelect($event)\"></mod-user-display>\r\n        <div *ngIf=\"config.showHelp\">\r\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Help Menu\">\r\n                <mat-icon>help</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item *ngFor=\"let option of config.helpOptions\" (click)=\"optionSelected(option)\">{{ option }}</button>\r\n            </mat-menu>\r\n        </div>\r\n    </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { ModConfig } from '../../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\n\n@Component({\n    selector: 'mod-header',\n    templateUrl: './mod-header.component.html',\n    styleUrls: ['./mod-header.component.scss']\n})\nexport class ModHeaderComponent implements OnInit {\n\n    @Input()\n    appName: string;\n\n    @Output()\n    menuClick = new EventEmitter<any>();\n\n    @Output()\n    userOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    helpOptionSelect = new EventEmitter<string>();\n\n    public config: ModFrameworkConfig;\n\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n    }\n\n    ngOnInit(): void {\n    }\n\n    public onMenuClick(): void {\n        this.menuClick.emit();\r\n    }\n\n    public onUserOptionSelect(option: string): void {\n        this.userOptionSelect.emit(option);\r\n    }\n\n    public optionSelected(option: string): void {\n        this.helpOptionSelect.emit(option);\r\n    }\n}\n","<mat-sidenav-container class=\"mod-side-menu-container\">\r\n    <mat-sidenav #sidenav mode=\"side\" opened role=\"navigation\" id=\"navigation-menu\" [ngClass]=\"{'mod-side-menu' : true, 'collapsed' : (!expanded && opened)}\">\r\n        <h1 mat-subheader>\r\n            {{ expanded ? config.title : \"\" }}\r\n            <mat-icon *ngIf=\"expanded\" class=\"menu-close\" (click)=\"expandMenu(!this.expanded)\">\r\n                keyboard_arrow_left\r\n            </mat-icon>\r\n            <mat-icon *ngIf=\"!expanded\" class=\"menu-open\" (click)=\"expandMenu(!this.expanded)\">\r\n                keyboard_arrow_right\r\n            </mat-icon>\r\n        </h1>\r\n\r\n        <div *ngFor=\"let section of viewableSections\">\r\n            <h1 mat-subheader>\r\n                {{ expanded ? section.name : \"\" }}\r\n            </h1>\r\n            <mat-nav-list>\r\n                <mat-list-item *ngFor=\"let item of getViewableMenuItems(section)\"\r\n                               [routerLink]=\"item.route\"\r\n                               routerLinkActive=\"active\"\r\n                               [routerLinkActiveOptions]=\"{exact: true}\"\r\n                               (keyup.enter)=\"navigateTo(item.route)\">\r\n                    <mat-icon mat-list-icon [matTooltip]=\"item.text\">{{item.icon}}</mat-icon>\r\n                    {{ expanded ? item.text : \"\"}}\r\n                </mat-list-item>\r\n            </mat-nav-list>\r\n        </div>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content [ngClass]=\"{'mod-side-menu-content' : true, 'collapsed' : (!expanded && opened)}\" role=\"main\" #mainContent tabindex=\"0\">\r\n        <ng-content></ng-content>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, OnChanges, Input, SimpleChange, ElementRef, ViewChild, Renderer2 } from '@angular/core';\nimport { ModSideMenuConfig, ModMenuItem, ModMenuSection } from '../../models/mod-side-menu-config.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { CurrentUserService } from '../../services/current-user.service';\r\n\n@Component({\n    selector: 'mod-side-menu',\n    templateUrl: './mod-side-menu.component.html',\n    styleUrls: ['./mod-side-menu.component.scss']\n})\nexport class ModSideMenuComponent implements OnInit, OnChanges {\n\n    public menuOption: string;\n    public expanded: boolean = true;\n    public opened: boolean = true;\n\n    @Input()\n    config: ModSideMenuConfig;\n\n    @ViewChild('mainContent', { static: true }) mainContentElement: ElementRef;\n    @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\n\n    constructor(\n        public router: Router,\n        private activatedRoute: ActivatedRoute,\n        private renderer: Renderer2,\n        private userService: CurrentUserService) {\n    }\n\n    public ngOnInit() {\n    }\n\n    public ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        if (changes['config'] && changes['config'].previousValue != changes['config'].currentValue) {\n            this.selectCurrentRoute();\n        }\n    }\n\n    private selectCurrentRoute(): void {\n        var urls = this.router.url.split('/');\n\n        for (let section of this.config.sections) {\n            for (let item of section.menuItems) {\n                if (urls[urls.length - 1].toString() == item.route) {\n                    this.menuOption = item.text;\n\n                    break;\n                }\n            }\n        }\n    }\n\n    // Used by menu item keyup.enter handler to provide keyboard navigation\n    public navigateTo(urlSegment: string) {\n        urlSegment = urlSegment.split('#')[0];\n        var url = \"\";\n        if (urlSegment.startsWith('/')) {\n            url = urlSegment;\n        } else {\n            url = this.activatedRoute.snapshot.url.join('/') + '/' + urlSegment;\n        }\n\n        // nav to the route, and then set focus on the main content div rather than keep focus\n        // on the nav menu itself (users will need to Shift+Tab their way back to nav menu)\n        this.router.navigateByUrl(url).then(x => {\n            if (this.mainContentElement)\n                this.mainContentElement.nativeElement.focus();\n        });\n    }\n\n    public expandMenu(expanded: boolean = true) {\n        this.expanded = expanded;\n    }\n\n    public toggleSideNav() {\n        //this.sidenav.toggle();\n        var opening = !this.opened;\n\n        if (opening) {\n            this.opened = !this.opened;\n            this.sidenav.toggle();\n        }\n        else {\n            this.sidenav.toggle().then(() => {\r\n                this.opened = !this.opened;\r\n            });\r\n        }\r\n    }\n\n    public get viewableSections(): ModMenuSection[] {\n        let sections: ModMenuSection[] = [];\r\n\r\n        this.config.sections.forEach(section => {\r\n            if (!section.allowedRoles || this.userService.isInRoles(section.allowedRoles))\r\n                sections.push(section);\r\n        });\r\n        return sections;\r\n    }\n\n    public getViewableMenuItems(section: ModMenuSection): ModMenuItem[] {\n        let items: ModMenuItem[] = [];\r\n\r\n        section.menuItems.forEach(item => {\r\n            if (!item.allowedRoles || this.userService.isInRoles(item.allowedRoles))\r\n                items.push(item);\r\n        })\r\n\r\n        return items;\r\n    }\n\n}\n","<mod-loading-overlay></mod-loading-overlay>\r\n<div class=\"mod-layout-container\">\r\n    <div class=\"layout-header\">\r\n        <!--<mod-welcome-banner>\r\n        </mod-welcome-banner>-->\r\n        <mod-header [appName]=\"appName\" (menuClick)=\"onMenuClicked()\" (userOptionSelect)=\"onUserOptionSelect($event)\" (helpOptionSelect)=\"onHelpOptionSelect($event)\">\r\n            <div *ngIf=\"config.showSearch\" style=\"display: flex; justify-content: center;\">\r\n                <input [(ngModel)]=\"searchText\" matInput placeholder=\"Search\" class=\"search-box\" (keyup.enter)=\"onSearch()\">\r\n            </div>\r\n        </mod-header>\r\n    </div>\r\n    <div class=\"layout-content\">\r\n        <mod-side-menu [config]=\"menuConfig\" #sidemenu>\r\n            <ng-content></ng-content>\r\n        </mod-side-menu>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { ModSideMenuComponent } from '../mod-side-menu/mod-side-menu.component';\r\nimport { ModSideMenuConfig } from '../../models/mod-side-menu-config.model';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\r\nimport { ModConfig } from '../../static/mod-config.const';\r\n\n@Component({\n    selector: 'mod-layout',\n    templateUrl: './mod-layout.component.html',\n    styleUrls: ['./mod-layout.component.scss']\n})\nexport class ModLayoutComponent implements OnInit {\n\n    @ViewChild('sidemenu', { static: true }) sideMenu: ModSideMenuComponent;\n\n    @Input()\n    appName: string;\n\n    @Input()\n    menuConfig: ModSideMenuConfig;\n\n    @Output()\n    userOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    helpOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    search = new EventEmitter<string>();\n\n    public searchText: string;\n\n    public config: ModFrameworkConfig;\n\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n    }\n\n    ngOnInit(): void {\n    }\n\n    public onMenuClicked(): void {\n        this.sideMenu.toggleSideNav();\r\n    }\n\n    public onUserOptionSelect(option: string): void {\n        this.userOptionSelect.emit(option);\r\n    }\n\n    public onHelpOptionSelect(option: string): void {\n        this.helpOptionSelect.emit(option);\r\n    }\n\n    public onSearch(): void {\n        this.search.emit(this.searchText);\r\n        this.searchText = '';\r\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'mod-welcome-banner',\n    templateUrl: './mod-welcome-banner.component.html',\n    styleUrls: ['./mod-welcome-banner.component.scss']\n})\nexport class ModWelcomeBanner implements OnInit {\n    @Output()\n    onLogin = new EventEmitter<any>();\n\n    @Output()\r\n    onLogout = new EventEmitter<any>();\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","<div *ngIf=\"browserFail\" class=\"container-fluid browser-check-container\">\r\n    <span class=\"fa fa-warning browser-check-icon\"></span><span class=\"browser-check-header-text\">&nbsp;&nbsp;You can't log in to this site.</span>\r\n    <div class=\"browser-check-text\">\r\n        Possible reasons for this include:\r\n        <ul>\r\n            <li>\r\n                You can't reach the site {{loginSite}}.\r\n                <ul>\r\n                    <li>Please check your network connection.</li>\r\n                </ul>\r\n            </li>\r\n            <li>\r\n                Site {{loginSite}} does not allow cross-origin scripting (CORS) from your domain {{myDomain}}.\r\n                <ul>\r\n                    <li>Please contact the administrator of {{loginSite}} and request access for your site.</li>\r\n                </ul>\r\n            </li>\r\n            <li>\r\n                Your browser doesn't accept third-party cookies from domain {{loginDomain}}.\r\n                <ul>\r\n                    <li>In your browser settings, either allow all third-party cookies, or </li>\r\n                    <li>Disallow third-party cookies, but add {{loginDomain}} as an exception.</li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n        <i>The actual error returned is \"{{browserFail}}\".<br /></i>\r\n        Please correct these problems and try again.\r\n    </div>\r\n</div>\r\n","<header class=\"mod-header\" role=\"banner\">\r\n    <div class=\"mod-welcome-banner\">\r\n        <div class=\"welcome-user\">\r\n            <mod-user-display></mod-user-display>\r\n        </div>\r\n    </div>\r\n</header>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CurrentUserService } from \"../../services/current-user.service\";\n\ndeclare var $: any;\n\n@Component({\n    selector: 'mod-browser-check',\n    templateUrl: './browser-check.component.html',\n    styleUrls: ['./browser-check.component.scss']\n})\n\nexport class BrowserCheckComponent implements OnInit {\n\n    constructor(private currentUserService: CurrentUserService) {\n    }\n\n    public browserFail: string;\n    public loginSite: string;\n    public loginDomain: string;\n    public myDomain: string;\n\n    ngOnInit(): void {\n        this.currentUserService.browserCheck().then(response => {\n            this.browserFail = '';\n            return;\n        }).catch(error => {\n            $(\"#loginout\").css(\"display\", \"none\");\n            this.browserFail = error;\n            this.loginSite = this.currentUserService.siteUrl;\n            this.loginDomain = this.currentUserService.domain;\n            this.myDomain = this.currentUserService.getDomain(window.location.href);\n        });\n\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n    HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap, filter } from 'rxjs/operators';\r\nimport { CurrentUserService } from './current-user.service';\r\n\r\n// Add credentials to every request.\r\n// Credit to https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private userService: CurrentUserService) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        req = req.clone({\r\n            withCredentials: true\r\n        });\r\n\r\n        return next.handle(req).pipe(\r\n            filter(event => event instanceof HttpResponse),\r\n            tap((event: HttpResponse<any>) => {\r\n                // Don't force login when making a call to claims/user\r\n                if (!this.userService.user && !event.url.endsWith(\"claims/user\"))\r\n                    this.userService.login();\r\n            }, (err: any) => {\r\n                if (err.status == 0)\r\n                    this.userService.redirectLogin();\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { CurrentUserService } from './current-user.service';\r\n\n@Injectable()\nexport class RoleGuardService implements CanActivate {\n    constructor(public userService: CurrentUserService, public router: Router) { }\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        // this will be passed from the route config\n        // on the data property\n        const expectedRoles = route.data.expectedRoles;\n\n        if (!this.userService.user || !this.userService.isInRoles(expectedRoles)\n        ) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        return true;\n    }\n}\n","import { NgModule, APP_INITIALIZER, SkipSelf, Optional, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { RouterModule } from '@angular/router';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\n// Configuration\r\nimport { ModConfig } from './static/mod-config.const';\nimport { ModFrameworkConfig } from './models/mod-framework-config.model';\r\n\r\n// Services\r\nimport { LoadingIntercepter } from './services/loading.interceptor';\r\nimport { CurrentUserService } from './services/current-user.service';\nimport { LoadingService } from './services/loading.service';\n\n// Modules\r\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CommonModule } from '@angular/common';\n\n// Components\nimport { ModLayoutComponent } from './components/mod-layout/mod-layout.component';\nimport { ModHeaderComponent } from './components/mod-header/mod-header.component';\r\nimport { ModWelcomeBanner } from './components/mod-welcome-banner/mod-welcome-banner.component';\nimport { ModSideMenuComponent } from './components/mod-side-menu/mod-side-menu.component';\nimport { ModProgressSpinnerComponent } from './components/mod-progress-spinner/mod-progress-spinner.component';\nimport { ModLoadingOverlayComponent } from './components/mod-loading-overlay/mod-loading-overlay.component';\nimport { ModUserDisplayComponent } from './components/mod-user-display/mod-user-display.component';\r\nimport { BrowserCheckComponent } from './components/browser-check/browser-check.component';\nimport { HttpRequestInterceptor } from './services/http-request.interceptor';\r\nimport { RoleGuardService } from './services/role-guard.service';\r\n\r\n\nexport function initiateSingleSignOn(userService: CurrentUserService) {\n    return () => {\r\n        var auth = sessionStorage.getItem(\"authenticating\")?.toString();\r\n\r\n        if (auth) {\r\n            return userService.login().then(response => {\r\n                sessionStorage.removeItem(\"authenticating\");\r\n            });\r\n        }\r\n        else {\r\n            userService.redirectLogin();\r\n            let promise = new Promise((resolve, reject) => {\r\n                reject(\"Authenticating\");\r\n            });\r\n\r\n            return promise;\r\n        }\r\n    }\r\n}\n\n@NgModule({\n    declarations: [\n        ModWelcomeBanner,\n        ModSideMenuComponent,\n        ModLayoutComponent,\n        ModHeaderComponent,\n        ModProgressSpinnerComponent,\n        ModLoadingOverlayComponent,\n        ModUserDisplayComponent,\n        BrowserCheckComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\r\n        ReactiveFormsModule,\n        HttpClientModule,\n        RouterModule,\n        MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule,\n    ],\n    providers: [\n    ],\n    exports: [\n        ModHeaderComponent,\n        ModLayoutComponent,\n        ModLoadingOverlayComponent,\n        ModProgressSpinnerComponent,\n        ModSideMenuComponent,\n        ModUserDisplayComponent,\n        ModWelcomeBanner,\n        BrowserCheckComponent,\n    ]\n})\nexport class ModFrameworkModule {\n    static forRoot(config: ModFrameworkConfig = null): ModuleWithProviders<ModFrameworkModule> {\n        return {\r\n            ngModule: ModFrameworkModule,\r\n            providers: [\r\n                {\r\n                    provide: ModConfig,\r\n                    useValue: config\r\n                },\r\n                CurrentUserService,\n                {\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: LoadingIntercepter,\r\n                    multi: true\r\n                },\n                LoadingService,\r\n                // see https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: HttpRequestInterceptor,\r\n                    multi: true\r\n                },\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: initiateSingleSignOn,\r\n                    multi: true,\r\n                    deps: [CurrentUserService]\r\n                },\r\n                RoleGuardService,\r\n            ]\r\n        }\r\n    }\n\n    constructor(@Optional() @SkipSelf() parentModule: ModFrameworkModule) {\n        if (parentModule) {\n            throw new Error('ModFrameworkModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n","import { IDto } from '../interfaces/dto.interface';\r\n\r\nexport abstract class DtoBase implements IDto {\r\n    id: number = 0;\r\n    createdBy: string;\r\n    createdTime: Date;\r\n    modifiedBy: string;\r\n    modifiedTime: Date;\r\n}\r\n","export class ModSideMenuConfig {\r\n    public title: string;\r\n\r\n    public sections: ModMenuSection[] = [];\r\n\r\n    public constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class ModMenuSection {\r\n    public name: string = \"\";\r\n    public shortName: string = \"\";\r\n    public visible: boolean = true;\r\n    public allowedRoles: string[] = [];\r\n    public menuItems: ModMenuItem[] = [];    \r\n}\r\n\r\nexport class ModMenuItem {\r\n    public text: string;\r\n    public icon: string;\r\n    public route: string;\r\n    public defaultState: string;\r\n    public allowedRoles: string[] = [];\r\n}\r\n","export class UserInfo {\r\n    uniqueName: string;\r\n    upn: string;\r\n    displayName: string;\r\n    emailAddress: string;\r\n    userProfileUrl: string;\r\n\r\n    public constructor(uniqueName: string, upn: string) {\r\n        this.uniqueName = uniqueName;\r\n        this.upn = upn;\r\n        console.log(uniqueName + '[]asdf');\r\n        console.log(uniqueName == 'LOGIN\\\\kuennen_s');\r\n        this.displayName = (uniqueName == \"LOGIN\\\\kuennen_s\") ? \"Kuennen, Steve (Contractor)\" : uniqueName;\r\n        this.userProfileUrl = \"\";\r\n    }\r\n}\r\n","export class Logging {\r\n    static logToConsole: boolean = true;\r\n\r\n    static log(val: any) {\r\n        if (this.logToConsole) \r\n            console.log(val);\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { IDto } from '../interfaces/dto.interface';\r\nimport { Logging } from '../static/logging.static';\r\n\r\nexport abstract class ModPromiseServiceBase<T extends IDto> {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public url: string,\r\n        public endpoint: string,\n        private TCreator: { new(): T; }) {\n\n        this.url = (url.endsWith('/') ? url.slice(0, -1) : url) + '/api';\n    }\r\n\r\n    public save(item: T): Promise<T> {\r\n        if (item.id <= 0)\r\n            return this.create(item);\r\n        else\r\n            return this.update(item);\r\n    }\r\n\r\n    public getAll(params?: HttpParams): Promise<T[]> {\r\n        var url = `${this.url}/${this.endpoint}`;\r\n\r\n        return this.http\r\n            .get<T[]>(url, {params})\r\n            .toPromise()\r\n            .then(response => {\r\n                var data: T[] = [];\n\n                response.forEach(x => {\n                    var obj = this.formatResponse(x);\n                    data.push(obj);\n                });\r\n\r\n                return data;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public create(item: T): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}`;\r\n\r\n        return this.http.post<T>(url, item)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public get(id: number): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}/${id}`;\r\n\r\n        return this.http.get<T>(url)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public update(item: T): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}/${item.id}`;\r\n\r\n        return this.http.put<T>(url, item)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public delete(id: number): Promise<any> {\r\n        return this.http.delete(`${this.url}/${this.endpoint}/${id}`).toPromise();\r\n    }\n\r\n    // Override to fully instantiate child objects.  Be sure to call super.formatResponse first to instantiate the parent object.\r\n    formatResponse(data: T): T {\n        return Object.assign(new this.TCreator(), data);\r\n    }\r\n\r\n    handleError(error: Response | any): Promise<any> {\r\n        Logging.log(error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\r\n"]}