{"version":3,"file":"mod-framework.mjs","sources":["../../../projects/mod-framework/src/lib/static/mod-config.const.ts","../../../projects/mod-framework/src/lib/models/mod-framework-config.model.ts","../../../projects/mod-framework/src/lib/services/loading.service.ts","../../../projects/mod-framework/src/lib/services/loading.interceptor.ts","../../../projects/mod-framework/src/lib/models/current-user.model.ts","../../../projects/mod-framework/src/lib/services/current-user.service.ts","../../../projects/mod-framework/src/lib/components/mod-progress-spinner/mod-progress-spinner.component.html","../../../projects/mod-framework/src/lib/components/mod-progress-spinner/mod-progress-spinner.component.ts","../../../projects/mod-framework/src/lib/components/mod-loading-overlay/mod-loading-overlay.component.html","../../../projects/mod-framework/src/lib/components/mod-loading-overlay/mod-loading-overlay.component.ts","../../../projects/mod-framework/src/lib/components/mod-user-display/mod-user-display.component.html","../../../projects/mod-framework/src/lib/components/mod-user-display/mod-user-display.component.ts","../../../projects/mod-framework/src/lib/components/mod-header/mod-header.component.html","../../../projects/mod-framework/src/lib/components/mod-header/mod-header.component.ts","../../../projects/mod-framework/src/lib/components/mod-side-menu/mod-side-menu.component.html","../../../projects/mod-framework/src/lib/components/mod-side-menu/mod-side-menu.component.ts","../../../projects/mod-framework/src/lib/components/mod-layout/mod-layout.component.html","../../../projects/mod-framework/src/lib/components/mod-layout/mod-layout.component.ts","../../../projects/mod-framework/src/lib/components/mod-welcome-banner/mod-welcome-banner.component.ts","../../../projects/mod-framework/src/lib/components/mod-welcome-banner/mod-welcome-banner.component.html","../../../projects/mod-framework/src/lib/components/browser-check/browser-check.component.html","../../../projects/mod-framework/src/lib/components/browser-check/browser-check.component.ts","../../../projects/mod-framework/src/lib/services/http-request.interceptor.ts","../../../projects/mod-framework/src/lib/services/role-guard.service.ts","../../../projects/mod-framework/src/lib/mod-framework.module.ts","../../../projects/mod-framework/src/lib/models/dto-base.model.ts","../../../projects/mod-framework/src/lib/models/mod-side-menu-config.model.ts","../../../projects/mod-framework/src/lib/models/user-info.model.ts","../../../projects/mod-framework/src/lib/static/logging.static.ts","../../../projects/mod-framework/src/lib/services/mod-promise.service.base.ts","../../../projects/mod-framework/src/public-api.ts","../../../projects/mod-framework/src/mod-framework.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\n\r\nexport const ModConfig = new InjectionToken<ModFrameworkConfig>('modConfig');\r\n","export class ModFrameworkConfig {\r\n    loginSiteUrl: string;\r\n    loadingDelay: number;\r\n    urlsToSkip: string[];\r\n    showHelp: boolean = false;\r\n    helpOptions: string[] = [];\r\n    showSearch: boolean = false;\r\n    userOptions: string[] = [];\r\n    profileUrl: string = 'https://portfolio.staging.omb.gov/portfolio';\r\n}\r\n","//loading.service.ts\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\nimport { ModConfig } from '../static/mod-config.const';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n    public isLoading = new BehaviorSubject(false);\r\n    public loadingDelay: number = 500;\r\n\r\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\r\n        this.loadingDelay = config ? config.loadingDelay : 500;\r\n    }\r\n}\r\n","// loader.interceptors.ts\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse, HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from './loading.service';\r\nimport { ModConfig } from '../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../public-api';\r\n\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadingIntercepter implements HttpInterceptor {\n    private requests: HttpRequest<any>[] = [];\r\n\r\n    private urlsToSkip: string[] = ['frameworkapi/maxpicker/search'];\r\n\r\n    constructor(private loadingService: LoadingService, @Inject(ModConfig) config: ModFrameworkConfig) {\r\n        for (let x of config.urlsToSkip)\r\n            this.urlsToSkip.push(x);\r\n    }\r\n\r\n    removeRequest(req: HttpRequest<any>) {\r\n        const i = this.requests.indexOf(req);\r\n        if (i >= 0) {\r\n            this.requests.splice(i, 1);\r\n        }\r\n        this.loadingService.isLoading.next(this.requests.length > 0);\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.skipThisRequest(req)) {\n            return next.handle(req);\n        } else {\n            this.requests.push(req);\n            setTimeout(() => {\n                if (this.requests.length > 0)\r\n                    this.loadingService.isLoading.next(true);\n            }, this.loadingService.loadingDelay);\n            \r\n            return Observable.create(observer => {\r\n                const subscription = next.handle(req)\r\n                    .subscribe(\r\n                        event => {\r\n                            if (event instanceof HttpResponse) {\r\n                                this.removeRequest(req);\r\n                                observer.next(event);\r\n                            }\r\n                        },\r\n                        err => {\r\n                            this.removeRequest(req);\r\n                            observer.error(err);\r\n                        },\r\n                        () => {\r\n                            this.removeRequest(req);\r\n                            observer.complete();\r\n                        });\r\n                // remove request from queue when cancelled\r\n                return () => {\r\n                    this.removeRequest(req);\r\n                    subscription.unsubscribe();\r\n                };\r\n            });\n        }\r\n    }\n\n    private skipThisRequest(req: HttpRequest<any>): boolean {\n        var matched = false;\n        for (let url of this.urlsToSkip) {\n            matched = req.url.match(url) != null;\n            if (matched) break;\r\n        }\n        return matched;\r\n    }\r\n}\r\n","export class CurrentUser {\r\n    userId: string;\r\n    upn: string;\r\n    emailAddress: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    title: string;\r\n    phone: string;\r\n    groups: string[];\r\n    roles: string[];\r\n    displayName: string;\r\n}\n","import { Injectable, Inject } from '@angular/core';\r\nimport { CurrentUser } from '../models/current-user.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport * as parseUri from 'parse-uri';\r\nimport { ModConfig } from '../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrentUserService {\r\n    public loginPromise: Promise<CurrentUser>;\r\n\r\n    private serviceUrl = '';\r\n    private setCookieUrl = '';\r\n    private checkCookieUrl = '';\r\n    private noOpUrl = '';\r\n    private cookieName = 'CookieSettingsCheck';\r\n\r\n    private _user: CurrentUser;\r\n    private _browserOk: boolean = false;\r\n\r\n    private loginSiteUrl = \"https://localhost:44374\";\r\n\r\n    constructor(private http: HttpClient, @Inject(ModConfig) config: ModFrameworkConfig) {\r\n        this.loginSiteUrl = config ? config.loginSiteUrl : 'https://localhost:44374';\r\n\r\n        this.serviceUrl = this.siteUrl + \"api/claims/user\";\r\n        this.setCookieUrl = this.siteUrl + \"api/health/setcookie\";\r\n        this.checkCookieUrl = this.siteUrl + \"api/health/checkcookie\";\r\n        this.noOpUrl = this.siteUrl + \"api/health/noop\";\r\n    }\r\n\r\n    public getDomain(url): string {\r\n        var u = parseUri(url);\r\n        return u.host;\r\n    }\r\n\r\n    public get user(): CurrentUser {\r\n        return this._user;\r\n    }\r\n\r\n    public get browserOk(): boolean {\r\n        return this._browserOk;\r\n    }\r\n\r\n    public get domain(): string {\r\n        return this.getDomain(this.loginSiteUrl);\r\n    }\r\n\r\n    public get siteUrl(): string {\r\n        return this.loginSiteUrl + (this.loginSiteUrl.endsWith(\"/\") ? \"\" : \"/\");\r\n    }\r\n\r\n    browserCheck(): Promise<boolean> {\r\n        return this.http.get(this.noOpUrl, { withCredentials: false })\r\n            .toPromise()\r\n            .then(() => {\r\n                return this.http.get(this.setCookieUrl)\r\n                    .toPromise()\r\n                    .then(response => {\r\n                        return this.http.get(this.checkCookieUrl)\r\n                            .toPromise().then(response => {\r\n                                this._browserOk = true;\r\n                                return true;\r\n                            })\r\n                    })\r\n                    .catch((error: Response) => {\r\n                        this._browserOk = false;\r\n                        this._user = null;\r\n                        return Promise.reject<boolean>(\"Domain \" + this.getDomain(this.setCookieUrl) + \" probably doesn't allow CORS from domain \" + this.domain);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                this._browserOk = false;\r\n                this._user = null;\r\n                return Promise.reject<boolean>(\"Can't reach site \" + this.loginSiteUrl);\r\n            });\r\n    }\r\n\r\n    preFlight(): Promise<any> {\r\n        return this.http.options(this.serviceUrl)\r\n            .toPromise()\r\n            .then(response => { return response; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    redirectLogin() {\r\n        var returnUrl = window.location.href;\r\n\r\n        sessionStorage.setItem('authenticating', 'authenticating');\r\n        var url = this.siteUrl + 'api/login' + \"?ReturnUrl=\" + returnUrl;\r\n        window.open(url, '_self');\r\n    }\r\n\r\n    login(): Promise<CurrentUser> {\r\n        this.loginPromise = this.http.get(this.serviceUrl)\r\n            .toPromise()\r\n            .then((response: CurrentUser) => {\r\n                var user: CurrentUser;\r\n                user = Object.assign(new CurrentUser(), response);\r\n                this._user = user;\r\n                return user;\r\n            })\r\n            .catch(error => {\r\n                return this.handleError(error);\r\n            });\r\n        return this.loginPromise;\r\n    }\r\n\r\n    logout() {\r\n        this._user = null;\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n    public isInRole(role: string): boolean {\r\n        return this.user.roles.find(x => x == role) !== undefined;\r\n    }\r\n\r\n    public isInRoles(roles: string[]): boolean {\r\n        var returnValue = false;\r\n\r\n        roles.forEach(x => {\r\n            returnValue = returnValue || this.isInRole(x);\r\n        });\r\n\r\n        return returnValue;\r\n    }\r\n}\r\n","<ng-container *ngIf=\"overlay;else progressSpinner\">\r\n    <div class=\"overlay\">\r\n        <div class=\"center\">\r\n            <ng-template [ngTemplateOutlet]=\"progressSpinner\"></ng-template>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<ng-template #progressSpinner>\r\n    <mat-progress-spinner [diameter]=\"diameter\"\r\n                          [mode]=\"mode\"\r\n                          [color]=\"color\"\r\n                          [strokeWidth]=\"strokeWidth\"\r\n                          [value]=\"value\">\r\n    </mat-progress-spinner>\r\n</ng-template>\r\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'mod-progress-spinner',\n    templateUrl: './mod-progress-spinner.component.html',\n    styleUrls: ['./mod-progress-spinner.component.scss']\n})\nexport class ModProgressSpinnerComponent implements OnInit {\n\n    @Input() value: number = 100;\n    @Input() diameter: number = 100;\n    @Input() mode: string = \"indeterminate\";\n    @Input() strokeWidth: number = 10;\n    @Input() overlay: boolean = false;\n    @Input() color: string = \"primary\";\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<mod-progress-spinner *ngIf=\"showProgressSpinner\" [overlay]=\"true\"></mod-progress-spinner>\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingService } from '../../services/loading.service';\r\n\n@Component({\n    selector: 'mod-loading-overlay',\n    templateUrl: './mod-loading-overlay.component.html',\n    styleUrls: ['./mod-loading-overlay.component.scss']\n})\nexport class ModLoadingOverlayComponent implements OnInit {\n\n    public showProgressSpinner: boolean = false;\n\n    constructor(private loadingService: LoadingService) {\n        this.loadingService.isLoading.subscribe((isLoading) => {\n            if (isLoading) {\n                this.showProgressSpinner = true;\n            }\n            else {\n                this.showProgressSpinner = false;\n            }\n        })\n    }\n    ngOnInit(): void {\n    }\n\n}\n","<div *ngIf=\"user\">\r\n    <span style=\"padding-right: 5px;\">{{ user.displayName }}</span>\r\n    <ng-container *ngIf=\"showUser;else showMenu\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"mod-user-icon\" aria-label=\"User Menu\">\r\n            <mat-icon>account_circle</mat-icon>\r\n        </button>\r\n    </ng-container>\r\n    <ng-template #showMenu>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"mat-icon-button\" aria-label=\"User Menu\">\r\n            <mat-icon>keyboard_arrow_down</mat-icon>\r\n        </button>\r\n    </ng-template>\r\n    <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item *ngFor=\"let option of config.userOptions\" (click)=\"optionSelected(option)\">{{ option }}</button>\r\n    </mat-menu>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { CurrentUserService } from '../../services/current-user.service';\nimport { ModConfig } from '../../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\r\n\n@Component({\n    selector: 'mod-user-display',\n    templateUrl: './mod-user-display.component.html',\n    styleUrls: ['./mod-user-display.component.scss']\n})\nexport class ModUserDisplayComponent implements OnInit {\n\n    @Input()\n    showUser: boolean = false;\n\n    @Output()\n    selectOption = new EventEmitter<string>();\n\n\n    public config: ModFrameworkConfig;\n\n    constructor(private userService: CurrentUserService, @Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n        this.config.userOptions.push('User Profile');\n    }\n\n    ngOnInit() {\n        \n    }\n\n    get user() {\n        return this.userService.user;\n    }\n\n    public optionSelected(option: string) {\n        if (option == \"User Profile\") {\r\n            window.open(this.config.profileUrl, '_blank')\r\n        }\r\n        else {\r\n            this.selectOption.emit(option);\r\n        }\r\n    }\n}\n","<mat-toolbar class=\"mod-header\">\r\n    <!--<button mat-icon-button (click)=\"onMenuClick()\">\r\n        <mat-icon>\r\n            menu\r\n        </mat-icon>\r\n    </button>-->\r\n\r\n    <a class=\"logo-text-mark\" [routerLink]=\"['/']\">\r\n        <img class=\"mod-logo\" src=\"/assets/US-OfficeOfManagementAndBudget-Seal.png\" tabindex=\"-1\" />\r\n        <div tabindex=\"-1\" alt=\"Textmark\" class=\"text-mark\">{{ appName }}</div>\r\n    </a>\r\n\r\n    <span class=\"fill-remaining-space\">\r\n        <ng-content></ng-content>\r\n    </span>\r\n\r\n    <div class=\"welcome-user\">\r\n        <mod-user-display [showUser]=\"true\" (selectOption)=\"onUserOptionSelect($event)\"></mod-user-display>\r\n        <div *ngIf=\"config.showHelp\">\r\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Help Menu\">\r\n                <mat-icon>help</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item *ngFor=\"let option of config.helpOptions\" (click)=\"optionSelected(option)\">{{ option }}</button>\r\n            </mat-menu>\r\n        </div>\r\n    </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { ModConfig } from '../../static/mod-config.const';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\n\n@Component({\n    selector: 'mod-header',\n    templateUrl: './mod-header.component.html',\n    styleUrls: ['./mod-header.component.scss']\n})\nexport class ModHeaderComponent implements OnInit {\n\n    @Input()\n    appName: string;\n\n    @Output()\n    menuClick = new EventEmitter<any>();\n\n    @Output()\n    userOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    helpOptionSelect = new EventEmitter<string>();\n\n    public config: ModFrameworkConfig;\n\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n    }\n\n    ngOnInit(): void {\n    }\n\n    public onMenuClick(): void {\n        this.menuClick.emit();\r\n    }\n\n    public onUserOptionSelect(option: string): void {\n        this.userOptionSelect.emit(option);\r\n    }\n\n    public optionSelected(option: string): void {\n        this.helpOptionSelect.emit(option);\r\n    }\n}\n","<mat-sidenav-container class=\"mod-side-menu-container\">\r\n    <mat-sidenav #sidenav mode=\"side\" opened role=\"navigation\" id=\"navigation-menu\" [ngClass]=\"{'mod-side-menu' : true, 'collapsed' : (!expanded && opened)}\">\r\n        <h1 mat-subheader>\r\n            {{ expanded ? config.title : \"\" }}\r\n            <mat-icon *ngIf=\"expanded\" class=\"menu-close\" (click)=\"expandMenu(!this.expanded)\">\r\n                keyboard_arrow_left\r\n            </mat-icon>\r\n            <mat-icon *ngIf=\"!expanded\" class=\"menu-open\" (click)=\"expandMenu(!this.expanded)\">\r\n                keyboard_arrow_right\r\n            </mat-icon>\r\n        </h1>\r\n\r\n        <div *ngFor=\"let section of viewableSections\">\r\n            <h1 mat-subheader>\r\n                {{ expanded ? section.name : \"\" }}\r\n            </h1>\r\n            <mat-nav-list>\r\n                <mat-list-item *ngFor=\"let item of getViewableMenuItems(section)\"\r\n                               [routerLink]=\"item.route\"\r\n                               routerLinkActive=\"active\"\r\n                               [routerLinkActiveOptions]=\"{exact: true}\"\r\n                               (keyup.enter)=\"navigateTo(item.route)\">\r\n                    <mat-icon mat-list-icon [matTooltip]=\"item.text\">{{item.icon}}</mat-icon>\r\n                    {{ expanded ? item.text : \"\"}}\r\n                </mat-list-item>\r\n            </mat-nav-list>\r\n        </div>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content [ngClass]=\"{'mod-side-menu-content' : true, 'collapsed' : (!expanded && opened)}\" role=\"main\" #mainContent tabindex=\"0\">\r\n        <ng-content></ng-content>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, OnChanges, Input, SimpleChange, ElementRef, ViewChild, Renderer2 } from '@angular/core';\nimport { ModSideMenuConfig, ModMenuItem, ModMenuSection } from '../../models/mod-side-menu-config.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { CurrentUserService } from '../../services/current-user.service';\r\n\n@Component({\n    selector: 'mod-side-menu',\n    templateUrl: './mod-side-menu.component.html',\n    styleUrls: ['./mod-side-menu.component.scss']\n})\nexport class ModSideMenuComponent implements OnInit, OnChanges {\n\n    public menuOption: string;\n    public expanded: boolean = true;\n    public opened: boolean = true;\n\n    @Input()\n    config: ModSideMenuConfig;\n\n    @ViewChild('mainContent', { static: true }) mainContentElement: ElementRef;\n    @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\n\n    constructor(\n        public router: Router,\n        private activatedRoute: ActivatedRoute,\n        private renderer: Renderer2,\n        private userService: CurrentUserService) {\n    }\n\n    public ngOnInit() {\n    }\n\n    public ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        if (changes['config'] && changes['config'].previousValue != changes['config'].currentValue) {\n            this.selectCurrentRoute();\n        }\n    }\n\n    private selectCurrentRoute(): void {\n        var urls = this.router.url.split('/');\n\n        for (let section of this.config.sections) {\n            for (let item of section.menuItems) {\n                if (urls[urls.length - 1].toString() == item.route) {\n                    this.menuOption = item.text;\n\n                    break;\n                }\n            }\n        }\n    }\n\n    // Used by menu item keyup.enter handler to provide keyboard navigation\n    public navigateTo(urlSegment: string) {\n        urlSegment = urlSegment.split('#')[0];\n        var url = \"\";\n        if (urlSegment.startsWith('/')) {\n            url = urlSegment;\n        } else {\n            url = this.activatedRoute.snapshot.url.join('/') + '/' + urlSegment;\n        }\n\n        // nav to the route, and then set focus on the main content div rather than keep focus\n        // on the nav menu itself (users will need to Shift+Tab their way back to nav menu)\n        this.router.navigateByUrl(url).then(x => {\n            if (this.mainContentElement)\n                this.mainContentElement.nativeElement.focus();\n        });\n    }\n\n    public expandMenu(expanded: boolean = true) {\n        this.expanded = expanded;\n    }\n\n    public toggleSideNav() {\n        //this.sidenav.toggle();\n        var opening = !this.opened;\n\n        if (opening) {\n            this.opened = !this.opened;\n            this.sidenav.toggle();\n        }\n        else {\n            this.sidenav.toggle().then(() => {\r\n                this.opened = !this.opened;\r\n            });\r\n        }\r\n    }\n\n    public get viewableSections(): ModMenuSection[] {\n        let sections: ModMenuSection[] = [];\r\n\r\n        this.config.sections.forEach(section => {\r\n            if (!section.allowedRoles || this.userService.isInRoles(section.allowedRoles))\r\n                sections.push(section);\r\n        });\r\n        return sections;\r\n    }\n\n    public getViewableMenuItems(section: ModMenuSection): ModMenuItem[] {\n        let items: ModMenuItem[] = [];\r\n\r\n        section.menuItems.forEach(item => {\r\n            if (!item.allowedRoles || this.userService.isInRoles(item.allowedRoles))\r\n                items.push(item);\r\n        })\r\n\r\n        return items;\r\n    }\n\n}\n","<mod-loading-overlay></mod-loading-overlay>\r\n<div class=\"mod-layout-container\">\r\n    <div class=\"layout-header\">\r\n        <!--<mod-welcome-banner>\r\n        </mod-welcome-banner>-->\r\n        <mod-header [appName]=\"appName\" (menuClick)=\"onMenuClicked()\" (userOptionSelect)=\"onUserOptionSelect($event)\" (helpOptionSelect)=\"onHelpOptionSelect($event)\">\r\n            <div *ngIf=\"config.showSearch\" style=\"display: flex; justify-content: center;\">\r\n                <input [(ngModel)]=\"searchText\" matInput placeholder=\"Search\" class=\"search-box\" (keyup.enter)=\"onSearch()\">\r\n            </div>\r\n        </mod-header>\r\n    </div>\r\n    <div class=\"layout-content\">\r\n        <mod-side-menu [config]=\"menuConfig\" #sidemenu>\r\n            <ng-content></ng-content>\r\n        </mod-side-menu>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { ModSideMenuComponent } from '../mod-side-menu/mod-side-menu.component';\r\nimport { ModSideMenuConfig } from '../../models/mod-side-menu-config.model';\r\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\r\nimport { ModConfig } from '../../static/mod-config.const';\r\n\n@Component({\n    selector: 'mod-layout',\n    templateUrl: './mod-layout.component.html',\n    styleUrls: ['./mod-layout.component.scss']\n})\nexport class ModLayoutComponent implements OnInit {\n\n    @ViewChild('sidemenu', { static: true }) sideMenu: ModSideMenuComponent;\n\n    @Input()\n    appName: string;\n\n    @Input()\n    menuConfig: ModSideMenuConfig;\n\n    @Output()\n    userOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    helpOptionSelect = new EventEmitter<string>();\n\n    @Output()\n    search = new EventEmitter<string>();\n\n    public searchText: string;\n\n    public config: ModFrameworkConfig;\n\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\n        this.config = config;\n    }\n\n    ngOnInit(): void {\n    }\n\n    public onMenuClicked(): void {\n        this.sideMenu.toggleSideNav();\r\n    }\n\n    public onUserOptionSelect(option: string): void {\n        this.userOptionSelect.emit(option);\r\n    }\n\n    public onHelpOptionSelect(option: string): void {\n        this.helpOptionSelect.emit(option);\r\n    }\n\n    public onSearch(): void {\n        this.search.emit(this.searchText);\r\n        this.searchText = '';\r\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'mod-welcome-banner',\n    templateUrl: './mod-welcome-banner.component.html',\n    styleUrls: ['./mod-welcome-banner.component.scss']\n})\nexport class ModWelcomeBanner implements OnInit {\n    @Output()\n    onLogin = new EventEmitter<any>();\n\n    @Output()\r\n    onLogout = new EventEmitter<any>();\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","<header class=\"mod-header\" role=\"banner\">\r\n    <div class=\"mod-welcome-banner\">\r\n        <div class=\"welcome-user\">\r\n            <mod-user-display></mod-user-display>\r\n        </div>\r\n    </div>\r\n</header>\r\n","<div *ngIf=\"browserFail\" class=\"container-fluid browser-check-container\">\r\n    <span class=\"fa fa-warning browser-check-icon\"></span><span class=\"browser-check-header-text\">&nbsp;&nbsp;You can't log in to this site.</span>\r\n    <div class=\"browser-check-text\">\r\n        Possible reasons for this include:\r\n        <ul>\r\n            <li>\r\n                You can't reach the site {{loginSite}}.\r\n                <ul>\r\n                    <li>Please check your network connection.</li>\r\n                </ul>\r\n            </li>\r\n            <li>\r\n                Site {{loginSite}} does not allow cross-origin scripting (CORS) from your domain {{myDomain}}.\r\n                <ul>\r\n                    <li>Please contact the administrator of {{loginSite}} and request access for your site.</li>\r\n                </ul>\r\n            </li>\r\n            <li>\r\n                Your browser doesn't accept third-party cookies from domain {{loginDomain}}.\r\n                <ul>\r\n                    <li>In your browser settings, either allow all third-party cookies, or </li>\r\n                    <li>Disallow third-party cookies, but add {{loginDomain}} as an exception.</li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n        <i>The actual error returned is \"{{browserFail}}\".<br /></i>\r\n        Please correct these problems and try again.\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CurrentUserService } from \"../../services/current-user.service\";\n\ndeclare var $: any;\n\n@Component({\n    selector: 'mod-browser-check',\n    templateUrl: './browser-check.component.html',\n    styleUrls: ['./browser-check.component.scss']\n})\n\nexport class BrowserCheckComponent implements OnInit {\n\n    constructor(private currentUserService: CurrentUserService) {\n    }\n\n    public browserFail: string;\n    public loginSite: string;\n    public loginDomain: string;\n    public myDomain: string;\n\n    ngOnInit(): void {\n        this.currentUserService.browserCheck().then(response => {\n            this.browserFail = '';\n            return;\n        }).catch(error => {\n            $(\"#loginout\").css(\"display\", \"none\");\n            this.browserFail = error;\n            this.loginSite = this.currentUserService.siteUrl;\n            this.loginDomain = this.currentUserService.domain;\n            this.myDomain = this.currentUserService.getDomain(window.location.href);\n        });\n\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n    HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap, filter } from 'rxjs/operators';\r\nimport { CurrentUserService } from './current-user.service';\r\n\r\n// Add credentials to every request.\r\n// Credit to https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private userService: CurrentUserService) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        req = req.clone({\r\n            withCredentials: true\r\n        });\r\n\r\n        return next.handle(req).pipe(\r\n            filter(event => event instanceof HttpResponse),\r\n            tap((event: HttpResponse<any>) => {\r\n                // Don't force login when making a call to claims/user\r\n                if (!this.userService.user && !event.url.endsWith(\"claims/user\"))\r\n                    this.userService.login();\r\n            }, (err: any) => {\r\n                if (err.status == 0)\r\n                    this.userService.redirectLogin();\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { CurrentUserService } from './current-user.service';\r\n\n@Injectable()\nexport class RoleGuardService implements CanActivate {\n    constructor(public userService: CurrentUserService, public router: Router) { }\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        // this will be passed from the route config\n        // on the data property\n        const expectedRoles = route.data.expectedRoles;\n\n        if (!this.userService.user || !this.userService.isInRoles(expectedRoles)\n        ) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        return true;\n    }\n}\n","import { NgModule, APP_INITIALIZER, SkipSelf, Optional, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { RouterModule } from '@angular/router';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\n// Configuration\r\nimport { ModConfig } from './static/mod-config.const';\nimport { ModFrameworkConfig } from './models/mod-framework-config.model';\r\n\r\n// Services\r\nimport { LoadingIntercepter } from './services/loading.interceptor';\r\nimport { CurrentUserService } from './services/current-user.service';\nimport { LoadingService } from './services/loading.service';\n\n// Modules\r\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CommonModule } from '@angular/common';\n\n// Components\nimport { ModLayoutComponent } from './components/mod-layout/mod-layout.component';\nimport { ModHeaderComponent } from './components/mod-header/mod-header.component';\r\nimport { ModWelcomeBanner } from './components/mod-welcome-banner/mod-welcome-banner.component';\nimport { ModSideMenuComponent } from './components/mod-side-menu/mod-side-menu.component';\nimport { ModProgressSpinnerComponent } from './components/mod-progress-spinner/mod-progress-spinner.component';\nimport { ModLoadingOverlayComponent } from './components/mod-loading-overlay/mod-loading-overlay.component';\nimport { ModUserDisplayComponent } from './components/mod-user-display/mod-user-display.component';\r\nimport { BrowserCheckComponent } from './components/browser-check/browser-check.component';\nimport { HttpRequestInterceptor } from './services/http-request.interceptor';\r\nimport { RoleGuardService } from './services/role-guard.service';\r\n\r\n\nexport function initiateSingleSignOn(userService: CurrentUserService) {\n    return () => {\r\n        var auth = sessionStorage.getItem(\"authenticating\")?.toString();\r\n\r\n        if (auth) {\r\n            return userService.login().then(response => {\r\n                sessionStorage.removeItem(\"authenticating\");\r\n            });\r\n        }\r\n        else {\r\n            userService.redirectLogin();\r\n            let promise = new Promise((resolve, reject) => {\r\n                reject(\"Authenticating\");\r\n            });\r\n\r\n            return promise;\r\n        }\r\n    }\r\n}\n\n@NgModule({\n    declarations: [\n        ModWelcomeBanner,\n        ModSideMenuComponent,\n        ModLayoutComponent,\n        ModHeaderComponent,\n        ModProgressSpinnerComponent,\n        ModLoadingOverlayComponent,\n        ModUserDisplayComponent,\n        BrowserCheckComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\r\n        ReactiveFormsModule,\n        HttpClientModule,\n        RouterModule,\n        MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule,\n    ],\n    providers: [\n    ],\n    exports: [\n        ModHeaderComponent,\n        ModLayoutComponent,\n        ModLoadingOverlayComponent,\n        ModProgressSpinnerComponent,\n        ModSideMenuComponent,\n        ModUserDisplayComponent,\n        ModWelcomeBanner,\n        BrowserCheckComponent,\n    ]\n})\nexport class ModFrameworkModule {\n    static forRoot(config: ModFrameworkConfig = null): ModuleWithProviders<ModFrameworkModule> {\n        return {\r\n            ngModule: ModFrameworkModule,\r\n            providers: [\r\n                {\r\n                    provide: ModConfig,\r\n                    useValue: config\r\n                },\r\n                CurrentUserService,\n                {\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: LoadingIntercepter,\r\n                    multi: true\r\n                },\n                LoadingService,\r\n                // see https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: HttpRequestInterceptor,\r\n                    multi: true\r\n                },\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: initiateSingleSignOn,\r\n                    multi: true,\r\n                    deps: [CurrentUserService]\r\n                },\r\n                RoleGuardService,\r\n            ]\r\n        }\r\n    }\n\n    constructor(@Optional() @SkipSelf() parentModule: ModFrameworkModule) {\n        if (parentModule) {\n            throw new Error('ModFrameworkModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n","import { IDto } from '../interfaces/dto.interface';\r\n\r\nexport abstract class DtoBase implements IDto {\r\n    id: number = 0;\r\n    createdBy: string;\r\n    createdTime: Date;\r\n    modifiedBy: string;\r\n    modifiedTime: Date;\r\n}\r\n","export class ModSideMenuConfig {\r\n    public title: string;\r\n\r\n    public sections: ModMenuSection[] = [];\r\n\r\n    public constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class ModMenuSection {\r\n    public name: string = \"\";\r\n    public shortName: string = \"\";\r\n    public visible: boolean = true;\r\n    public allowedRoles: string[] = [];\r\n    public menuItems: ModMenuItem[] = [];    \r\n}\r\n\r\nexport class ModMenuItem {\r\n    public text: string;\r\n    public icon: string;\r\n    public route: string;\r\n    public defaultState: string;\r\n    public allowedRoles: string[] = [];\r\n}\r\n","export class UserInfo {\r\n    uniqueName: string;\r\n    upn: string;\r\n    displayName: string;\r\n    emailAddress: string;\r\n    userProfileUrl: string;\r\n\r\n    public constructor(uniqueName: string, upn: string) {\r\n        this.uniqueName = uniqueName;\r\n        this.upn = upn;\r\n        console.log(uniqueName + '[]asdf');\r\n        console.log(uniqueName == 'LOGIN\\\\kuennen_s');\r\n        this.displayName = (uniqueName == \"LOGIN\\\\kuennen_s\") ? \"Kuennen, Steve (Contractor)\" : uniqueName;\r\n        this.userProfileUrl = \"\";\r\n    }\r\n}\r\n","export class Logging {\r\n    static logToConsole: boolean = true;\r\n\r\n    static log(val: any) {\r\n        if (this.logToConsole) \r\n            console.log(val);\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { IDto } from '../interfaces/dto.interface';\r\nimport { Logging } from '../static/logging.static';\r\n\r\nexport abstract class ModPromiseServiceBase<T extends IDto> {\r\n    constructor(\r\n        public http: HttpClient,\r\n        public url: string,\r\n        public endpoint: string,\n        private TCreator: { new(): T; }) {\n\n        this.url = (url.endsWith('/') ? url.slice(0, -1) : url) + '/api';\n    }\r\n\r\n    public save(item: T): Promise<T> {\r\n        if (item.id <= 0)\r\n            return this.create(item);\r\n        else\r\n            return this.update(item);\r\n    }\r\n\r\n    public getAll(params?: HttpParams): Promise<T[]> {\r\n        var url = `${this.url}/${this.endpoint}`;\r\n\r\n        return this.http\r\n            .get<T[]>(url, {params})\r\n            .toPromise()\r\n            .then(response => {\r\n                var data: T[] = [];\n\n                response.forEach(x => {\n                    var obj = this.formatResponse(x);\n                    data.push(obj);\n                });\r\n\r\n                return data;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public create(item: T): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}`;\r\n\r\n        return this.http.post<T>(url, item)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public get(id: number): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}/${id}`;\r\n\r\n        return this.http.get<T>(url)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public update(item: T): Promise<T> {\r\n        var url = `${this.url}/${this.endpoint}/${item.id}`;\r\n\r\n        return this.http.put<T>(url, item)\r\n            .toPromise()\r\n            .then(response => {\n                var obj = this.formatResponse(response);\r\n                return obj;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public delete(id: number): Promise<any> {\r\n        return this.http.delete(`${this.url}/${this.endpoint}/${id}`).toPromise();\r\n    }\n\r\n    // Override to fully instantiate child objects.  Be sure to call super.formatResponse first to instantiate the parent object.\r\n    formatResponse(data: T): T {\n        return Object.assign(new this.TCreator(), data);\r\n    }\r\n\r\n    handleError(error: Response | any): Promise<any> {\r\n        Logging.log(error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\r\n","/*\n * Public API Surface of mod-framework\n */\n\nexport * from './lib/mod-framework.module';\n\nexport * from './lib/interfaces/dto.interface';\n\nexport * from './lib/models/dto-base.model';\nexport * from './lib/models/mod-framework-config.model';\nexport * from './lib/models/mod-side-menu-config.model';\nexport * from './lib/models/user-info.model';\n\nexport * from './lib/components/mod-header/mod-header.component';\nexport * from './lib/components/mod-layout/mod-layout.component';\nexport * from './lib/components/mod-loading-overlay/mod-loading-overlay.component';\nexport * from './lib/components/mod-progress-spinner/mod-progress-spinner.component';\nexport * from './lib/components/mod-side-menu/mod-side-menu.component';\nexport * from './lib/components/mod-user-display/mod-user-display.component';\nexport * from './lib/components/mod-welcome-banner/mod-welcome-banner.component';\nexport * from './lib/components/browser-check/browser-check.component';\n\nexport * from './lib/services/current-user.service';\nexport * from './lib/services/loading.interceptor';\nexport * from './lib/services/loading.service';\nexport * from './lib/services/mod-promise.service.base';\nexport * from './lib/services/role-guard.service';\n\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.LoadingService","_c1","_c0","i1","i2.CurrentUserService","i1.CurrentUserService","i2"],"mappings":"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"}