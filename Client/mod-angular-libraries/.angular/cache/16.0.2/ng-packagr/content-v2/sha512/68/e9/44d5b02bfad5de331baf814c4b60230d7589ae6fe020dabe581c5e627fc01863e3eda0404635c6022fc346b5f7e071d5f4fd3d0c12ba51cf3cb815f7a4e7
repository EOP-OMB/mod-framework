{"hash":"e94226a9121dcf96e4fe5421166094b2bef86ecb","fesm2022":[{"exports":["BrowserCheckComponent","CurrentUserService","DtoBase","LoadingIntercepter","LoadingService","ModFrameworkConfig","ModFrameworkModule","ModHeaderComponent","ModLayoutComponent","ModLoadingOverlayComponent","ModMenuItem","ModMenuSection","ModProgressSpinnerComponent","ModPromiseServiceBase","ModSideMenuComponent","ModSideMenuConfig","ModUserDisplayComponent","ModWelcomeBanner","RoleGuardService","UserInfo","initiateSingleSignOn"],"facadeModuleId":"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\mod-framework.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\static\\mod-config.const.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\mod-framework-config.model.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\loading.service.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\loading.interceptor.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\current-user.model.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\current-user.service.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-side-menu\\mod-side-menu.component.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-user-display\\mod-user-display.component.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-header\\mod-header.component.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-progress-spinner\\mod-progress-spinner.component.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-loading-overlay\\mod-loading-overlay.component.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-layout\\mod-layout.component.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-welcome-banner\\mod-welcome-banner.component.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\browser-check\\browser-check.component.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\http-request.interceptor.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\role-guard.service.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\mod-framework.module.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\interfaces\\dto.interface.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\dto-base.model.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\mod-side-menu-config.model.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\user-info.model.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\static\\logging.static.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\mod-promise.service.base.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\public-api.mjs","P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\mod-framework.mjs"],"name":"mod-framework","type":"chunk","dynamicImports":[],"fileName":"mod-framework.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["InjectionToken","*","Injectable","Inject","Component","Input","ViewChild","EventEmitter","Output","APP_INITIALIZER","NgModule","Optional","SkipSelf"],"@angular/router":["*","RouterModule"],"@angular/common/http":["HttpResponse","*","HTTP_INTERCEPTORS","HttpClientModule"],"rxjs":["BehaviorSubject","Observable"],"parse-uri":["*"],"@angular/material/icon":["*","MatIconModule"],"@angular/material/divider":["MatDividerModule"],"@angular/material/list":["*","MatListModule"],"@angular/material/sidenav":["*","MatSidenavModule"],"@angular/material/toolbar":["*","MatToolbarModule"],"@angular/material/menu":["*","MatMenuModule"],"@angular/material/button":["*","MatButtonModule"],"@angular/material/progress-spinner":["*","MatProgressSpinnerModule"],"@angular/material/autocomplete":["MatAutocompleteModule"],"@angular/material/tooltip":["*","MatTooltipModule"],"@angular/forms":["*","FormsModule","ReactiveFormsModule"],"@angular/material/form-field":["MatFormFieldModule"],"@angular/material/input":["*","MatInputModule"],"@angular/material/select":["MatSelectModule"],"@angular/common":["*","CommonModule","NgIf"],"rxjs/operators":["filter","tap"],"@angular/platform-browser":["BrowserModule"]},"imports":["@angular/core","@angular/router","@angular/common/http","rxjs","parse-uri","@angular/material/icon","@angular/material/divider","@angular/material/list","@angular/material/sidenav","@angular/material/toolbar","@angular/material/menu","@angular/material/button","@angular/material/progress-spinner","@angular/material/autocomplete","@angular/material/tooltip","@angular/forms","@angular/material/form-field","@angular/material/input","@angular/material/select","@angular/common","rxjs/operators","@angular/platform-browser"],"modules":{"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\static\\mod-config.const.mjs":{"code":"const ModConfig = new InjectionToken('modConfig');","originalLength":832,"removedExports":[],"renderedExports":["ModConfig"],"renderedLength":50},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\mod-framework-config.model.mjs":{"code":"class ModFrameworkConfig {\n    constructor() {\n        this.showHelp = false;\n        this.helpOptions = [];\n        this.showSearch = false;\n        this.userOptions = [];\n        this.profileUrl = 'https://portfolio.staging.omb.gov/portfolio';\n    }\n}","originalLength":1287,"removedExports":[],"renderedExports":["ModFrameworkConfig"],"renderedLength":253},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\loading.service.mjs":{"code":"//loading.service.ts\nclass LoadingService {\n    constructor(config) {\n        this.isLoading = new BehaviorSubject(false);\n        this.loadingDelay = 500;\n        this.loadingDelay = config ? config.loadingDelay : 500;\n    }\n    static { this.ɵfac = function LoadingService_Factory(t) { return new (t || LoadingService)(i0.ɵɵinject(ModConfig)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoadingService, factory: LoadingService.ɵfac, providedIn: 'root' }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, null); })();","originalLength":2907,"removedExports":[],"renderedExports":["LoadingService"],"renderedLength":865},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\loading.interceptor.mjs":{"code":"// loader.interceptors.ts\nclass LoadingIntercepter {\n    constructor(loadingService, config) {\n        this.loadingService = loadingService;\n        this.requests = [];\n        this.urlsToSkip = ['frameworkapi/maxpicker/search'];\n        for (let x of config.urlsToSkip)\n            this.urlsToSkip.push(x);\n    }\n    removeRequest(req) {\n        const i = this.requests.indexOf(req);\n        if (i >= 0) {\n            this.requests.splice(i, 1);\n        }\n        this.loadingService.isLoading.next(this.requests.length > 0);\n    }\n    intercept(req, next) {\n        if (this.skipThisRequest(req)) {\n            return next.handle(req);\n        }\n        else {\n            this.requests.push(req);\n            setTimeout(() => {\n                if (this.requests.length > 0)\n                    this.loadingService.isLoading.next(true);\n            }, this.loadingService.loadingDelay);\n            return Observable.create(observer => {\n                const subscription = next.handle(req)\n                    .subscribe(event => {\n                    if (event instanceof HttpResponse) {\n                        this.removeRequest(req);\n                        observer.next(event);\n                    }\n                }, err => {\n                    this.removeRequest(req);\n                    observer.error(err);\n                }, () => {\n                    this.removeRequest(req);\n                    observer.complete();\n                });\n                // remove request from queue when cancelled\n                return () => {\n                    this.removeRequest(req);\n                    subscription.unsubscribe();\n                };\n            });\n        }\n    }\n    skipThisRequest(req) {\n        var matched = false;\n        for (let url of this.urlsToSkip) {\n            matched = req.url.match(url) != null;\n            if (matched)\n                break;\n        }\n        return matched;\n    }\n    static { this.ɵfac = function LoadingIntercepter_Factory(t) { return new (t || LoadingIntercepter)(i0.ɵɵinject(LoadingService), i0.ɵɵinject(ModConfig)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoadingIntercepter, factory: LoadingIntercepter.ɵfac, providedIn: 'root' }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingIntercepter, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: LoadingService }, { type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, null); })();","originalLength":10000,"removedExports":[],"renderedExports":["LoadingIntercepter"],"renderedLength":2643},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\current-user.model.mjs":{"code":"class CurrentUser {\n}","originalLength":779,"removedExports":[],"renderedExports":["CurrentUser"],"renderedLength":21},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\current-user.service.mjs":{"code":"class CurrentUserService {\n    constructor(http, config) {\n        this.http = http;\n        this.serviceUrl = '';\n        this.setCookieUrl = '';\n        this.checkCookieUrl = '';\n        this.noOpUrl = '';\n        this.cookieName = 'CookieSettingsCheck';\n        this._browserOk = false;\n        this.loginSiteUrl = \"https://localhost:44374\";\n        this.loginSiteUrl = config ? config.loginSiteUrl : 'https://localhost:44374';\n        this.serviceUrl = this.siteUrl + \"api/claims/user\";\n        this.setCookieUrl = this.siteUrl + \"api/health/setcookie\";\n        this.checkCookieUrl = this.siteUrl + \"api/health/checkcookie\";\n        this.noOpUrl = this.siteUrl + \"api/health/noop\";\n    }\n    getDomain(url) {\n        var u = parseUri(url);\n        return u.host;\n    }\n    get user() {\n        return this._user;\n    }\n    get browserOk() {\n        return this._browserOk;\n    }\n    get domain() {\n        return this.getDomain(this.loginSiteUrl);\n    }\n    get siteUrl() {\n        return this.loginSiteUrl + (this.loginSiteUrl.endsWith(\"/\") ? \"\" : \"/\");\n    }\n    browserCheck() {\n        return this.http.get(this.noOpUrl, { withCredentials: false })\n            .toPromise()\n            .then(() => {\n            return this.http.get(this.setCookieUrl)\n                .toPromise()\n                .then(response => {\n                return this.http.get(this.checkCookieUrl)\n                    .toPromise().then(response => {\n                    this._browserOk = true;\n                    return true;\n                });\n            })\n                .catch((error) => {\n                this._browserOk = false;\n                this._user = null;\n                return Promise.reject(\"Domain \" + this.getDomain(this.setCookieUrl) + \" probably doesn't allow CORS from domain \" + this.domain);\n            });\n        })\n            .catch(error => {\n            this._browserOk = false;\n            this._user = null;\n            return Promise.reject(\"Can't reach site \" + this.loginSiteUrl);\n        });\n    }\n    preFlight() {\n        return this.http.options(this.serviceUrl)\n            .toPromise()\n            .then(response => { return response; })\n            .catch(this.handleError);\n    }\n    redirectLogin() {\n        var returnUrl = window.location.href;\n        sessionStorage.setItem('authenticating', 'authenticating');\n        var url = this.siteUrl + 'api/login' + \"?ReturnUrl=\" + returnUrl;\n        window.open(url, '_self');\n    }\n    login() {\n        this.loginPromise = this.http.get(this.serviceUrl)\n            .toPromise()\n            .then((response) => {\n            var user;\n            user = Object.assign(new CurrentUser(), response);\n            this._user = user;\n            return user;\n        })\n            .catch(error => {\n            return this.handleError(error);\n        });\n        return this.loginPromise;\n    }\n    logout() {\n        this._user = null;\n    }\n    handleError(error) {\n        return Promise.reject(error.message || error);\n    }\n    isInRole(role) {\n        return this.user.roles.find(x => x == role) !== undefined;\n    }\n    isInRoles(roles) {\n        var returnValue = false;\n        roles.forEach(x => {\n            returnValue = returnValue || this.isInRole(x);\n        });\n        return returnValue;\n    }\n    static { this.ɵfac = function CurrentUserService_Factory(t) { return new (t || CurrentUserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(ModConfig)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CurrentUserService, factory: CurrentUserService.ɵfac, providedIn: 'root' }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CurrentUserService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: i1.HttpClient }, { type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, null); })();","originalLength":15829,"removedExports":[],"renderedExports":["CurrentUserService"],"renderedLength":4004},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-side-menu\\mod-side-menu.component.mjs":{"code":"const _c0$2 = [\"mainContent\"];\nconst _c1$2 = [\"sidenav\"];\nfunction ModSideMenuComponent_mat_icon_5_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-icon\", 9);\n    i0.ɵɵlistener(\"click\", function ModSideMenuComponent_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.expandMenu(!ctx_r5.expanded)); });\n    i0.ɵɵtext(1, \" keyboard_arrow_left \");\n    i0.ɵɵelementEnd();\n} }\nfunction ModSideMenuComponent_mat_icon_6_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-icon\", 10);\n    i0.ɵɵlistener(\"click\", function ModSideMenuComponent_mat_icon_6_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.expandMenu(!ctx_r7.expanded)); });\n    i0.ɵɵtext(1, \" keyboard_arrow_right \");\n    i0.ɵɵelementEnd();\n} }\nconst _c2 = function () { return { exact: true }; };\nfunction ModSideMenuComponent_div_7_mat_list_item_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\", 12);\n    i0.ɵɵlistener(\"keyup.enter\", function ModSideMenuComponent_div_7_mat_list_item_4_Template_mat_list_item_keyup_enter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r13); const item_r11 = restoredCtx.$implicit; const ctx_r12 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r12.navigateTo(item_r11.route)); });\n    i0.ɵɵelementStart(1, \"mat-icon\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"routerLink\", item_r11.route)(\"routerLinkActiveOptions\", i0.ɵɵpureFunction0(5, _c2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", item_r11.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r11.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.expanded ? item_r11.text : \"\", \" \");\n} }\nfunction ModSideMenuComponent_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-nav-list\");\n    i0.ɵɵtemplate(4, ModSideMenuComponent_div_7_mat_list_item_4_Template, 4, 6, \"mat-list-item\", 11);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const section_r9 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.expanded ? section_r9.name : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.getViewableMenuItems(section_r9));\n} }\nconst _c3 = function (a1) { return { \"mod-side-menu\": true, \"collapsed\": a1 }; };\nconst _c4 = function (a1) { return { \"mod-side-menu-content\": true, \"collapsed\": a1 }; };\nconst _c5 = [\"*\"];\nclass ModSideMenuComponent {\n    constructor(router, activatedRoute, renderer, userService) {\n        this.router = router;\n        this.activatedRoute = activatedRoute;\n        this.renderer = renderer;\n        this.userService = userService;\n        this.expanded = true;\n        this.opened = true;\n    }\n    ngOnInit() {\n    }\n    ngOnChanges(changes) {\n        if (changes['config'] && changes['config'].previousValue != changes['config'].currentValue) {\n            this.selectCurrentRoute();\n        }\n    }\n    selectCurrentRoute() {\n        var urls = this.router.url.split('/');\n        for (let section of this.config.sections) {\n            for (let item of section.menuItems) {\n                if (urls[urls.length - 1].toString() == item.route) {\n                    this.menuOption = item.text;\n                    break;\n                }\n            }\n        }\n    }\n    // Used by menu item keyup.enter handler to provide keyboard navigation\n    navigateTo(urlSegment) {\n        urlSegment = urlSegment.split('#')[0];\n        var url = \"\";\n        if (urlSegment.startsWith('/')) {\n            url = urlSegment;\n        }\n        else {\n            url = this.activatedRoute.snapshot.url.join('/') + '/' + urlSegment;\n        }\n        // nav to the route, and then set focus on the main content div rather than keep focus\n        // on the nav menu itself (users will need to Shift+Tab their way back to nav menu)\n        this.router.navigateByUrl(url).then(x => {\n            if (this.mainContentElement)\n                this.mainContentElement.nativeElement.focus();\n        });\n    }\n    expandMenu(expanded = true) {\n        this.expanded = expanded;\n    }\n    toggleSideNav() {\n        //this.sidenav.toggle();\n        var opening = !this.opened;\n        if (opening) {\n            this.opened = !this.opened;\n            this.sidenav.toggle();\n        }\n        else {\n            this.sidenav.toggle().then(() => {\n                this.opened = !this.opened;\n            });\n        }\n    }\n    get viewableSections() {\n        let sections = [];\n        this.config.sections.forEach(section => {\n            if (!section.allowedRoles || this.userService.isInRoles(section.allowedRoles))\n                sections.push(section);\n        });\n        return sections;\n    }\n    getViewableMenuItems(section) {\n        let items = [];\n        section.menuItems.forEach(item => {\n            if (!item.allowedRoles || this.userService.isInRoles(item.allowedRoles))\n                items.push(item);\n        });\n        return items;\n    }\n    static { this.ɵfac = function ModSideMenuComponent_Factory(t) { return new (t || ModSideMenuComponent)(i0.ɵɵdirectiveInject(i1$1.Router), i0.ɵɵdirectiveInject(i1$1.ActivatedRoute), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(CurrentUserService)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModSideMenuComponent, selectors: [[\"mod-side-menu\"]], viewQuery: function ModSideMenuComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$2, 7);\n            i0.ɵɵviewQuery(_c1$2, 7);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mainContentElement = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);\n        } }, inputs: { config: \"config\" }, features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c5, decls: 11, vars: 10, consts: [[1, \"mod-side-menu-container\"], [\"mode\", \"side\", \"opened\", \"\", \"role\", \"navigation\", \"id\", \"navigation-menu\", 3, \"ngClass\"], [\"sidenav\", \"\"], [\"mat-subheader\", \"\"], [\"class\", \"menu-close\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"menu-open\", 3, \"click\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"main\", \"tabindex\", \"0\", 3, \"ngClass\"], [\"mainContent\", \"\"], [1, \"menu-close\", 3, \"click\"], [1, \"menu-open\", 3, \"click\"], [\"routerLinkActive\", \"active\", 3, \"routerLink\", \"routerLinkActiveOptions\", \"keyup.enter\", 4, \"ngFor\", \"ngForOf\"], [\"routerLinkActive\", \"active\", 3, \"routerLink\", \"routerLinkActiveOptions\", \"keyup.enter\"], [\"matListItemIcon\", \"\", 3, \"matTooltip\"]], template: function ModSideMenuComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2)(3, \"h1\", 3);\n            i0.ɵɵtext(4);\n            i0.ɵɵtemplate(5, ModSideMenuComponent_mat_icon_5_Template, 2, 0, \"mat-icon\", 4);\n            i0.ɵɵtemplate(6, ModSideMenuComponent_mat_icon_6_Template, 2, 0, \"mat-icon\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(7, ModSideMenuComponent_div_7_Template, 5, 2, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"mat-sidenav-content\", 7, 8);\n            i0.ɵɵprojection(10);\n            i0.ɵɵelementEnd()();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c3, !ctx.expanded && ctx.opened));\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", ctx.expanded ? ctx.config.title : \"\", \" \");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.expanded);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.expanded);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.viewableSections);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c4, !ctx.expanded && ctx.opened));\n        } }, dependencies: [i1$2.NgClass, i1$2.NgForOf, i1$2.NgIf, i1$1.RouterLink, i1$1.RouterLinkActive, i3.MatIcon, i5.MatNavList, i5.MatListItem, i5.MatListItemIcon, i5.MatListSubheaderCssMatStyler, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent, i7.MatTooltip], styles: [\"#main-content[_ngcontent-%COMP%]:focus{border:1px solid #5b9acf}.menu-close[_ngcontent-%COMP%]{position:absolute;right:0;cursor:pointer}.menu-open[_ngcontent-%COMP%]{text-align:center;width:100%;cursor:pointer}.mod-side-menu[_ngcontent-%COMP%]{display:flex;align-items:flex-start;justify-content:left;width:250px;transition:width .25s}.mod-side-menu.collapsed[_ngcontent-%COMP%]{width:76px!important;transition:width .25s}.mod-side-menu-container[_ngcontent-%COMP%]{display:flex;height:100%}.mod-side-menu-content[_ngcontent-%COMP%]{transition:margin-left .25s;width:100%;overflow:auto;display:flex;align-items:stretch;outline:none!important}.mod-side-menu-content.collapsed[_ngcontent-%COMP%]{margin-left:76px!important;transition:margin-left .25s}h2[_ngcontent-%COMP%]{overflow:hidden;white-space:nowrap;text-overflow:clip}.mat-mdc-subheader[_ngcontent-%COMP%]{font-size:14px;line-height:20px;max-height:56px;color:#888;padding:12px 12px 12px 20px!important;margin-bottom:0!important;margin-top:0!important}.mat-mdc-subheader[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%]{padding-left:4px;margin-right:16px}.mat-mdc-expansion-panel[_ngcontent-%COMP%]{box-shadow:none;margin:0}.mat-mdc-expansion-indicator[_ngcontent-%COMP%]{line-height:0!important}mat-mdc-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]{color:initial}.mat-mdc-expansion-panel-header[_ngcontent-%COMP%]{height:56px!important;max-height:56px!important;border-left:5px solid #bbb}.mat-mdc-expansion-panel-header-title[_ngcontent-%COMP%]{max-height:24px}.mat-mdc-expansion-panel.active[_ngcontent-%COMP%] > .mat-mdc-expansion-panel-header[_ngcontent-%COMP%]{border-color:#5b9acf}.mat-mdc-expansion-panel-header-title[_ngcontent-%COMP%] > .mat-icon[_ngcontent-%COMP%]{margin-right:16px}.mat-mdc-expansion-panel.mat-mdc-expanded[_ngcontent-%COMP%]{background-color:#eee}  .mat-mdc-expansion-panel-body{padding:0!important}  .mat-drawer-container{display:flex;align-items:stretch}  .mat-drawer-inner-container{overflow-x:hidden!important}.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]{margin-right:16px!important;color:#000000de!important}.mat-mdc-list-item[_ngcontent-%COMP%]{font-size:15px!important;border-left:5px solid #bbb;margin-left:-5px;height:56px!important;max-height:56px!important;line-height:22.5px!important;width:auto!important}.mat-mdc-list-item[_ngcontent-%COMP%]:focus{border:1px solid #5b9acf}.mdc-list-item__content[_ngcontent-%COMP%]{padding:0 24px!important}.mat-mdc-list-item.active[_ngcontent-%COMP%]{border-color:#5b9acf;background-color:#d1d1d1}.mat-mdc-list-base[_ngcontent-%COMP%]{padding-top:0}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModSideMenuComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-side-menu', template: \"<mat-sidenav-container class=\\\"mod-side-menu-container\\\">\\r\\n    <mat-sidenav #sidenav mode=\\\"side\\\" opened role=\\\"navigation\\\" id=\\\"navigation-menu\\\" [ngClass]=\\\"{'mod-side-menu' : true, 'collapsed' : (!expanded && opened)}\\\">\\r\\n        <h1 mat-subheader>\\r\\n            {{ expanded ? config.title : \\\"\\\" }}\\r\\n            <mat-icon *ngIf=\\\"expanded\\\" class=\\\"menu-close\\\" (click)=\\\"expandMenu(!this.expanded)\\\">\\r\\n                keyboard_arrow_left\\r\\n            </mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!expanded\\\" class=\\\"menu-open\\\" (click)=\\\"expandMenu(!this.expanded)\\\">\\r\\n                keyboard_arrow_right\\r\\n            </mat-icon>\\r\\n        </h1>\\r\\n\\r\\n        <div *ngFor=\\\"let section of viewableSections\\\">\\r\\n            <h1 mat-subheader>\\r\\n                {{ expanded ? section.name : \\\"\\\" }}\\r\\n            </h1>\\r\\n            <mat-nav-list>\\r\\n                <mat-list-item *ngFor=\\\"let item of getViewableMenuItems(section)\\\"\\r\\n                               [routerLink]=\\\"item.route\\\"\\r\\n                               routerLinkActive=\\\"active\\\"\\r\\n                               [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\r\\n                               (keyup.enter)=\\\"navigateTo(item.route)\\\">\\r\\n                    <mat-icon matListItemIcon [matTooltip]=\\\"item.text\\\">{{item.icon}}</mat-icon>\\r\\n                    {{ expanded ? item.text : \\\"\\\"}}\\r\\n                </mat-list-item>\\r\\n            </mat-nav-list>\\r\\n        </div>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content [ngClass]=\\\"{'mod-side-menu-content' : true, 'collapsed' : (!expanded && opened)}\\\" role=\\\"main\\\" #mainContent tabindex=\\\"0\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\", styles: [\"#main-content:focus{border:1px solid #5b9acf}.menu-close{position:absolute;right:0;cursor:pointer}.menu-open{text-align:center;width:100%;cursor:pointer}.mod-side-menu{display:flex;align-items:flex-start;justify-content:left;width:250px;transition:width .25s}.mod-side-menu.collapsed{width:76px!important;transition:width .25s}.mod-side-menu-container{display:flex;height:100%}.mod-side-menu-content{transition:margin-left .25s;width:100%;overflow:auto;display:flex;align-items:stretch;outline:none!important}.mod-side-menu-content.collapsed{margin-left:76px!important;transition:margin-left .25s}h2{overflow:hidden;white-space:nowrap;text-overflow:clip}.mat-mdc-subheader{font-size:14px;line-height:20px;max-height:56px;color:#888;padding:12px 12px 12px 20px!important;margin-bottom:0!important;margin-top:0!important}.mat-mdc-subheader .mat-icon{padding-left:4px;margin-right:16px}.mat-mdc-expansion-panel{box-shadow:none;margin:0}.mat-mdc-expansion-indicator{line-height:0!important}mat-mdc-expansion-panel-header[aria-disabled=true]{color:initial}.mat-mdc-expansion-panel-header{height:56px!important;max-height:56px!important;border-left:5px solid #bbb}.mat-mdc-expansion-panel-header-title{max-height:24px}.mat-mdc-expansion-panel.active>.mat-mdc-expansion-panel-header{border-color:#5b9acf}.mat-mdc-expansion-panel-header-title>.mat-icon{margin-right:16px}.mat-mdc-expansion-panel.mat-mdc-expanded{background-color:#eee}::ng-deep .mat-mdc-expansion-panel-body{padding:0!important}::ng-deep .mat-drawer-container{display:flex;align-items:stretch}::ng-deep .mat-drawer-inner-container{overflow-x:hidden!important}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-right:16px!important;color:#000000de!important}.mat-mdc-list-item{font-size:15px!important;border-left:5px solid #bbb;margin-left:-5px;height:56px!important;max-height:56px!important;line-height:22.5px!important;width:auto!important}.mat-mdc-list-item:focus{border:1px solid #5b9acf}.mdc-list-item__content{padding:0 24px!important}.mat-mdc-list-item.active{border-color:#5b9acf;background-color:#d1d1d1}.mat-mdc-list-base{padding-top:0}\\n\"] }]\n    }], function () { return [{ type: i1$1.Router }, { type: i1$1.ActivatedRoute }, { type: i0.Renderer2 }, { type: CurrentUserService }]; }, { config: [{\n            type: Input\n        }], mainContentElement: [{\n            type: ViewChild,\n            args: ['mainContent', { static: true }]\n        }], sidenav: [{\n            type: ViewChild,\n            args: ['sidenav', { static: true }]\n        }] }); })();","originalLength":28532,"removedExports":[],"renderedExports":["ModSideMenuComponent"],"renderedLength":15767},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-user-display\\mod-user-display.component.mjs":{"code":"function ModUserDisplayComponent_div_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 6)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"account_circle\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r4);\n} }\nfunction ModUserDisplayComponent_div_0_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 7)(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"keyboard_arrow_down\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(7);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r4);\n} }\nfunction ModUserDisplayComponent_div_0_button_8_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ModUserDisplayComponent_div_0_button_8_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r8); const option_r6 = restoredCtx.$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r7.optionSelected(option_r6)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r6);\n} }\nfunction ModUserDisplayComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ModUserDisplayComponent_div_0_ng_container_3_Template, 4, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(4, ModUserDisplayComponent_div_0_ng_template_4_Template, 3, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"mat-menu\", null, 4);\n    i0.ɵɵtemplate(8, ModUserDisplayComponent_div_0_button_8_Template, 2, 1, \"button\", 5);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const _r2 = i0.ɵɵreference(5);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.user.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showUser)(\"ngIfElse\", _r2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.config.userOptions);\n} }\nclass ModUserDisplayComponent {\n    constructor(userService, config) {\n        this.userService = userService;\n        this.showUser = false;\n        this.selectOption = new EventEmitter();\n        this.config = config;\n        this.config.userOptions.push('User Profile');\n    }\n    ngOnInit() {\n    }\n    get user() {\n        return this.userService.user;\n    }\n    optionSelected(option) {\n        if (option == \"User Profile\") {\n            window.open(this.config.profileUrl, '_blank');\n        }\n        else {\n            this.selectOption.emit(option);\n        }\n    }\n    static { this.ɵfac = function ModUserDisplayComponent_Factory(t) { return new (t || ModUserDisplayComponent)(i0.ɵɵdirectiveInject(CurrentUserService), i0.ɵɵdirectiveInject(ModConfig)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModUserDisplayComponent, selectors: [[\"mod-user-display\"]], inputs: { showUser: \"showUser\" }, outputs: { selectOption: \"selectOption\" }, decls: 1, vars: 1, consts: [[4, \"ngIf\"], [2, \"padding-right\", \"5px\", \"margin-top\", \"-5px\"], [4, \"ngIf\", \"ngIfElse\"], [\"showMenu\", \"\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"User Menu\", 1, \"mod-user-icon\", 3, \"matMenuTriggerFor\"], [\"mat-icon-button\", \"\", \"aria-label\", \"User Menu\", 1, \"mat-icon-button\", 3, \"matMenuTriggerFor\"], [\"mat-menu-item\", \"\", 3, \"click\"]], template: function ModUserDisplayComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, ModUserDisplayComponent_div_0_Template, 9, 4, \"div\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.user);\n        } }, dependencies: [i1$2.NgForOf, i1$2.NgIf, i3.MatIcon, i4.MatMenu, i4.MatMenuItem, i4.MatMenuTrigger, i5$1.MatIconButton], styles: [\".delete-potentially-circle-user-icon[_ngcontent-%COMP%]{border:2px solid inherit!important;border-radius:50%!important;padding:5px!important;margin-left:15px!important}.mat-mdc-button-base[_ngcontent-%COMP%]{height:auto;line-height:inherit}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModUserDisplayComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-user-display', template: \"<div *ngIf=\\\"user\\\">\\r\\n    <span style=\\\"padding-right: 5px; margin-top: -5px;\\\">{{ user.displayName }}</span>\\r\\n    <ng-container *ngIf=\\\"showUser;else showMenu\\\">\\r\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"mod-user-icon\\\" aria-label=\\\"User Menu\\\">\\r\\n            <mat-icon>account_circle</mat-icon>\\r\\n        </button>\\r\\n    </ng-container>\\r\\n    <ng-template #showMenu>\\r\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"mat-icon-button\\\" aria-label=\\\"User Menu\\\">\\r\\n            <mat-icon>keyboard_arrow_down</mat-icon>\\r\\n        </button>\\r\\n    </ng-template>\\r\\n    <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item *ngFor=\\\"let option of config.userOptions\\\" (click)=\\\"optionSelected(option)\\\">{{ option }}</button>\\r\\n    </mat-menu>\\r\\n</div>\\r\\n\", styles: [\".delete-potentially-circle-user-icon{border:2px solid inherit!important;border-radius:50%!important;padding:5px!important;margin-left:15px!important}.mat-mdc-button-base{height:auto;line-height:inherit}\\n\"] }]\n    }], function () { return [{ type: CurrentUserService }, { type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, { showUser: [{\n            type: Input\n        }], selectOption: [{\n            type: Output\n        }] }); })();","originalLength":11351,"removedExports":[],"renderedExports":["ModUserDisplayComponent"],"renderedLength":5832},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-header\\mod-header.component.mjs":{"code":"function ModHeaderComponent_div_9_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ModHeaderComponent_div_9_button_6_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r5); const option_r3 = restoredCtx.$implicit; const ctx_r4 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r4.optionSelected(option_r3)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r3);\n} }\nfunction ModHeaderComponent_div_9_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 8)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"help\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-menu\", null, 9);\n    i0.ɵɵtemplate(6, ModHeaderComponent_div_9_button_6_Template, 2, 1, \"button\", 10);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const _r1 = i0.ɵɵreference(5);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.config.helpOptions);\n} }\nconst _c0$1 = function () { return [\"/\"]; };\nconst _c1$1 = [\"*\"];\nclass ModHeaderComponent {\n    constructor(config) {\n        this.menuClick = new EventEmitter();\n        this.userOptionSelect = new EventEmitter();\n        this.helpOptionSelect = new EventEmitter();\n        this.config = config;\n    }\n    ngOnInit() {\n    }\n    onMenuClick() {\n        this.menuClick.emit();\n    }\n    onUserOptionSelect(option) {\n        this.userOptionSelect.emit(option);\n    }\n    optionSelected(option) {\n        this.helpOptionSelect.emit(option);\n    }\n    static { this.ɵfac = function ModHeaderComponent_Factory(t) { return new (t || ModHeaderComponent)(i0.ɵɵdirectiveInject(ModConfig)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModHeaderComponent, selectors: [[\"mod-header\"]], inputs: { appName: \"appName\" }, outputs: { menuClick: \"menuClick\", userOptionSelect: \"userOptionSelect\", helpOptionSelect: \"helpOptionSelect\" }, ngContentSelectors: _c1$1, decls: 10, vars: 5, consts: [[1, \"mod-header\"], [1, \"logo-text-mark\", 3, \"routerLink\"], [\"src\", \"/assets/US-OfficeOfManagementAndBudget-Seal.png\", \"tabindex\", \"-1\", 1, \"mod-logo\"], [\"tabindex\", \"-1\", \"alt\", \"Textmark\", 1, \"text-mark\"], [1, \"fill-remaining-space\"], [1, \"welcome-user\"], [3, \"showUser\", \"selectOption\"], [4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Help Menu\", 3, \"matMenuTriggerFor\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 3, \"click\"]], template: function ModHeaderComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"a\", 1);\n            i0.ɵɵelement(2, \"img\", 2);\n            i0.ɵɵelementStart(3, \"div\", 3);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"span\", 4);\n            i0.ɵɵprojection(6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"mod-user-display\", 6);\n            i0.ɵɵlistener(\"selectOption\", function ModHeaderComponent_Template_mod_user_display_selectOption_8_listener($event) { return ctx.onUserOptionSelect($event); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(9, ModHeaderComponent_div_9_Template, 7, 2, \"div\", 7);\n            i0.ɵɵelementEnd()();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0$1));\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.appName);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"showUser\", true);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.config.showHelp);\n        } }, dependencies: [i1$2.NgForOf, i1$2.NgIf, i1$1.RouterLink, i3.MatIcon, i4$1.MatToolbar, i4.MatMenu, i4.MatMenuItem, i4.MatMenuTrigger, i5$1.MatIconButton, ModUserDisplayComponent], styles: [\".mod-header[_ngcontent-%COMP%]{justify-content:center;background-color:#112e51;display:flex;color:#fff}a[_ngcontent-%COMP%]{text-decoration:none}.logo-text-mark[_ngcontent-%COMP%]{cursor:pointer;display:flex;align-items:center}.text-mark[_ngcontent-%COMP%]{cursor:pointer;margin-left:12px;font-size:1.4em;display:inline-block;vertical-align:middle;color:#d8b304}.mod-logo[_ngcontent-%COMP%]{margin-left:4px;height:50px}.fill-remaining-space[_ngcontent-%COMP%]{flex:1 1 auto;align-items:center;margin-left:15px}.welcome-user[_ngcontent-%COMP%]{font-size:.85em;padding-top:2px;padding-right:5px;flex:1;display:flex;justify-content:flex-end}.mat-mdc-button-base[_ngcontent-%COMP%]{height:auto;line-height:inherit}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModHeaderComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-header', template: \"<mat-toolbar class=\\\"mod-header\\\">\\r\\n    <!--<button mat-icon-button (click)=\\\"onMenuClick()\\\">\\r\\n        <mat-icon>\\r\\n            menu\\r\\n        </mat-icon>\\r\\n    </button>-->\\r\\n\\r\\n    <a class=\\\"logo-text-mark\\\" [routerLink]=\\\"['/']\\\">\\r\\n        <img class=\\\"mod-logo\\\" src=\\\"/assets/US-OfficeOfManagementAndBudget-Seal.png\\\" tabindex=\\\"-1\\\" />\\r\\n        <div tabindex=\\\"-1\\\" alt=\\\"Textmark\\\" class=\\\"text-mark\\\">{{ appName }}</div>\\r\\n    </a>\\r\\n\\r\\n    <span class=\\\"fill-remaining-space\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </span>\\r\\n\\r\\n    <div class=\\\"welcome-user\\\">\\r\\n        <mod-user-display [showUser]=\\\"true\\\" (selectOption)=\\\"onUserOptionSelect($event)\\\"></mod-user-display>\\r\\n        <div *ngIf=\\\"config.showHelp\\\">\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Help Menu\\\">\\r\\n                <mat-icon>help</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item *ngFor=\\\"let option of config.helpOptions\\\" (click)=\\\"optionSelected(option)\\\">{{ option }}</button>\\r\\n            </mat-menu>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-toolbar>\\r\\n\", styles: [\".mod-header{justify-content:center;background-color:#112e51;display:flex;color:#fff}a{text-decoration:none}.logo-text-mark{cursor:pointer;display:flex;align-items:center}.text-mark{cursor:pointer;margin-left:12px;font-size:1.4em;display:inline-block;vertical-align:middle;color:#d8b304}.mod-logo{margin-left:4px;height:50px}.fill-remaining-space{flex:1 1 auto;align-items:center;margin-left:15px}.welcome-user{font-size:.85em;padding-top:2px;padding-right:5px;flex:1;display:flex;justify-content:flex-end}.mat-mdc-button-base{height:auto;line-height:inherit}\\n\"] }]\n    }], function () { return [{ type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, { appName: [{\n            type: Input\n        }], menuClick: [{\n            type: Output\n        }], userOptionSelect: [{\n            type: Output\n        }], helpOptionSelect: [{\n            type: Output\n        }] }); })();","originalLength":13041,"removedExports":[],"renderedExports":["ModHeaderComponent"],"renderedLength":7103},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-progress-spinner\\mod-progress-spinner.component.mjs":{"code":"function ModProgressSpinnerComponent_ng_container_0_ng_template_3_Template(rf, ctx) { }\nfunction ModProgressSpinnerComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵtemplate(3, ModProgressSpinnerComponent_ng_container_0_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n} }\nfunction ModProgressSpinnerComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 5);\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"diameter\", ctx_r2.diameter)(\"mode\", ctx_r2.mode)(\"color\", ctx_r2.color)(\"strokeWidth\", ctx_r2.strokeWidth)(\"value\", ctx_r2.value);\n} }\nclass ModProgressSpinnerComponent {\n    constructor() {\n        this.value = 100;\n        this.diameter = 100;\n        this.mode = \"indeterminate\";\n        this.strokeWidth = 10;\n        this.overlay = false;\n        this.color = \"primary\";\n    }\n    ngOnInit() {\n    }\n    static { this.ɵfac = function ModProgressSpinnerComponent_Factory(t) { return new (t || ModProgressSpinnerComponent)(); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModProgressSpinnerComponent, selectors: [[\"mod-progress-spinner\"]], inputs: { value: \"value\", diameter: \"diameter\", mode: \"mode\", strokeWidth: \"strokeWidth\", overlay: \"overlay\", color: \"color\" }, decls: 3, vars: 2, consts: [[4, \"ngIf\", \"ngIfElse\"], [\"progressSpinner\", \"\"], [1, \"overlay\"], [1, \"center\"], [3, \"ngTemplateOutlet\"], [3, \"diameter\", \"mode\", \"color\", \"strokeWidth\", \"value\"]], template: function ModProgressSpinnerComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, ModProgressSpinnerComponent_ng_container_0_Template, 4, 1, \"ng-container\", 0);\n            i0.ɵɵtemplate(1, ModProgressSpinnerComponent_ng_template_1_Template, 1, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        } if (rf & 2) {\n            const _r1 = i0.ɵɵreference(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.overlay)(\"ngIfElse\", _r1);\n        } }, dependencies: [i1$2.NgIf, i1$2.NgTemplateOutlet, i2.MatProgressSpinner], styles: [\".center[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%) translateY(-50%)}.overlay[_ngcontent-%COMP%]{height:100vh;width:100%;background-color:#00000049;z-index:10;top:0;left:0;position:fixed}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModProgressSpinnerComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-progress-spinner', template: \"<ng-container *ngIf=\\\"overlay;else progressSpinner\\\">\\r\\n    <div class=\\\"overlay\\\">\\r\\n        <div class=\\\"center\\\">\\r\\n            <ng-template [ngTemplateOutlet]=\\\"progressSpinner\\\"></ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-container>\\r\\n<ng-template #progressSpinner>\\r\\n    <mat-progress-spinner [diameter]=\\\"diameter\\\"\\r\\n                          [mode]=\\\"mode\\\"\\r\\n                          [color]=\\\"color\\\"\\r\\n                          [strokeWidth]=\\\"strokeWidth\\\"\\r\\n                          [value]=\\\"value\\\">\\r\\n    </mat-progress-spinner>\\r\\n</ng-template>\\r\\n\", styles: [\".center{position:absolute;top:50%;left:50%;transform:translate(-50%) translateY(-50%)}.overlay{height:100vh;width:100%;background-color:#00000049;z-index:10;top:0;left:0;position:fixed}\\n\"] }]\n    }], function () { return []; }, { value: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], overlay: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();","originalLength":7149,"removedExports":[],"renderedExports":["ModProgressSpinnerComponent"],"renderedLength":3894},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-loading-overlay\\mod-loading-overlay.component.mjs":{"code":"function ModLoadingOverlayComponent_mod_progress_spinner_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"mod-progress-spinner\", 1);\n} if (rf & 2) {\n    i0.ɵɵproperty(\"overlay\", true);\n} }\nclass ModLoadingOverlayComponent {\n    constructor(loadingService) {\n        this.loadingService = loadingService;\n        this.showProgressSpinner = false;\n        this.loadingService.isLoading.subscribe((isLoading) => {\n            if (isLoading) {\n                this.showProgressSpinner = true;\n            }\n            else {\n                this.showProgressSpinner = false;\n            }\n        });\n    }\n    ngOnInit() {\n    }\n    static { this.ɵfac = function ModLoadingOverlayComponent_Factory(t) { return new (t || ModLoadingOverlayComponent)(i0.ɵɵdirectiveInject(LoadingService)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModLoadingOverlayComponent, selectors: [[\"mod-loading-overlay\"]], decls: 1, vars: 1, consts: [[3, \"overlay\", 4, \"ngIf\"], [3, \"overlay\"]], template: function ModLoadingOverlayComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, ModLoadingOverlayComponent_mod_progress_spinner_0_Template, 1, 1, \"mod-progress-spinner\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.showProgressSpinner);\n        } }, dependencies: [i1$2.NgIf, ModProgressSpinnerComponent] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModLoadingOverlayComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-loading-overlay', template: \"<mod-progress-spinner *ngIf=\\\"showProgressSpinner\\\" [overlay]=\\\"true\\\"></mod-progress-spinner>\\r\\n\" }]\n    }], function () { return [{ type: LoadingService }]; }, null); })();","originalLength":4406,"removedExports":[],"renderedExports":["ModLoadingOverlayComponent"],"renderedLength":1746},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-layout\\mod-layout.component.mjs":{"code":"const _c0 = [\"sidemenu\"];\nfunction ModLayoutComponent_div_4_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function ModLayoutComponent_div_4_Template_input_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.searchText = $event); })(\"keyup.enter\", function ModLayoutComponent_div_4_Template_input_keyup_enter_1_listener() { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onSearch()); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.searchText);\n} }\nconst _c1 = [\"*\"];\nclass ModLayoutComponent {\n    constructor(config) {\n        this.userOptionSelect = new EventEmitter();\n        this.helpOptionSelect = new EventEmitter();\n        this.search = new EventEmitter();\n        this.config = config;\n    }\n    ngOnInit() {\n    }\n    onMenuClicked() {\n        this.sideMenu.toggleSideNav();\n    }\n    onUserOptionSelect(option) {\n        this.userOptionSelect.emit(option);\n    }\n    onHelpOptionSelect(option) {\n        this.helpOptionSelect.emit(option);\n    }\n    onSearch() {\n        this.search.emit(this.searchText);\n        this.searchText = '';\n    }\n    static { this.ɵfac = function ModLayoutComponent_Factory(t) { return new (t || ModLayoutComponent)(i0.ɵɵdirectiveInject(ModConfig)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModLayoutComponent, selectors: [[\"mod-layout\"]], viewQuery: function ModLayoutComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sideMenu = _t.first);\n        } }, inputs: { appName: \"appName\", menuConfig: \"menuConfig\" }, outputs: { userOptionSelect: \"userOptionSelect\", helpOptionSelect: \"helpOptionSelect\", search: \"search\" }, ngContentSelectors: _c1, decls: 9, vars: 3, consts: [[1, \"mod-layout-container\"], [1, \"layout-header\"], [3, \"appName\", \"menuClick\", \"userOptionSelect\", \"helpOptionSelect\"], [\"style\", \"display: flex; justify-content: center;\", 4, \"ngIf\"], [1, \"layout-content\"], [3, \"config\"], [\"sidemenu\", \"\"], [2, \"display\", \"flex\", \"justify-content\", \"center\"], [\"matInput\", \"\", \"placeholder\", \"Search\", 1, \"search-box\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"]], template: function ModLayoutComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"mod-loading-overlay\");\n            i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"mod-header\", 2);\n            i0.ɵɵlistener(\"menuClick\", function ModLayoutComponent_Template_mod_header_menuClick_3_listener() { return ctx.onMenuClicked(); })(\"userOptionSelect\", function ModLayoutComponent_Template_mod_header_userOptionSelect_3_listener($event) { return ctx.onUserOptionSelect($event); })(\"helpOptionSelect\", function ModLayoutComponent_Template_mod_header_helpOptionSelect_3_listener($event) { return ctx.onHelpOptionSelect($event); });\n            i0.ɵɵtemplate(4, ModLayoutComponent_div_4_Template, 2, 1, \"div\", 3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"mod-side-menu\", 5, 6);\n            i0.ɵɵprojection(8);\n            i0.ɵɵelementEnd()()();\n        } if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"appName\", ctx.appName);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.config.showSearch);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"config\", ctx.menuConfig);\n        } }, dependencies: [i1$2.NgIf, i2$1.DefaultValueAccessor, i2$1.NgControlStatus, i2$1.NgModel, i3$1.MatInput, ModSideMenuComponent, ModHeaderComponent, ModLoadingOverlayComponent], styles: [\".mod-layout-container[_ngcontent-%COMP%]{display:flex;flex-flow:column;height:100%}.layout-header[_ngcontent-%COMP%]{flex:0}.layout-content[_ngcontent-%COMP%]{flex:1;overflow:auto}.search-box[_ngcontent-%COMP%]{background-color:#fff;box-shadow:none;border:none;min-height:32px;width:50%;color:#000;font-size:14px;padding-top:0;padding-right:15px;border-radius:16px;padding-left:15px;margin-left:15px;margin-right:15px}.search-box[_ngcontent-%COMP%]:focus{outline:none}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModLayoutComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-layout', template: \"<mod-loading-overlay></mod-loading-overlay>\\r\\n<div class=\\\"mod-layout-container\\\">\\r\\n    <div class=\\\"layout-header\\\">\\r\\n        <!--<mod-welcome-banner>\\r\\n        </mod-welcome-banner>-->\\r\\n        <mod-header [appName]=\\\"appName\\\" (menuClick)=\\\"onMenuClicked()\\\" (userOptionSelect)=\\\"onUserOptionSelect($event)\\\" (helpOptionSelect)=\\\"onHelpOptionSelect($event)\\\">\\r\\n            <div *ngIf=\\\"config.showSearch\\\" style=\\\"display: flex; justify-content: center;\\\">\\r\\n                <input [(ngModel)]=\\\"searchText\\\" matInput placeholder=\\\"Search\\\" class=\\\"search-box\\\" (keyup.enter)=\\\"onSearch()\\\">\\r\\n            </div>\\r\\n        </mod-header>\\r\\n    </div>\\r\\n    <div class=\\\"layout-content\\\">\\r\\n        <mod-side-menu [config]=\\\"menuConfig\\\" #sidemenu>\\r\\n            <ng-content></ng-content>\\r\\n        </mod-side-menu>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".mod-layout-container{display:flex;flex-flow:column;height:100%}.layout-header{flex:0}.layout-content{flex:1;overflow:auto}.search-box{background-color:#fff;box-shadow:none;border:none;min-height:32px;width:50%;color:#000;font-size:14px;padding-top:0;padding-right:15px;border-radius:16px;padding-left:15px;margin-left:15px;margin-right:15px}.search-box:focus{outline:none}\\n\"] }]\n    }], function () { return [{ type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, { sideMenu: [{\n            type: ViewChild,\n            args: ['sidemenu', { static: true }]\n        }], appName: [{\n            type: Input\n        }], menuConfig: [{\n            type: Input\n        }], userOptionSelect: [{\n            type: Output\n        }], helpOptionSelect: [{\n            type: Output\n        }], search: [{\n            type: Output\n        }] }); })();","originalLength":12700,"removedExports":[],"renderedExports":["ModLayoutComponent"],"renderedLength":6348},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\mod-welcome-banner\\mod-welcome-banner.component.mjs":{"code":"class ModWelcomeBanner {\n    constructor() {\n        this.onLogin = new EventEmitter();\n        this.onLogout = new EventEmitter();\n    }\n    ngOnInit() {\n    }\n    static { this.ɵfac = function ModWelcomeBanner_Factory(t) { return new (t || ModWelcomeBanner)(); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModWelcomeBanner, selectors: [[\"mod-welcome-banner\"]], outputs: { onLogin: \"onLogin\", onLogout: \"onLogout\" }, decls: 4, vars: 0, consts: [[\"role\", \"banner\", 1, \"mod-header\"], [1, \"mod-welcome-banner\"], [1, \"welcome-user\"]], template: function ModWelcomeBanner_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"header\", 0)(1, \"div\", 1)(2, \"div\", 2);\n            i0.ɵɵelement(3, \"mod-user-display\");\n            i0.ɵɵelementEnd()()();\n        } }, dependencies: [ModUserDisplayComponent], styles: [\".mod-header[_ngcontent-%COMP%]{display:flex;flex-direction:column}.mod-welcome-banner[_ngcontent-%COMP%]{padding-left:10px;padding-right:10px;background-color:#f0f0f0;padding-bottom:0;display:flex;font-family:Source Sans Pro Web,Helvetica Neue,Helvetica,Roboto,Arial,sans-serif}.welcome-user[_ngcontent-%COMP%]{font-weight:700;font-size:.85em;padding-top:2px;padding-right:5px;flex:1;display:flex;justify-content:flex-end}.loginout-button[_ngcontent-%COMP%]{vertical-align:middle;width:auto!important;display:inline!important}.loginout-text[_ngcontent-%COMP%]{align-items:center}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModWelcomeBanner, [{\n        type: Component,\n        args: [{ selector: 'mod-welcome-banner', template: \"<header class=\\\"mod-header\\\" role=\\\"banner\\\">\\r\\n    <div class=\\\"mod-welcome-banner\\\">\\r\\n        <div class=\\\"welcome-user\\\">\\r\\n            <mod-user-display></mod-user-display>\\r\\n        </div>\\r\\n    </div>\\r\\n</header>\\r\\n\", styles: [\".mod-header{display:flex;flex-direction:column}.mod-welcome-banner{padding-left:10px;padding-right:10px;background-color:#f0f0f0;padding-bottom:0;display:flex;font-family:Source Sans Pro Web,Helvetica Neue,Helvetica,Roboto,Arial,sans-serif}.welcome-user{font-weight:700;font-size:.85em;padding-top:2px;padding-right:5px;flex:1;display:flex;justify-content:flex-end}.loginout-button{vertical-align:middle;width:auto!important;display:inline!important}.loginout-text{align-items:center}\\n\"] }]\n    }], function () { return []; }, { onLogin: [{\n            type: Output\n        }], onLogout: [{\n            type: Output\n        }] }); })();","originalLength":4668,"removedExports":[],"renderedExports":["ModWelcomeBanner"],"renderedLength":2513},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\components\\browser-check\\browser-check.component.mjs":{"code":"function BrowserCheckComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 3);\n    i0.ɵɵtext(3, \"\\u00A0\\u00A0You can't log in to this site.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵtext(5, \" Possible reasons for this include: \");\n    i0.ɵɵelementStart(6, \"ul\")(7, \"li\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementStart(9, \"ul\")(10, \"li\");\n    i0.ɵɵtext(11, \"Please check your network connection.\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"li\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementStart(14, \"ul\")(15, \"li\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"li\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementStart(19, \"ul\")(20, \"li\");\n    i0.ɵɵtext(21, \"In your browser settings, either allow all third-party cookies, or \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"li\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(24, \"i\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelement(26, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \" Please correct these problems and try again. \");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" You can't reach the site \", ctx_r0.loginSite, \". \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\" Site \", ctx_r0.loginSite, \" does not allow cross-origin scripting (CORS) from your domain \", ctx_r0.myDomain, \". \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Please contact the administrator of \", ctx_r0.loginSite, \" and request access for your site.\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Your browser doesn't accept third-party cookies from domain \", ctx_r0.loginDomain, \". \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Disallow third-party cookies, but add \", ctx_r0.loginDomain, \" as an exception.\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"The actual error returned is \\\"\", ctx_r0.browserFail, \"\\\".\");\n} }\nclass BrowserCheckComponent {\n    constructor(currentUserService) {\n        this.currentUserService = currentUserService;\n    }\n    ngOnInit() {\n        this.currentUserService.browserCheck().then(response => {\n            this.browserFail = '';\n            return;\n        }).catch(error => {\n            $(\"#loginout\").css(\"display\", \"none\");\n            this.browserFail = error;\n            this.loginSite = this.currentUserService.siteUrl;\n            this.loginDomain = this.currentUserService.domain;\n            this.myDomain = this.currentUserService.getDomain(window.location.href);\n        });\n    }\n    static { this.ɵfac = function BrowserCheckComponent_Factory(t) { return new (t || BrowserCheckComponent)(i0.ɵɵdirectiveInject(CurrentUserService)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BrowserCheckComponent, selectors: [[\"mod-browser-check\"]], decls: 1, vars: 1, consts: [[\"class\", \"container-fluid browser-check-container\", 4, \"ngIf\"], [1, \"container-fluid\", \"browser-check-container\"], [1, \"fa\", \"fa-warning\", \"browser-check-icon\"], [1, \"browser-check-header-text\"], [1, \"browser-check-text\"]], template: function BrowserCheckComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, BrowserCheckComponent_div_0_Template, 28, 7, \"div\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.browserFail);\n        } }, dependencies: [i1$2.NgIf], styles: [\".browser-check-container[_ngcontent-%COMP%]{border:4px solid red;padding-top:5px;padding-bottom:5px;padding-left:10px}.browser-check-icon[_ngcontent-%COMP%]{font-size:36px;color:red;vertical-align:middle}.browser-check-text[_ngcontent-%COMP%]{font-size:16px;vertical-align:middle;padding-left:30px;padding-top:10px}.browser-check-header-text[_ngcontent-%COMP%]{font-size:24px;font-weight:700;vertical-align:middle}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserCheckComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-browser-check', template: \"<div *ngIf=\\\"browserFail\\\" class=\\\"container-fluid browser-check-container\\\">\\r\\n    <span class=\\\"fa fa-warning browser-check-icon\\\"></span><span class=\\\"browser-check-header-text\\\">&nbsp;&nbsp;You can't log in to this site.</span>\\r\\n    <div class=\\\"browser-check-text\\\">\\r\\n        Possible reasons for this include:\\r\\n        <ul>\\r\\n            <li>\\r\\n                You can't reach the site {{loginSite}}.\\r\\n                <ul>\\r\\n                    <li>Please check your network connection.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n            <li>\\r\\n                Site {{loginSite}} does not allow cross-origin scripting (CORS) from your domain {{myDomain}}.\\r\\n                <ul>\\r\\n                    <li>Please contact the administrator of {{loginSite}} and request access for your site.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n            <li>\\r\\n                Your browser doesn't accept third-party cookies from domain {{loginDomain}}.\\r\\n                <ul>\\r\\n                    <li>In your browser settings, either allow all third-party cookies, or </li>\\r\\n                    <li>Disallow third-party cookies, but add {{loginDomain}} as an exception.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <i>The actual error returned is \\\"{{browserFail}}\\\".<br /></i>\\r\\n        Please correct these problems and try again.\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".browser-check-container{border:4px solid red;padding-top:5px;padding-bottom:5px;padding-left:10px}.browser-check-icon{font-size:36px;color:red;vertical-align:middle}.browser-check-text{font-size:16px;vertical-align:middle;padding-left:30px;padding-top:10px}.browser-check-header-text{font-size:24px;font-weight:700;vertical-align:middle}\\n\"] }]\n    }], function () { return [{ type: CurrentUserService }]; }, null); })();","originalLength":11779,"removedExports":[],"renderedExports":["BrowserCheckComponent"],"renderedLength":5952},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\http-request.interceptor.mjs":{"code":"// Add credentials to every request.\n// Credit to https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\nclass HttpRequestInterceptor {\n    constructor(userService) {\n        this.userService = userService;\n    }\n    intercept(req, next) {\n        req = req.clone({\n            withCredentials: true\n        });\n        return next.handle(req).pipe(filter(event => event instanceof HttpResponse), tap((event) => {\n            // Don't force login when making a call to claims/user\n            if (!this.userService.user && !event.url.endsWith(\"claims/user\"))\n                this.userService.login();\n        }, (err) => {\n            if (err.status == 0)\n                this.userService.redirectLogin();\n        }));\n    }\n    static { this.ɵfac = function HttpRequestInterceptor_Factory(t) { return new (t || HttpRequestInterceptor)(i0.ɵɵinject(CurrentUserService)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: HttpRequestInterceptor, factory: HttpRequestInterceptor.ɵfac }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpRequestInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: CurrentUserService }]; }, null); })();","originalLength":4880,"removedExports":[],"renderedExports":["HttpRequestInterceptor"],"renderedLength":1282},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\role-guard.service.mjs":{"code":"class RoleGuardService {\n    constructor(userService, router) {\n        this.userService = userService;\n        this.router = router;\n    }\n    canActivate(route) {\n        // this will be passed from the route config\n        // on the data property\n        const expectedRoles = route.data.expectedRoles;\n        if (!this.userService.user || !this.userService.isInRoles(expectedRoles)) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        return true;\n    }\n    static { this.ɵfac = function RoleGuardService_Factory(t) { return new (t || RoleGuardService)(i0.ɵɵinject(CurrentUserService), i0.ɵɵinject(i1$1.Router)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RoleGuardService, factory: RoleGuardService.ɵfac }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoleGuardService, [{\n        type: Injectable\n    }], function () { return [{ type: CurrentUserService }, { type: i1$1.Router }]; }, null); })();","originalLength":3266,"removedExports":[],"renderedExports":["RoleGuardService"],"renderedLength":1018},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\mod-framework.module.mjs":{"code":"function initiateSingleSignOn(userService) {\n    return () => {\n        var auth = sessionStorage.getItem(\"authenticating\")?.toString();\n        if (auth) {\n            return userService.login().then(response => {\n                sessionStorage.removeItem(\"authenticating\");\n            });\n        }\n        else {\n            userService.redirectLogin();\n            let promise = new Promise((resolve, reject) => {\n                reject(\"Authenticating\");\n            });\n            return promise;\n        }\n    };\n}\nclass ModFrameworkModule {\n    static forRoot(config = null) {\n        return {\n            ngModule: ModFrameworkModule,\n            providers: [\n                {\n                    provide: ModConfig,\n                    useValue: config\n                },\n                CurrentUserService,\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: LoadingIntercepter,\n                    multi: true\n                },\n                LoadingService,\n                // see https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: HttpRequestInterceptor,\n                    multi: true\n                },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: initiateSingleSignOn,\n                    multi: true,\n                    deps: [CurrentUserService]\n                },\n                RoleGuardService,\n            ]\n        };\n    }\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error('ModFrameworkModule is already loaded. Import it in the AppModule only');\n        }\n    }\n    static { this.ɵfac = function ModFrameworkModule_Factory(t) { return new (t || ModFrameworkModule)(i0.ɵɵinject(ModFrameworkModule, 12)); }; }\n    static { this.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ModFrameworkModule }); }\n    static { this.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n            BrowserModule,\n            FormsModule,\n            ReactiveFormsModule,\n            HttpClientModule,\n            RouterModule,\n            MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModFrameworkModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    ModWelcomeBanner,\n                    ModSideMenuComponent,\n                    ModLayoutComponent,\n                    ModHeaderComponent,\n                    ModProgressSpinnerComponent,\n                    ModLoadingOverlayComponent,\n                    ModUserDisplayComponent,\n                    BrowserCheckComponent,\n                ],\n                imports: [\n                    CommonModule,\n                    BrowserModule,\n                    NgIf,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    HttpClientModule,\n                    RouterModule,\n                    MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule,\n                ],\n                providers: [],\n                exports: [\n                    ModHeaderComponent,\n                    ModLayoutComponent,\n                    ModLoadingOverlayComponent,\n                    ModProgressSpinnerComponent,\n                    ModSideMenuComponent,\n                    ModUserDisplayComponent,\n                    ModWelcomeBanner,\n                    BrowserCheckComponent,\n                ]\n            }]\n    }], function () { return [{ type: ModFrameworkModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ModFrameworkModule, { declarations: [ModWelcomeBanner,\n        ModSideMenuComponent,\n        ModLayoutComponent,\n        ModHeaderComponent,\n        ModProgressSpinnerComponent,\n        ModLoadingOverlayComponent,\n        ModUserDisplayComponent,\n        BrowserCheckComponent], imports: [CommonModule,\n        BrowserModule,\n        NgIf,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        RouterModule,\n        MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule], exports: [ModHeaderComponent,\n        ModLayoutComponent,\n        ModLoadingOverlayComponent,\n        ModProgressSpinnerComponent,\n        ModSideMenuComponent,\n        ModUserDisplayComponent,\n        ModWelcomeBanner,\n        BrowserCheckComponent] }); })();","originalLength":21166,"removedExports":[],"renderedExports":["initiateSingleSignOn","ModFrameworkModule"],"renderedLength":5245},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\interfaces\\dto.interface.mjs":{"code":"","originalLength":385,"removedExports":[],"renderedExports":[],"renderedLength":0},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\dto-base.model.mjs":{"code":"class DtoBase {\n    constructor() {\n        this.id = 0;\n    }\n}","originalLength":790,"removedExports":[],"renderedExports":["DtoBase"],"renderedLength":64},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\mod-side-menu-config.model.mjs":{"code":"class ModSideMenuConfig {\n    constructor() {\n        this.sections = [];\n    }\n}\nclass ModMenuSection {\n    constructor() {\n        this.name = \"\";\n        this.shortName = \"\";\n        this.visible = true;\n        this.allowedRoles = [];\n        this.menuItems = [];\n    }\n}\nclass ModMenuItem {\n    constructor() {\n        this.allowedRoles = [];\n    }\n}","originalLength":1951,"removedExports":[],"renderedExports":["ModSideMenuConfig","ModMenuSection","ModMenuItem"],"renderedLength":355},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\models\\user-info.model.mjs":{"code":"class UserInfo {\n    constructor(uniqueName, upn) {\n        this.uniqueName = uniqueName;\n        this.upn = upn;\n        console.log(uniqueName + '[]asdf');\n        console.log(uniqueName == 'LOGIN\\\\kuennen_s');\n        this.displayName = (uniqueName == \"LOGIN\\\\kuennen_s\") ? \"Kuennen, Steve (Contractor)\" : uniqueName;\n        this.userProfileUrl = \"\";\n    }\n}","originalLength":1936,"removedExports":[],"renderedExports":["UserInfo"],"renderedLength":362},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\static\\logging.static.mjs":{"code":"class Logging {\n    static { this.logToConsole = true; }\n    static log(val) {\n        if (this.logToConsole)\n            console.log(val);\n    }\n}","originalLength":930,"removedExports":[],"renderedExports":["Logging"],"renderedLength":147},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\lib\\services\\mod-promise.service.base.mjs":{"code":"class ModPromiseServiceBase {\n    constructor(http, url, endpoint, TCreator) {\n        this.http = http;\n        this.url = url;\n        this.endpoint = endpoint;\n        this.TCreator = TCreator;\n        this.url = (url.endsWith('/') ? url.slice(0, -1) : url) + '/api';\n    }\n    save(item) {\n        if (item.id <= 0)\n            return this.create(item);\n        else\n            return this.update(item);\n    }\n    getAll(params) {\n        var url = `${this.url}/${this.endpoint}`;\n        return this.http\n            .get(url, { params })\n            .toPromise()\n            .then(response => {\n            var data = [];\n            response.forEach(x => {\n                var obj = this.formatResponse(x);\n                data.push(obj);\n            });\n            return data;\n        })\n            .catch(this.handleError);\n    }\n    create(item) {\n        var url = `${this.url}/${this.endpoint}`;\n        return this.http.post(url, item)\n            .toPromise()\n            .then(response => {\n            var obj = this.formatResponse(response);\n            return obj;\n        })\n            .catch(this.handleError);\n    }\n    get(id) {\n        var url = `${this.url}/${this.endpoint}/${id}`;\n        return this.http.get(url)\n            .toPromise()\n            .then(response => {\n            var obj = this.formatResponse(response);\n            return obj;\n        })\n            .catch(this.handleError);\n    }\n    update(item) {\n        var url = `${this.url}/${this.endpoint}/${item.id}`;\n        return this.http.put(url, item)\n            .toPromise()\n            .then(response => {\n            var obj = this.formatResponse(response);\n            return obj;\n        })\n            .catch(this.handleError);\n    }\n    delete(id) {\n        return this.http.delete(`${this.url}/${this.endpoint}/${id}`).toPromise();\n    }\n    // Override to fully instantiate child objects.  Be sure to call super.formatResponse first to instantiate the parent object.\n    formatResponse(data) {\n        return Object.assign(new this.TCreator(), data);\n    }\n    handleError(error) {\n        Logging.log(error);\n        return Promise.reject(error.message || error);\n    }\n}","originalLength":9767,"removedExports":[],"renderedExports":["ModPromiseServiceBase"],"renderedLength":2185},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\public-api.mjs":{"code":"/*\n * Public API Surface of mod-framework\n */","originalLength":3736,"removedExports":[],"renderedExports":[],"renderedLength":45},"P:\\work\\github\\EOP-OMB\\mod-framework\\Client\\mod-angular-libraries\\dist\\mod-framework\\esm2022\\mod-framework.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":508,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Component, Input, ViewChild, EventEmitter, Output, APP_INITIALIZER, NgModule, Optional, SkipSelf } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i1 from '@angular/common/http';\nimport { HttpResponse, HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport * as parseUri from 'parse-uri';\nimport * as i3 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport * as i5 from '@angular/material/list';\nimport { MatListModule } from '@angular/material/list';\nimport * as i6 from '@angular/material/sidenav';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport * as i4$1 from '@angular/material/toolbar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport * as i4 from '@angular/material/menu';\nimport { MatMenuModule } from '@angular/material/menu';\nimport * as i5$1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/progress-spinner';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i2$1 from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i3$1 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i1$2 from '@angular/common';\nimport { CommonModule, NgIf } from '@angular/common';\nimport { filter, tap } from 'rxjs/operators';\nimport { BrowserModule } from '@angular/platform-browser';\n\nconst ModConfig = new InjectionToken('modConfig');\n\nclass ModFrameworkConfig {\n    constructor() {\n        this.showHelp = false;\n        this.helpOptions = [];\n        this.showSearch = false;\n        this.userOptions = [];\n        this.profileUrl = 'https://portfolio.staging.omb.gov/portfolio';\n    }\n}\n\n//loading.service.ts\nclass LoadingService {\n    constructor(config) {\n        this.isLoading = new BehaviorSubject(false);\n        this.loadingDelay = 500;\n        this.loadingDelay = config ? config.loadingDelay : 500;\n    }\n    static { this.ɵfac = function LoadingService_Factory(t) { return new (t || LoadingService)(i0.ɵɵinject(ModConfig)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoadingService, factory: LoadingService.ɵfac, providedIn: 'root' }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, null); })();\n\n// loader.interceptors.ts\nclass LoadingIntercepter {\n    constructor(loadingService, config) {\n        this.loadingService = loadingService;\n        this.requests = [];\n        this.urlsToSkip = ['frameworkapi/maxpicker/search'];\n        for (let x of config.urlsToSkip)\n            this.urlsToSkip.push(x);\n    }\n    removeRequest(req) {\n        const i = this.requests.indexOf(req);\n        if (i >= 0) {\n            this.requests.splice(i, 1);\n        }\n        this.loadingService.isLoading.next(this.requests.length > 0);\n    }\n    intercept(req, next) {\n        if (this.skipThisRequest(req)) {\n            return next.handle(req);\n        }\n        else {\n            this.requests.push(req);\n            setTimeout(() => {\n                if (this.requests.length > 0)\n                    this.loadingService.isLoading.next(true);\n            }, this.loadingService.loadingDelay);\n            return Observable.create(observer => {\n                const subscription = next.handle(req)\n                    .subscribe(event => {\n                    if (event instanceof HttpResponse) {\n                        this.removeRequest(req);\n                        observer.next(event);\n                    }\n                }, err => {\n                    this.removeRequest(req);\n                    observer.error(err);\n                }, () => {\n                    this.removeRequest(req);\n                    observer.complete();\n                });\n                // remove request from queue when cancelled\n                return () => {\n                    this.removeRequest(req);\n                    subscription.unsubscribe();\n                };\n            });\n        }\n    }\n    skipThisRequest(req) {\n        var matched = false;\n        for (let url of this.urlsToSkip) {\n            matched = req.url.match(url) != null;\n            if (matched)\n                break;\n        }\n        return matched;\n    }\n    static { this.ɵfac = function LoadingIntercepter_Factory(t) { return new (t || LoadingIntercepter)(i0.ɵɵinject(LoadingService), i0.ɵɵinject(ModConfig)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoadingIntercepter, factory: LoadingIntercepter.ɵfac, providedIn: 'root' }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingIntercepter, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: LoadingService }, { type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, null); })();\n\nclass CurrentUser {\n}\n\nclass CurrentUserService {\n    constructor(http, config) {\n        this.http = http;\n        this.serviceUrl = '';\n        this.setCookieUrl = '';\n        this.checkCookieUrl = '';\n        this.noOpUrl = '';\n        this.cookieName = 'CookieSettingsCheck';\n        this._browserOk = false;\n        this.loginSiteUrl = \"https://localhost:44374\";\n        this.loginSiteUrl = config ? config.loginSiteUrl : 'https://localhost:44374';\n        this.serviceUrl = this.siteUrl + \"api/claims/user\";\n        this.setCookieUrl = this.siteUrl + \"api/health/setcookie\";\n        this.checkCookieUrl = this.siteUrl + \"api/health/checkcookie\";\n        this.noOpUrl = this.siteUrl + \"api/health/noop\";\n    }\n    getDomain(url) {\n        var u = parseUri(url);\n        return u.host;\n    }\n    get user() {\n        return this._user;\n    }\n    get browserOk() {\n        return this._browserOk;\n    }\n    get domain() {\n        return this.getDomain(this.loginSiteUrl);\n    }\n    get siteUrl() {\n        return this.loginSiteUrl + (this.loginSiteUrl.endsWith(\"/\") ? \"\" : \"/\");\n    }\n    browserCheck() {\n        return this.http.get(this.noOpUrl, { withCredentials: false })\n            .toPromise()\n            .then(() => {\n            return this.http.get(this.setCookieUrl)\n                .toPromise()\n                .then(response => {\n                return this.http.get(this.checkCookieUrl)\n                    .toPromise().then(response => {\n                    this._browserOk = true;\n                    return true;\n                });\n            })\n                .catch((error) => {\n                this._browserOk = false;\n                this._user = null;\n                return Promise.reject(\"Domain \" + this.getDomain(this.setCookieUrl) + \" probably doesn't allow CORS from domain \" + this.domain);\n            });\n        })\n            .catch(error => {\n            this._browserOk = false;\n            this._user = null;\n            return Promise.reject(\"Can't reach site \" + this.loginSiteUrl);\n        });\n    }\n    preFlight() {\n        return this.http.options(this.serviceUrl)\n            .toPromise()\n            .then(response => { return response; })\n            .catch(this.handleError);\n    }\n    redirectLogin() {\n        var returnUrl = window.location.href;\n        sessionStorage.setItem('authenticating', 'authenticating');\n        var url = this.siteUrl + 'api/login' + \"?ReturnUrl=\" + returnUrl;\n        window.open(url, '_self');\n    }\n    login() {\n        this.loginPromise = this.http.get(this.serviceUrl)\n            .toPromise()\n            .then((response) => {\n            var user;\n            user = Object.assign(new CurrentUser(), response);\n            this._user = user;\n            return user;\n        })\n            .catch(error => {\n            return this.handleError(error);\n        });\n        return this.loginPromise;\n    }\n    logout() {\n        this._user = null;\n    }\n    handleError(error) {\n        return Promise.reject(error.message || error);\n    }\n    isInRole(role) {\n        return this.user.roles.find(x => x == role) !== undefined;\n    }\n    isInRoles(roles) {\n        var returnValue = false;\n        roles.forEach(x => {\n            returnValue = returnValue || this.isInRole(x);\n        });\n        return returnValue;\n    }\n    static { this.ɵfac = function CurrentUserService_Factory(t) { return new (t || CurrentUserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(ModConfig)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CurrentUserService, factory: CurrentUserService.ɵfac, providedIn: 'root' }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CurrentUserService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: i1.HttpClient }, { type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, null); })();\n\nconst _c0$2 = [\"mainContent\"];\nconst _c1$2 = [\"sidenav\"];\nfunction ModSideMenuComponent_mat_icon_5_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-icon\", 9);\n    i0.ɵɵlistener(\"click\", function ModSideMenuComponent_mat_icon_5_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.expandMenu(!ctx_r5.expanded)); });\n    i0.ɵɵtext(1, \" keyboard_arrow_left \");\n    i0.ɵɵelementEnd();\n} }\nfunction ModSideMenuComponent_mat_icon_6_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-icon\", 10);\n    i0.ɵɵlistener(\"click\", function ModSideMenuComponent_mat_icon_6_Template_mat_icon_click_0_listener() { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.expandMenu(!ctx_r7.expanded)); });\n    i0.ɵɵtext(1, \" keyboard_arrow_right \");\n    i0.ɵɵelementEnd();\n} }\nconst _c2 = function () { return { exact: true }; };\nfunction ModSideMenuComponent_div_7_mat_list_item_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\", 12);\n    i0.ɵɵlistener(\"keyup.enter\", function ModSideMenuComponent_div_7_mat_list_item_4_Template_mat_list_item_keyup_enter_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r13); const item_r11 = restoredCtx.$implicit; const ctx_r12 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r12.navigateTo(item_r11.route)); });\n    i0.ɵɵelementStart(1, \"mat-icon\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"routerLink\", item_r11.route)(\"routerLinkActiveOptions\", i0.ɵɵpureFunction0(5, _c2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", item_r11.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r11.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.expanded ? item_r11.text : \"\", \" \");\n} }\nfunction ModSideMenuComponent_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-nav-list\");\n    i0.ɵɵtemplate(4, ModSideMenuComponent_div_7_mat_list_item_4_Template, 4, 6, \"mat-list-item\", 11);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const section_r9 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.expanded ? section_r9.name : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.getViewableMenuItems(section_r9));\n} }\nconst _c3 = function (a1) { return { \"mod-side-menu\": true, \"collapsed\": a1 }; };\nconst _c4 = function (a1) { return { \"mod-side-menu-content\": true, \"collapsed\": a1 }; };\nconst _c5 = [\"*\"];\nclass ModSideMenuComponent {\n    constructor(router, activatedRoute, renderer, userService) {\n        this.router = router;\n        this.activatedRoute = activatedRoute;\n        this.renderer = renderer;\n        this.userService = userService;\n        this.expanded = true;\n        this.opened = true;\n    }\n    ngOnInit() {\n    }\n    ngOnChanges(changes) {\n        if (changes['config'] && changes['config'].previousValue != changes['config'].currentValue) {\n            this.selectCurrentRoute();\n        }\n    }\n    selectCurrentRoute() {\n        var urls = this.router.url.split('/');\n        for (let section of this.config.sections) {\n            for (let item of section.menuItems) {\n                if (urls[urls.length - 1].toString() == item.route) {\n                    this.menuOption = item.text;\n                    break;\n                }\n            }\n        }\n    }\n    // Used by menu item keyup.enter handler to provide keyboard navigation\n    navigateTo(urlSegment) {\n        urlSegment = urlSegment.split('#')[0];\n        var url = \"\";\n        if (urlSegment.startsWith('/')) {\n            url = urlSegment;\n        }\n        else {\n            url = this.activatedRoute.snapshot.url.join('/') + '/' + urlSegment;\n        }\n        // nav to the route, and then set focus on the main content div rather than keep focus\n        // on the nav menu itself (users will need to Shift+Tab their way back to nav menu)\n        this.router.navigateByUrl(url).then(x => {\n            if (this.mainContentElement)\n                this.mainContentElement.nativeElement.focus();\n        });\n    }\n    expandMenu(expanded = true) {\n        this.expanded = expanded;\n    }\n    toggleSideNav() {\n        //this.sidenav.toggle();\n        var opening = !this.opened;\n        if (opening) {\n            this.opened = !this.opened;\n            this.sidenav.toggle();\n        }\n        else {\n            this.sidenav.toggle().then(() => {\n                this.opened = !this.opened;\n            });\n        }\n    }\n    get viewableSections() {\n        let sections = [];\n        this.config.sections.forEach(section => {\n            if (!section.allowedRoles || this.userService.isInRoles(section.allowedRoles))\n                sections.push(section);\n        });\n        return sections;\n    }\n    getViewableMenuItems(section) {\n        let items = [];\n        section.menuItems.forEach(item => {\n            if (!item.allowedRoles || this.userService.isInRoles(item.allowedRoles))\n                items.push(item);\n        });\n        return items;\n    }\n    static { this.ɵfac = function ModSideMenuComponent_Factory(t) { return new (t || ModSideMenuComponent)(i0.ɵɵdirectiveInject(i1$1.Router), i0.ɵɵdirectiveInject(i1$1.ActivatedRoute), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(CurrentUserService)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModSideMenuComponent, selectors: [[\"mod-side-menu\"]], viewQuery: function ModSideMenuComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$2, 7);\n            i0.ɵɵviewQuery(_c1$2, 7);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mainContentElement = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);\n        } }, inputs: { config: \"config\" }, features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c5, decls: 11, vars: 10, consts: [[1, \"mod-side-menu-container\"], [\"mode\", \"side\", \"opened\", \"\", \"role\", \"navigation\", \"id\", \"navigation-menu\", 3, \"ngClass\"], [\"sidenav\", \"\"], [\"mat-subheader\", \"\"], [\"class\", \"menu-close\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"menu-open\", 3, \"click\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"main\", \"tabindex\", \"0\", 3, \"ngClass\"], [\"mainContent\", \"\"], [1, \"menu-close\", 3, \"click\"], [1, \"menu-open\", 3, \"click\"], [\"routerLinkActive\", \"active\", 3, \"routerLink\", \"routerLinkActiveOptions\", \"keyup.enter\", 4, \"ngFor\", \"ngForOf\"], [\"routerLinkActive\", \"active\", 3, \"routerLink\", \"routerLinkActiveOptions\", \"keyup.enter\"], [\"matListItemIcon\", \"\", 3, \"matTooltip\"]], template: function ModSideMenuComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2)(3, \"h1\", 3);\n            i0.ɵɵtext(4);\n            i0.ɵɵtemplate(5, ModSideMenuComponent_mat_icon_5_Template, 2, 0, \"mat-icon\", 4);\n            i0.ɵɵtemplate(6, ModSideMenuComponent_mat_icon_6_Template, 2, 0, \"mat-icon\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(7, ModSideMenuComponent_div_7_Template, 5, 2, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"mat-sidenav-content\", 7, 8);\n            i0.ɵɵprojection(10);\n            i0.ɵɵelementEnd()();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c3, !ctx.expanded && ctx.opened));\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", ctx.expanded ? ctx.config.title : \"\", \" \");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.expanded);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.expanded);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.viewableSections);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c4, !ctx.expanded && ctx.opened));\n        } }, dependencies: [i1$2.NgClass, i1$2.NgForOf, i1$2.NgIf, i1$1.RouterLink, i1$1.RouterLinkActive, i3.MatIcon, i5.MatNavList, i5.MatListItem, i5.MatListItemIcon, i5.MatListSubheaderCssMatStyler, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent, i7.MatTooltip], styles: [\"#main-content[_ngcontent-%COMP%]:focus{border:1px solid #5b9acf}.menu-close[_ngcontent-%COMP%]{position:absolute;right:0;cursor:pointer}.menu-open[_ngcontent-%COMP%]{text-align:center;width:100%;cursor:pointer}.mod-side-menu[_ngcontent-%COMP%]{display:flex;align-items:flex-start;justify-content:left;width:250px;transition:width .25s}.mod-side-menu.collapsed[_ngcontent-%COMP%]{width:76px!important;transition:width .25s}.mod-side-menu-container[_ngcontent-%COMP%]{display:flex;height:100%}.mod-side-menu-content[_ngcontent-%COMP%]{transition:margin-left .25s;width:100%;overflow:auto;display:flex;align-items:stretch;outline:none!important}.mod-side-menu-content.collapsed[_ngcontent-%COMP%]{margin-left:76px!important;transition:margin-left .25s}h2[_ngcontent-%COMP%]{overflow:hidden;white-space:nowrap;text-overflow:clip}.mat-mdc-subheader[_ngcontent-%COMP%]{font-size:14px;line-height:20px;max-height:56px;color:#888;padding:12px 12px 12px 20px!important;margin-bottom:0!important;margin-top:0!important}.mat-mdc-subheader[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%]{padding-left:4px;margin-right:16px}.mat-mdc-expansion-panel[_ngcontent-%COMP%]{box-shadow:none;margin:0}.mat-mdc-expansion-indicator[_ngcontent-%COMP%]{line-height:0!important}mat-mdc-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]{color:initial}.mat-mdc-expansion-panel-header[_ngcontent-%COMP%]{height:56px!important;max-height:56px!important;border-left:5px solid #bbb}.mat-mdc-expansion-panel-header-title[_ngcontent-%COMP%]{max-height:24px}.mat-mdc-expansion-panel.active[_ngcontent-%COMP%] > .mat-mdc-expansion-panel-header[_ngcontent-%COMP%]{border-color:#5b9acf}.mat-mdc-expansion-panel-header-title[_ngcontent-%COMP%] > .mat-icon[_ngcontent-%COMP%]{margin-right:16px}.mat-mdc-expansion-panel.mat-mdc-expanded[_ngcontent-%COMP%]{background-color:#eee}  .mat-mdc-expansion-panel-body{padding:0!important}  .mat-drawer-container{display:flex;align-items:stretch}  .mat-drawer-inner-container{overflow-x:hidden!important}.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]{margin-right:16px!important;color:#000000de!important}.mat-mdc-list-item[_ngcontent-%COMP%]{font-size:15px!important;border-left:5px solid #bbb;margin-left:-5px;height:56px!important;max-height:56px!important;line-height:22.5px!important;width:auto!important}.mat-mdc-list-item[_ngcontent-%COMP%]:focus{border:1px solid #5b9acf}.mdc-list-item__content[_ngcontent-%COMP%]{padding:0 24px!important}.mat-mdc-list-item.active[_ngcontent-%COMP%]{border-color:#5b9acf;background-color:#d1d1d1}.mat-mdc-list-base[_ngcontent-%COMP%]{padding-top:0}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModSideMenuComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-side-menu', template: \"<mat-sidenav-container class=\\\"mod-side-menu-container\\\">\\r\\n    <mat-sidenav #sidenav mode=\\\"side\\\" opened role=\\\"navigation\\\" id=\\\"navigation-menu\\\" [ngClass]=\\\"{'mod-side-menu' : true, 'collapsed' : (!expanded && opened)}\\\">\\r\\n        <h1 mat-subheader>\\r\\n            {{ expanded ? config.title : \\\"\\\" }}\\r\\n            <mat-icon *ngIf=\\\"expanded\\\" class=\\\"menu-close\\\" (click)=\\\"expandMenu(!this.expanded)\\\">\\r\\n                keyboard_arrow_left\\r\\n            </mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!expanded\\\" class=\\\"menu-open\\\" (click)=\\\"expandMenu(!this.expanded)\\\">\\r\\n                keyboard_arrow_right\\r\\n            </mat-icon>\\r\\n        </h1>\\r\\n\\r\\n        <div *ngFor=\\\"let section of viewableSections\\\">\\r\\n            <h1 mat-subheader>\\r\\n                {{ expanded ? section.name : \\\"\\\" }}\\r\\n            </h1>\\r\\n            <mat-nav-list>\\r\\n                <mat-list-item *ngFor=\\\"let item of getViewableMenuItems(section)\\\"\\r\\n                               [routerLink]=\\\"item.route\\\"\\r\\n                               routerLinkActive=\\\"active\\\"\\r\\n                               [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\r\\n                               (keyup.enter)=\\\"navigateTo(item.route)\\\">\\r\\n                    <mat-icon matListItemIcon [matTooltip]=\\\"item.text\\\">{{item.icon}}</mat-icon>\\r\\n                    {{ expanded ? item.text : \\\"\\\"}}\\r\\n                </mat-list-item>\\r\\n            </mat-nav-list>\\r\\n        </div>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content [ngClass]=\\\"{'mod-side-menu-content' : true, 'collapsed' : (!expanded && opened)}\\\" role=\\\"main\\\" #mainContent tabindex=\\\"0\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\", styles: [\"#main-content:focus{border:1px solid #5b9acf}.menu-close{position:absolute;right:0;cursor:pointer}.menu-open{text-align:center;width:100%;cursor:pointer}.mod-side-menu{display:flex;align-items:flex-start;justify-content:left;width:250px;transition:width .25s}.mod-side-menu.collapsed{width:76px!important;transition:width .25s}.mod-side-menu-container{display:flex;height:100%}.mod-side-menu-content{transition:margin-left .25s;width:100%;overflow:auto;display:flex;align-items:stretch;outline:none!important}.mod-side-menu-content.collapsed{margin-left:76px!important;transition:margin-left .25s}h2{overflow:hidden;white-space:nowrap;text-overflow:clip}.mat-mdc-subheader{font-size:14px;line-height:20px;max-height:56px;color:#888;padding:12px 12px 12px 20px!important;margin-bottom:0!important;margin-top:0!important}.mat-mdc-subheader .mat-icon{padding-left:4px;margin-right:16px}.mat-mdc-expansion-panel{box-shadow:none;margin:0}.mat-mdc-expansion-indicator{line-height:0!important}mat-mdc-expansion-panel-header[aria-disabled=true]{color:initial}.mat-mdc-expansion-panel-header{height:56px!important;max-height:56px!important;border-left:5px solid #bbb}.mat-mdc-expansion-panel-header-title{max-height:24px}.mat-mdc-expansion-panel.active>.mat-mdc-expansion-panel-header{border-color:#5b9acf}.mat-mdc-expansion-panel-header-title>.mat-icon{margin-right:16px}.mat-mdc-expansion-panel.mat-mdc-expanded{background-color:#eee}::ng-deep .mat-mdc-expansion-panel-body{padding:0!important}::ng-deep .mat-drawer-container{display:flex;align-items:stretch}::ng-deep .mat-drawer-inner-container{overflow-x:hidden!important}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-right:16px!important;color:#000000de!important}.mat-mdc-list-item{font-size:15px!important;border-left:5px solid #bbb;margin-left:-5px;height:56px!important;max-height:56px!important;line-height:22.5px!important;width:auto!important}.mat-mdc-list-item:focus{border:1px solid #5b9acf}.mdc-list-item__content{padding:0 24px!important}.mat-mdc-list-item.active{border-color:#5b9acf;background-color:#d1d1d1}.mat-mdc-list-base{padding-top:0}\\n\"] }]\n    }], function () { return [{ type: i1$1.Router }, { type: i1$1.ActivatedRoute }, { type: i0.Renderer2 }, { type: CurrentUserService }]; }, { config: [{\n            type: Input\n        }], mainContentElement: [{\n            type: ViewChild,\n            args: ['mainContent', { static: true }]\n        }], sidenav: [{\n            type: ViewChild,\n            args: ['sidenav', { static: true }]\n        }] }); })();\n\nfunction ModUserDisplayComponent_div_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 6)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"account_circle\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r4);\n} }\nfunction ModUserDisplayComponent_div_0_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 7)(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"keyboard_arrow_down\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(7);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r4);\n} }\nfunction ModUserDisplayComponent_div_0_button_8_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ModUserDisplayComponent_div_0_button_8_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r8); const option_r6 = restoredCtx.$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r7.optionSelected(option_r6)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r6);\n} }\nfunction ModUserDisplayComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ModUserDisplayComponent_div_0_ng_container_3_Template, 4, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(4, ModUserDisplayComponent_div_0_ng_template_4_Template, 3, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"mat-menu\", null, 4);\n    i0.ɵɵtemplate(8, ModUserDisplayComponent_div_0_button_8_Template, 2, 1, \"button\", 5);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const _r2 = i0.ɵɵreference(5);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.user.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showUser)(\"ngIfElse\", _r2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.config.userOptions);\n} }\nclass ModUserDisplayComponent {\n    constructor(userService, config) {\n        this.userService = userService;\n        this.showUser = false;\n        this.selectOption = new EventEmitter();\n        this.config = config;\n        this.config.userOptions.push('User Profile');\n    }\n    ngOnInit() {\n    }\n    get user() {\n        return this.userService.user;\n    }\n    optionSelected(option) {\n        if (option == \"User Profile\") {\n            window.open(this.config.profileUrl, '_blank');\n        }\n        else {\n            this.selectOption.emit(option);\n        }\n    }\n    static { this.ɵfac = function ModUserDisplayComponent_Factory(t) { return new (t || ModUserDisplayComponent)(i0.ɵɵdirectiveInject(CurrentUserService), i0.ɵɵdirectiveInject(ModConfig)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModUserDisplayComponent, selectors: [[\"mod-user-display\"]], inputs: { showUser: \"showUser\" }, outputs: { selectOption: \"selectOption\" }, decls: 1, vars: 1, consts: [[4, \"ngIf\"], [2, \"padding-right\", \"5px\", \"margin-top\", \"-5px\"], [4, \"ngIf\", \"ngIfElse\"], [\"showMenu\", \"\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"User Menu\", 1, \"mod-user-icon\", 3, \"matMenuTriggerFor\"], [\"mat-icon-button\", \"\", \"aria-label\", \"User Menu\", 1, \"mat-icon-button\", 3, \"matMenuTriggerFor\"], [\"mat-menu-item\", \"\", 3, \"click\"]], template: function ModUserDisplayComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, ModUserDisplayComponent_div_0_Template, 9, 4, \"div\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.user);\n        } }, dependencies: [i1$2.NgForOf, i1$2.NgIf, i3.MatIcon, i4.MatMenu, i4.MatMenuItem, i4.MatMenuTrigger, i5$1.MatIconButton], styles: [\".delete-potentially-circle-user-icon[_ngcontent-%COMP%]{border:2px solid inherit!important;border-radius:50%!important;padding:5px!important;margin-left:15px!important}.mat-mdc-button-base[_ngcontent-%COMP%]{height:auto;line-height:inherit}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModUserDisplayComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-user-display', template: \"<div *ngIf=\\\"user\\\">\\r\\n    <span style=\\\"padding-right: 5px; margin-top: -5px;\\\">{{ user.displayName }}</span>\\r\\n    <ng-container *ngIf=\\\"showUser;else showMenu\\\">\\r\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"mod-user-icon\\\" aria-label=\\\"User Menu\\\">\\r\\n            <mat-icon>account_circle</mat-icon>\\r\\n        </button>\\r\\n    </ng-container>\\r\\n    <ng-template #showMenu>\\r\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"mat-icon-button\\\" aria-label=\\\"User Menu\\\">\\r\\n            <mat-icon>keyboard_arrow_down</mat-icon>\\r\\n        </button>\\r\\n    </ng-template>\\r\\n    <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item *ngFor=\\\"let option of config.userOptions\\\" (click)=\\\"optionSelected(option)\\\">{{ option }}</button>\\r\\n    </mat-menu>\\r\\n</div>\\r\\n\", styles: [\".delete-potentially-circle-user-icon{border:2px solid inherit!important;border-radius:50%!important;padding:5px!important;margin-left:15px!important}.mat-mdc-button-base{height:auto;line-height:inherit}\\n\"] }]\n    }], function () { return [{ type: CurrentUserService }, { type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, { showUser: [{\n            type: Input\n        }], selectOption: [{\n            type: Output\n        }] }); })();\n\nfunction ModHeaderComponent_div_9_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ModHeaderComponent_div_9_button_6_Template_button_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r5); const option_r3 = restoredCtx.$implicit; const ctx_r4 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r4.optionSelected(option_r3)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r3);\n} }\nfunction ModHeaderComponent_div_9_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 8)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"help\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-menu\", null, 9);\n    i0.ɵɵtemplate(6, ModHeaderComponent_div_9_button_6_Template, 2, 1, \"button\", 10);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const _r1 = i0.ɵɵreference(5);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.config.helpOptions);\n} }\nconst _c0$1 = function () { return [\"/\"]; };\nconst _c1$1 = [\"*\"];\nclass ModHeaderComponent {\n    constructor(config) {\n        this.menuClick = new EventEmitter();\n        this.userOptionSelect = new EventEmitter();\n        this.helpOptionSelect = new EventEmitter();\n        this.config = config;\n    }\n    ngOnInit() {\n    }\n    onMenuClick() {\n        this.menuClick.emit();\n    }\n    onUserOptionSelect(option) {\n        this.userOptionSelect.emit(option);\n    }\n    optionSelected(option) {\n        this.helpOptionSelect.emit(option);\n    }\n    static { this.ɵfac = function ModHeaderComponent_Factory(t) { return new (t || ModHeaderComponent)(i0.ɵɵdirectiveInject(ModConfig)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModHeaderComponent, selectors: [[\"mod-header\"]], inputs: { appName: \"appName\" }, outputs: { menuClick: \"menuClick\", userOptionSelect: \"userOptionSelect\", helpOptionSelect: \"helpOptionSelect\" }, ngContentSelectors: _c1$1, decls: 10, vars: 5, consts: [[1, \"mod-header\"], [1, \"logo-text-mark\", 3, \"routerLink\"], [\"src\", \"/assets/US-OfficeOfManagementAndBudget-Seal.png\", \"tabindex\", \"-1\", 1, \"mod-logo\"], [\"tabindex\", \"-1\", \"alt\", \"Textmark\", 1, \"text-mark\"], [1, \"fill-remaining-space\"], [1, \"welcome-user\"], [3, \"showUser\", \"selectOption\"], [4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Help Menu\", 3, \"matMenuTriggerFor\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 3, \"click\"]], template: function ModHeaderComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"a\", 1);\n            i0.ɵɵelement(2, \"img\", 2);\n            i0.ɵɵelementStart(3, \"div\", 3);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"span\", 4);\n            i0.ɵɵprojection(6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"mod-user-display\", 6);\n            i0.ɵɵlistener(\"selectOption\", function ModHeaderComponent_Template_mod_user_display_selectOption_8_listener($event) { return ctx.onUserOptionSelect($event); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(9, ModHeaderComponent_div_9_Template, 7, 2, \"div\", 7);\n            i0.ɵɵelementEnd()();\n        } if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0$1));\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.appName);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"showUser\", true);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.config.showHelp);\n        } }, dependencies: [i1$2.NgForOf, i1$2.NgIf, i1$1.RouterLink, i3.MatIcon, i4$1.MatToolbar, i4.MatMenu, i4.MatMenuItem, i4.MatMenuTrigger, i5$1.MatIconButton, ModUserDisplayComponent], styles: [\".mod-header[_ngcontent-%COMP%]{justify-content:center;background-color:#112e51;display:flex;color:#fff}a[_ngcontent-%COMP%]{text-decoration:none}.logo-text-mark[_ngcontent-%COMP%]{cursor:pointer;display:flex;align-items:center}.text-mark[_ngcontent-%COMP%]{cursor:pointer;margin-left:12px;font-size:1.4em;display:inline-block;vertical-align:middle;color:#d8b304}.mod-logo[_ngcontent-%COMP%]{margin-left:4px;height:50px}.fill-remaining-space[_ngcontent-%COMP%]{flex:1 1 auto;align-items:center;margin-left:15px}.welcome-user[_ngcontent-%COMP%]{font-size:.85em;padding-top:2px;padding-right:5px;flex:1;display:flex;justify-content:flex-end}.mat-mdc-button-base[_ngcontent-%COMP%]{height:auto;line-height:inherit}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModHeaderComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-header', template: \"<mat-toolbar class=\\\"mod-header\\\">\\r\\n    <!--<button mat-icon-button (click)=\\\"onMenuClick()\\\">\\r\\n        <mat-icon>\\r\\n            menu\\r\\n        </mat-icon>\\r\\n    </button>-->\\r\\n\\r\\n    <a class=\\\"logo-text-mark\\\" [routerLink]=\\\"['/']\\\">\\r\\n        <img class=\\\"mod-logo\\\" src=\\\"/assets/US-OfficeOfManagementAndBudget-Seal.png\\\" tabindex=\\\"-1\\\" />\\r\\n        <div tabindex=\\\"-1\\\" alt=\\\"Textmark\\\" class=\\\"text-mark\\\">{{ appName }}</div>\\r\\n    </a>\\r\\n\\r\\n    <span class=\\\"fill-remaining-space\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </span>\\r\\n\\r\\n    <div class=\\\"welcome-user\\\">\\r\\n        <mod-user-display [showUser]=\\\"true\\\" (selectOption)=\\\"onUserOptionSelect($event)\\\"></mod-user-display>\\r\\n        <div *ngIf=\\\"config.showHelp\\\">\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Help Menu\\\">\\r\\n                <mat-icon>help</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item *ngFor=\\\"let option of config.helpOptions\\\" (click)=\\\"optionSelected(option)\\\">{{ option }}</button>\\r\\n            </mat-menu>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-toolbar>\\r\\n\", styles: [\".mod-header{justify-content:center;background-color:#112e51;display:flex;color:#fff}a{text-decoration:none}.logo-text-mark{cursor:pointer;display:flex;align-items:center}.text-mark{cursor:pointer;margin-left:12px;font-size:1.4em;display:inline-block;vertical-align:middle;color:#d8b304}.mod-logo{margin-left:4px;height:50px}.fill-remaining-space{flex:1 1 auto;align-items:center;margin-left:15px}.welcome-user{font-size:.85em;padding-top:2px;padding-right:5px;flex:1;display:flex;justify-content:flex-end}.mat-mdc-button-base{height:auto;line-height:inherit}\\n\"] }]\n    }], function () { return [{ type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, { appName: [{\n            type: Input\n        }], menuClick: [{\n            type: Output\n        }], userOptionSelect: [{\n            type: Output\n        }], helpOptionSelect: [{\n            type: Output\n        }] }); })();\n\nfunction ModProgressSpinnerComponent_ng_container_0_ng_template_3_Template(rf, ctx) { }\nfunction ModProgressSpinnerComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵtemplate(3, ModProgressSpinnerComponent_ng_container_0_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n} }\nfunction ModProgressSpinnerComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 5);\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"diameter\", ctx_r2.diameter)(\"mode\", ctx_r2.mode)(\"color\", ctx_r2.color)(\"strokeWidth\", ctx_r2.strokeWidth)(\"value\", ctx_r2.value);\n} }\nclass ModProgressSpinnerComponent {\n    constructor() {\n        this.value = 100;\n        this.diameter = 100;\n        this.mode = \"indeterminate\";\n        this.strokeWidth = 10;\n        this.overlay = false;\n        this.color = \"primary\";\n    }\n    ngOnInit() {\n    }\n    static { this.ɵfac = function ModProgressSpinnerComponent_Factory(t) { return new (t || ModProgressSpinnerComponent)(); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModProgressSpinnerComponent, selectors: [[\"mod-progress-spinner\"]], inputs: { value: \"value\", diameter: \"diameter\", mode: \"mode\", strokeWidth: \"strokeWidth\", overlay: \"overlay\", color: \"color\" }, decls: 3, vars: 2, consts: [[4, \"ngIf\", \"ngIfElse\"], [\"progressSpinner\", \"\"], [1, \"overlay\"], [1, \"center\"], [3, \"ngTemplateOutlet\"], [3, \"diameter\", \"mode\", \"color\", \"strokeWidth\", \"value\"]], template: function ModProgressSpinnerComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, ModProgressSpinnerComponent_ng_container_0_Template, 4, 1, \"ng-container\", 0);\n            i0.ɵɵtemplate(1, ModProgressSpinnerComponent_ng_template_1_Template, 1, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        } if (rf & 2) {\n            const _r1 = i0.ɵɵreference(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.overlay)(\"ngIfElse\", _r1);\n        } }, dependencies: [i1$2.NgIf, i1$2.NgTemplateOutlet, i2.MatProgressSpinner], styles: [\".center[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%) translateY(-50%)}.overlay[_ngcontent-%COMP%]{height:100vh;width:100%;background-color:#00000049;z-index:10;top:0;left:0;position:fixed}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModProgressSpinnerComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-progress-spinner', template: \"<ng-container *ngIf=\\\"overlay;else progressSpinner\\\">\\r\\n    <div class=\\\"overlay\\\">\\r\\n        <div class=\\\"center\\\">\\r\\n            <ng-template [ngTemplateOutlet]=\\\"progressSpinner\\\"></ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-container>\\r\\n<ng-template #progressSpinner>\\r\\n    <mat-progress-spinner [diameter]=\\\"diameter\\\"\\r\\n                          [mode]=\\\"mode\\\"\\r\\n                          [color]=\\\"color\\\"\\r\\n                          [strokeWidth]=\\\"strokeWidth\\\"\\r\\n                          [value]=\\\"value\\\">\\r\\n    </mat-progress-spinner>\\r\\n</ng-template>\\r\\n\", styles: [\".center{position:absolute;top:50%;left:50%;transform:translate(-50%) translateY(-50%)}.overlay{height:100vh;width:100%;background-color:#00000049;z-index:10;top:0;left:0;position:fixed}\\n\"] }]\n    }], function () { return []; }, { value: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], overlay: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n\nfunction ModLoadingOverlayComponent_mod_progress_spinner_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"mod-progress-spinner\", 1);\n} if (rf & 2) {\n    i0.ɵɵproperty(\"overlay\", true);\n} }\nclass ModLoadingOverlayComponent {\n    constructor(loadingService) {\n        this.loadingService = loadingService;\n        this.showProgressSpinner = false;\n        this.loadingService.isLoading.subscribe((isLoading) => {\n            if (isLoading) {\n                this.showProgressSpinner = true;\n            }\n            else {\n                this.showProgressSpinner = false;\n            }\n        });\n    }\n    ngOnInit() {\n    }\n    static { this.ɵfac = function ModLoadingOverlayComponent_Factory(t) { return new (t || ModLoadingOverlayComponent)(i0.ɵɵdirectiveInject(LoadingService)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModLoadingOverlayComponent, selectors: [[\"mod-loading-overlay\"]], decls: 1, vars: 1, consts: [[3, \"overlay\", 4, \"ngIf\"], [3, \"overlay\"]], template: function ModLoadingOverlayComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, ModLoadingOverlayComponent_mod_progress_spinner_0_Template, 1, 1, \"mod-progress-spinner\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.showProgressSpinner);\n        } }, dependencies: [i1$2.NgIf, ModProgressSpinnerComponent] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModLoadingOverlayComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-loading-overlay', template: \"<mod-progress-spinner *ngIf=\\\"showProgressSpinner\\\" [overlay]=\\\"true\\\"></mod-progress-spinner>\\r\\n\" }]\n    }], function () { return [{ type: LoadingService }]; }, null); })();\n\nconst _c0 = [\"sidemenu\"];\nfunction ModLayoutComponent_div_4_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function ModLayoutComponent_div_4_Template_input_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.searchText = $event); })(\"keyup.enter\", function ModLayoutComponent_div_4_Template_input_keyup_enter_1_listener() { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onSearch()); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.searchText);\n} }\nconst _c1 = [\"*\"];\nclass ModLayoutComponent {\n    constructor(config) {\n        this.userOptionSelect = new EventEmitter();\n        this.helpOptionSelect = new EventEmitter();\n        this.search = new EventEmitter();\n        this.config = config;\n    }\n    ngOnInit() {\n    }\n    onMenuClicked() {\n        this.sideMenu.toggleSideNav();\n    }\n    onUserOptionSelect(option) {\n        this.userOptionSelect.emit(option);\n    }\n    onHelpOptionSelect(option) {\n        this.helpOptionSelect.emit(option);\n    }\n    onSearch() {\n        this.search.emit(this.searchText);\n        this.searchText = '';\n    }\n    static { this.ɵfac = function ModLayoutComponent_Factory(t) { return new (t || ModLayoutComponent)(i0.ɵɵdirectiveInject(ModConfig)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModLayoutComponent, selectors: [[\"mod-layout\"]], viewQuery: function ModLayoutComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sideMenu = _t.first);\n        } }, inputs: { appName: \"appName\", menuConfig: \"menuConfig\" }, outputs: { userOptionSelect: \"userOptionSelect\", helpOptionSelect: \"helpOptionSelect\", search: \"search\" }, ngContentSelectors: _c1, decls: 9, vars: 3, consts: [[1, \"mod-layout-container\"], [1, \"layout-header\"], [3, \"appName\", \"menuClick\", \"userOptionSelect\", \"helpOptionSelect\"], [\"style\", \"display: flex; justify-content: center;\", 4, \"ngIf\"], [1, \"layout-content\"], [3, \"config\"], [\"sidemenu\", \"\"], [2, \"display\", \"flex\", \"justify-content\", \"center\"], [\"matInput\", \"\", \"placeholder\", \"Search\", 1, \"search-box\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"]], template: function ModLayoutComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"mod-loading-overlay\");\n            i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"mod-header\", 2);\n            i0.ɵɵlistener(\"menuClick\", function ModLayoutComponent_Template_mod_header_menuClick_3_listener() { return ctx.onMenuClicked(); })(\"userOptionSelect\", function ModLayoutComponent_Template_mod_header_userOptionSelect_3_listener($event) { return ctx.onUserOptionSelect($event); })(\"helpOptionSelect\", function ModLayoutComponent_Template_mod_header_helpOptionSelect_3_listener($event) { return ctx.onHelpOptionSelect($event); });\n            i0.ɵɵtemplate(4, ModLayoutComponent_div_4_Template, 2, 1, \"div\", 3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"mod-side-menu\", 5, 6);\n            i0.ɵɵprojection(8);\n            i0.ɵɵelementEnd()()();\n        } if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"appName\", ctx.appName);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.config.showSearch);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"config\", ctx.menuConfig);\n        } }, dependencies: [i1$2.NgIf, i2$1.DefaultValueAccessor, i2$1.NgControlStatus, i2$1.NgModel, i3$1.MatInput, ModSideMenuComponent, ModHeaderComponent, ModLoadingOverlayComponent], styles: [\".mod-layout-container[_ngcontent-%COMP%]{display:flex;flex-flow:column;height:100%}.layout-header[_ngcontent-%COMP%]{flex:0}.layout-content[_ngcontent-%COMP%]{flex:1;overflow:auto}.search-box[_ngcontent-%COMP%]{background-color:#fff;box-shadow:none;border:none;min-height:32px;width:50%;color:#000;font-size:14px;padding-top:0;padding-right:15px;border-radius:16px;padding-left:15px;margin-left:15px;margin-right:15px}.search-box[_ngcontent-%COMP%]:focus{outline:none}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModLayoutComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-layout', template: \"<mod-loading-overlay></mod-loading-overlay>\\r\\n<div class=\\\"mod-layout-container\\\">\\r\\n    <div class=\\\"layout-header\\\">\\r\\n        <!--<mod-welcome-banner>\\r\\n        </mod-welcome-banner>-->\\r\\n        <mod-header [appName]=\\\"appName\\\" (menuClick)=\\\"onMenuClicked()\\\" (userOptionSelect)=\\\"onUserOptionSelect($event)\\\" (helpOptionSelect)=\\\"onHelpOptionSelect($event)\\\">\\r\\n            <div *ngIf=\\\"config.showSearch\\\" style=\\\"display: flex; justify-content: center;\\\">\\r\\n                <input [(ngModel)]=\\\"searchText\\\" matInput placeholder=\\\"Search\\\" class=\\\"search-box\\\" (keyup.enter)=\\\"onSearch()\\\">\\r\\n            </div>\\r\\n        </mod-header>\\r\\n    </div>\\r\\n    <div class=\\\"layout-content\\\">\\r\\n        <mod-side-menu [config]=\\\"menuConfig\\\" #sidemenu>\\r\\n            <ng-content></ng-content>\\r\\n        </mod-side-menu>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".mod-layout-container{display:flex;flex-flow:column;height:100%}.layout-header{flex:0}.layout-content{flex:1;overflow:auto}.search-box{background-color:#fff;box-shadow:none;border:none;min-height:32px;width:50%;color:#000;font-size:14px;padding-top:0;padding-right:15px;border-radius:16px;padding-left:15px;margin-left:15px;margin-right:15px}.search-box:focus{outline:none}\\n\"] }]\n    }], function () { return [{ type: ModFrameworkConfig, decorators: [{\n                type: Inject,\n                args: [ModConfig]\n            }] }]; }, { sideMenu: [{\n            type: ViewChild,\n            args: ['sidemenu', { static: true }]\n        }], appName: [{\n            type: Input\n        }], menuConfig: [{\n            type: Input\n        }], userOptionSelect: [{\n            type: Output\n        }], helpOptionSelect: [{\n            type: Output\n        }], search: [{\n            type: Output\n        }] }); })();\n\nclass ModWelcomeBanner {\n    constructor() {\n        this.onLogin = new EventEmitter();\n        this.onLogout = new EventEmitter();\n    }\n    ngOnInit() {\n    }\n    static { this.ɵfac = function ModWelcomeBanner_Factory(t) { return new (t || ModWelcomeBanner)(); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModWelcomeBanner, selectors: [[\"mod-welcome-banner\"]], outputs: { onLogin: \"onLogin\", onLogout: \"onLogout\" }, decls: 4, vars: 0, consts: [[\"role\", \"banner\", 1, \"mod-header\"], [1, \"mod-welcome-banner\"], [1, \"welcome-user\"]], template: function ModWelcomeBanner_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"header\", 0)(1, \"div\", 1)(2, \"div\", 2);\n            i0.ɵɵelement(3, \"mod-user-display\");\n            i0.ɵɵelementEnd()()();\n        } }, dependencies: [ModUserDisplayComponent], styles: [\".mod-header[_ngcontent-%COMP%]{display:flex;flex-direction:column}.mod-welcome-banner[_ngcontent-%COMP%]{padding-left:10px;padding-right:10px;background-color:#f0f0f0;padding-bottom:0;display:flex;font-family:Source Sans Pro Web,Helvetica Neue,Helvetica,Roboto,Arial,sans-serif}.welcome-user[_ngcontent-%COMP%]{font-weight:700;font-size:.85em;padding-top:2px;padding-right:5px;flex:1;display:flex;justify-content:flex-end}.loginout-button[_ngcontent-%COMP%]{vertical-align:middle;width:auto!important;display:inline!important}.loginout-text[_ngcontent-%COMP%]{align-items:center}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModWelcomeBanner, [{\n        type: Component,\n        args: [{ selector: 'mod-welcome-banner', template: \"<header class=\\\"mod-header\\\" role=\\\"banner\\\">\\r\\n    <div class=\\\"mod-welcome-banner\\\">\\r\\n        <div class=\\\"welcome-user\\\">\\r\\n            <mod-user-display></mod-user-display>\\r\\n        </div>\\r\\n    </div>\\r\\n</header>\\r\\n\", styles: [\".mod-header{display:flex;flex-direction:column}.mod-welcome-banner{padding-left:10px;padding-right:10px;background-color:#f0f0f0;padding-bottom:0;display:flex;font-family:Source Sans Pro Web,Helvetica Neue,Helvetica,Roboto,Arial,sans-serif}.welcome-user{font-weight:700;font-size:.85em;padding-top:2px;padding-right:5px;flex:1;display:flex;justify-content:flex-end}.loginout-button{vertical-align:middle;width:auto!important;display:inline!important}.loginout-text{align-items:center}\\n\"] }]\n    }], function () { return []; }, { onLogin: [{\n            type: Output\n        }], onLogout: [{\n            type: Output\n        }] }); })();\n\nfunction BrowserCheckComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 3);\n    i0.ɵɵtext(3, \"\\u00A0\\u00A0You can't log in to this site.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵtext(5, \" Possible reasons for this include: \");\n    i0.ɵɵelementStart(6, \"ul\")(7, \"li\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementStart(9, \"ul\")(10, \"li\");\n    i0.ɵɵtext(11, \"Please check your network connection.\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"li\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementStart(14, \"ul\")(15, \"li\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"li\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementStart(19, \"ul\")(20, \"li\");\n    i0.ɵɵtext(21, \"In your browser settings, either allow all third-party cookies, or \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"li\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(24, \"i\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelement(26, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \" Please correct these problems and try again. \");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" You can't reach the site \", ctx_r0.loginSite, \". \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\" Site \", ctx_r0.loginSite, \" does not allow cross-origin scripting (CORS) from your domain \", ctx_r0.myDomain, \". \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Please contact the administrator of \", ctx_r0.loginSite, \" and request access for your site.\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Your browser doesn't accept third-party cookies from domain \", ctx_r0.loginDomain, \". \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Disallow third-party cookies, but add \", ctx_r0.loginDomain, \" as an exception.\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"The actual error returned is \\\"\", ctx_r0.browserFail, \"\\\".\");\n} }\nclass BrowserCheckComponent {\n    constructor(currentUserService) {\n        this.currentUserService = currentUserService;\n    }\n    ngOnInit() {\n        this.currentUserService.browserCheck().then(response => {\n            this.browserFail = '';\n            return;\n        }).catch(error => {\n            $(\"#loginout\").css(\"display\", \"none\");\n            this.browserFail = error;\n            this.loginSite = this.currentUserService.siteUrl;\n            this.loginDomain = this.currentUserService.domain;\n            this.myDomain = this.currentUserService.getDomain(window.location.href);\n        });\n    }\n    static { this.ɵfac = function BrowserCheckComponent_Factory(t) { return new (t || BrowserCheckComponent)(i0.ɵɵdirectiveInject(CurrentUserService)); }; }\n    static { this.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: BrowserCheckComponent, selectors: [[\"mod-browser-check\"]], decls: 1, vars: 1, consts: [[\"class\", \"container-fluid browser-check-container\", 4, \"ngIf\"], [1, \"container-fluid\", \"browser-check-container\"], [1, \"fa\", \"fa-warning\", \"browser-check-icon\"], [1, \"browser-check-header-text\"], [1, \"browser-check-text\"]], template: function BrowserCheckComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, BrowserCheckComponent_div_0_Template, 28, 7, \"div\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.browserFail);\n        } }, dependencies: [i1$2.NgIf], styles: [\".browser-check-container[_ngcontent-%COMP%]{border:4px solid red;padding-top:5px;padding-bottom:5px;padding-left:10px}.browser-check-icon[_ngcontent-%COMP%]{font-size:36px;color:red;vertical-align:middle}.browser-check-text[_ngcontent-%COMP%]{font-size:16px;vertical-align:middle;padding-left:30px;padding-top:10px}.browser-check-header-text[_ngcontent-%COMP%]{font-size:24px;font-weight:700;vertical-align:middle}\"] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserCheckComponent, [{\n        type: Component,\n        args: [{ selector: 'mod-browser-check', template: \"<div *ngIf=\\\"browserFail\\\" class=\\\"container-fluid browser-check-container\\\">\\r\\n    <span class=\\\"fa fa-warning browser-check-icon\\\"></span><span class=\\\"browser-check-header-text\\\">&nbsp;&nbsp;You can't log in to this site.</span>\\r\\n    <div class=\\\"browser-check-text\\\">\\r\\n        Possible reasons for this include:\\r\\n        <ul>\\r\\n            <li>\\r\\n                You can't reach the site {{loginSite}}.\\r\\n                <ul>\\r\\n                    <li>Please check your network connection.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n            <li>\\r\\n                Site {{loginSite}} does not allow cross-origin scripting (CORS) from your domain {{myDomain}}.\\r\\n                <ul>\\r\\n                    <li>Please contact the administrator of {{loginSite}} and request access for your site.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n            <li>\\r\\n                Your browser doesn't accept third-party cookies from domain {{loginDomain}}.\\r\\n                <ul>\\r\\n                    <li>In your browser settings, either allow all third-party cookies, or </li>\\r\\n                    <li>Disallow third-party cookies, but add {{loginDomain}} as an exception.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <i>The actual error returned is \\\"{{browserFail}}\\\".<br /></i>\\r\\n        Please correct these problems and try again.\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".browser-check-container{border:4px solid red;padding-top:5px;padding-bottom:5px;padding-left:10px}.browser-check-icon{font-size:36px;color:red;vertical-align:middle}.browser-check-text{font-size:16px;vertical-align:middle;padding-left:30px;padding-top:10px}.browser-check-header-text{font-size:24px;font-weight:700;vertical-align:middle}\\n\"] }]\n    }], function () { return [{ type: CurrentUserService }]; }, null); })();\n\n// Add credentials to every request.\n// Credit to https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\nclass HttpRequestInterceptor {\n    constructor(userService) {\n        this.userService = userService;\n    }\n    intercept(req, next) {\n        req = req.clone({\n            withCredentials: true\n        });\n        return next.handle(req).pipe(filter(event => event instanceof HttpResponse), tap((event) => {\n            // Don't force login when making a call to claims/user\n            if (!this.userService.user && !event.url.endsWith(\"claims/user\"))\n                this.userService.login();\n        }, (err) => {\n            if (err.status == 0)\n                this.userService.redirectLogin();\n        }));\n    }\n    static { this.ɵfac = function HttpRequestInterceptor_Factory(t) { return new (t || HttpRequestInterceptor)(i0.ɵɵinject(CurrentUserService)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: HttpRequestInterceptor, factory: HttpRequestInterceptor.ɵfac }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpRequestInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: CurrentUserService }]; }, null); })();\n\nclass RoleGuardService {\n    constructor(userService, router) {\n        this.userService = userService;\n        this.router = router;\n    }\n    canActivate(route) {\n        // this will be passed from the route config\n        // on the data property\n        const expectedRoles = route.data.expectedRoles;\n        if (!this.userService.user || !this.userService.isInRoles(expectedRoles)) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        return true;\n    }\n    static { this.ɵfac = function RoleGuardService_Factory(t) { return new (t || RoleGuardService)(i0.ɵɵinject(CurrentUserService), i0.ɵɵinject(i1$1.Router)); }; }\n    static { this.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RoleGuardService, factory: RoleGuardService.ɵfac }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoleGuardService, [{\n        type: Injectable\n    }], function () { return [{ type: CurrentUserService }, { type: i1$1.Router }]; }, null); })();\n\nfunction initiateSingleSignOn(userService) {\n    return () => {\n        var auth = sessionStorage.getItem(\"authenticating\")?.toString();\n        if (auth) {\n            return userService.login().then(response => {\n                sessionStorage.removeItem(\"authenticating\");\n            });\n        }\n        else {\n            userService.redirectLogin();\n            let promise = new Promise((resolve, reject) => {\n                reject(\"Authenticating\");\n            });\n            return promise;\n        }\n    };\n}\nclass ModFrameworkModule {\n    static forRoot(config = null) {\n        return {\n            ngModule: ModFrameworkModule,\n            providers: [\n                {\n                    provide: ModConfig,\n                    useValue: config\n                },\n                CurrentUserService,\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: LoadingIntercepter,\n                    multi: true\n                },\n                LoadingService,\n                // see https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: HttpRequestInterceptor,\n                    multi: true\n                },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: initiateSingleSignOn,\n                    multi: true,\n                    deps: [CurrentUserService]\n                },\n                RoleGuardService,\n            ]\n        };\n    }\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error('ModFrameworkModule is already loaded. Import it in the AppModule only');\n        }\n    }\n    static { this.ɵfac = function ModFrameworkModule_Factory(t) { return new (t || ModFrameworkModule)(i0.ɵɵinject(ModFrameworkModule, 12)); }; }\n    static { this.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ModFrameworkModule }); }\n    static { this.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n            BrowserModule,\n            FormsModule,\n            ReactiveFormsModule,\n            HttpClientModule,\n            RouterModule,\n            MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule] }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModFrameworkModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    ModWelcomeBanner,\n                    ModSideMenuComponent,\n                    ModLayoutComponent,\n                    ModHeaderComponent,\n                    ModProgressSpinnerComponent,\n                    ModLoadingOverlayComponent,\n                    ModUserDisplayComponent,\n                    BrowserCheckComponent,\n                ],\n                imports: [\n                    CommonModule,\n                    BrowserModule,\n                    NgIf,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    HttpClientModule,\n                    RouterModule,\n                    MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule,\n                ],\n                providers: [],\n                exports: [\n                    ModHeaderComponent,\n                    ModLayoutComponent,\n                    ModLoadingOverlayComponent,\n                    ModProgressSpinnerComponent,\n                    ModSideMenuComponent,\n                    ModUserDisplayComponent,\n                    ModWelcomeBanner,\n                    BrowserCheckComponent,\n                ]\n            }]\n    }], function () { return [{ type: ModFrameworkModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ModFrameworkModule, { declarations: [ModWelcomeBanner,\n        ModSideMenuComponent,\n        ModLayoutComponent,\n        ModHeaderComponent,\n        ModProgressSpinnerComponent,\n        ModLoadingOverlayComponent,\n        ModUserDisplayComponent,\n        BrowserCheckComponent], imports: [CommonModule,\n        BrowserModule,\n        NgIf,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        RouterModule,\n        MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule], exports: [ModHeaderComponent,\n        ModLayoutComponent,\n        ModLoadingOverlayComponent,\n        ModProgressSpinnerComponent,\n        ModSideMenuComponent,\n        ModUserDisplayComponent,\n        ModWelcomeBanner,\n        BrowserCheckComponent] }); })();\n\nclass DtoBase {\n    constructor() {\n        this.id = 0;\n    }\n}\n\nclass ModSideMenuConfig {\n    constructor() {\n        this.sections = [];\n    }\n}\nclass ModMenuSection {\n    constructor() {\n        this.name = \"\";\n        this.shortName = \"\";\n        this.visible = true;\n        this.allowedRoles = [];\n        this.menuItems = [];\n    }\n}\nclass ModMenuItem {\n    constructor() {\n        this.allowedRoles = [];\n    }\n}\n\nclass UserInfo {\n    constructor(uniqueName, upn) {\n        this.uniqueName = uniqueName;\n        this.upn = upn;\n        console.log(uniqueName + '[]asdf');\n        console.log(uniqueName == 'LOGIN\\\\kuennen_s');\n        this.displayName = (uniqueName == \"LOGIN\\\\kuennen_s\") ? \"Kuennen, Steve (Contractor)\" : uniqueName;\n        this.userProfileUrl = \"\";\n    }\n}\n\nclass Logging {\n    static { this.logToConsole = true; }\n    static log(val) {\n        if (this.logToConsole)\n            console.log(val);\n    }\n}\n\nclass ModPromiseServiceBase {\n    constructor(http, url, endpoint, TCreator) {\n        this.http = http;\n        this.url = url;\n        this.endpoint = endpoint;\n        this.TCreator = TCreator;\n        this.url = (url.endsWith('/') ? url.slice(0, -1) : url) + '/api';\n    }\n    save(item) {\n        if (item.id <= 0)\n            return this.create(item);\n        else\n            return this.update(item);\n    }\n    getAll(params) {\n        var url = `${this.url}/${this.endpoint}`;\n        return this.http\n            .get(url, { params })\n            .toPromise()\n            .then(response => {\n            var data = [];\n            response.forEach(x => {\n                var obj = this.formatResponse(x);\n                data.push(obj);\n            });\n            return data;\n        })\n            .catch(this.handleError);\n    }\n    create(item) {\n        var url = `${this.url}/${this.endpoint}`;\n        return this.http.post(url, item)\n            .toPromise()\n            .then(response => {\n            var obj = this.formatResponse(response);\n            return obj;\n        })\n            .catch(this.handleError);\n    }\n    get(id) {\n        var url = `${this.url}/${this.endpoint}/${id}`;\n        return this.http.get(url)\n            .toPromise()\n            .then(response => {\n            var obj = this.formatResponse(response);\n            return obj;\n        })\n            .catch(this.handleError);\n    }\n    update(item) {\n        var url = `${this.url}/${this.endpoint}/${item.id}`;\n        return this.http.put(url, item)\n            .toPromise()\n            .then(response => {\n            var obj = this.formatResponse(response);\n            return obj;\n        })\n            .catch(this.handleError);\n    }\n    delete(id) {\n        return this.http.delete(`${this.url}/${this.endpoint}/${id}`).toPromise();\n    }\n    // Override to fully instantiate child objects.  Be sure to call super.formatResponse first to instantiate the parent object.\n    formatResponse(data) {\n        return Object.assign(new this.TCreator(), data);\n    }\n    handleError(error) {\n        Logging.log(error);\n        return Promise.reject(error.message || error);\n    }\n}\n\n/*\n * Public API Surface of mod-framework\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserCheckComponent, CurrentUserService, DtoBase, LoadingIntercepter, LoadingService, ModFrameworkConfig, ModFrameworkModule, ModHeaderComponent, ModLayoutComponent, ModLoadingOverlayComponent, ModMenuItem, ModMenuSection, ModProgressSpinnerComponent, ModPromiseServiceBase, ModSideMenuComponent, ModSideMenuConfig, ModUserDisplayComponent, ModWelcomeBanner, RoleGuardService, UserInfo, initiateSingleSignOn };\n//# sourceMappingURL=mod-framework.mjs.map\n","map":null},{"fileName":"mod-framework.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"mod-framework.mjs\",\"sources\":[\"../../../projects/mod-framework/src/lib/static/mod-config.const.ts\",\"../../../projects/mod-framework/src/lib/models/mod-framework-config.model.ts\",\"../../../projects/mod-framework/src/lib/services/loading.service.ts\",\"../../../projects/mod-framework/src/lib/services/loading.interceptor.ts\",\"../../../projects/mod-framework/src/lib/models/current-user.model.ts\",\"../../../projects/mod-framework/src/lib/services/current-user.service.ts\",\"../../../projects/mod-framework/src/lib/components/mod-side-menu/mod-side-menu.component.html\",\"../../../projects/mod-framework/src/lib/components/mod-side-menu/mod-side-menu.component.ts\",\"../../../projects/mod-framework/src/lib/components/mod-user-display/mod-user-display.component.html\",\"../../../projects/mod-framework/src/lib/components/mod-user-display/mod-user-display.component.ts\",\"../../../projects/mod-framework/src/lib/components/mod-header/mod-header.component.html\",\"../../../projects/mod-framework/src/lib/components/mod-header/mod-header.component.ts\",\"../../../projects/mod-framework/src/lib/components/mod-progress-spinner/mod-progress-spinner.component.html\",\"../../../projects/mod-framework/src/lib/components/mod-progress-spinner/mod-progress-spinner.component.ts\",\"../../../projects/mod-framework/src/lib/components/mod-loading-overlay/mod-loading-overlay.component.html\",\"../../../projects/mod-framework/src/lib/components/mod-loading-overlay/mod-loading-overlay.component.ts\",\"../../../projects/mod-framework/src/lib/components/mod-layout/mod-layout.component.html\",\"../../../projects/mod-framework/src/lib/components/mod-layout/mod-layout.component.ts\",\"../../../projects/mod-framework/src/lib/components/mod-welcome-banner/mod-welcome-banner.component.ts\",\"../../../projects/mod-framework/src/lib/components/mod-welcome-banner/mod-welcome-banner.component.html\",\"../../../projects/mod-framework/src/lib/components/browser-check/browser-check.component.html\",\"../../../projects/mod-framework/src/lib/components/browser-check/browser-check.component.ts\",\"../../../projects/mod-framework/src/lib/services/http-request.interceptor.ts\",\"../../../projects/mod-framework/src/lib/services/role-guard.service.ts\",\"../../../projects/mod-framework/src/lib/mod-framework.module.ts\",\"../../../projects/mod-framework/src/lib/models/dto-base.model.ts\",\"../../../projects/mod-framework/src/lib/models/mod-side-menu-config.model.ts\",\"../../../projects/mod-framework/src/lib/models/user-info.model.ts\",\"../../../projects/mod-framework/src/lib/static/logging.static.ts\",\"../../../projects/mod-framework/src/lib/services/mod-promise.service.base.ts\",\"../../../projects/mod-framework/src/public-api.ts\",\"../../../projects/mod-framework/src/mod-framework.ts\"],\"sourcesContent\":[\"import { InjectionToken } from '@angular/core';\\r\\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\\r\\n\\r\\nexport const ModConfig = new InjectionToken<ModFrameworkConfig>('modConfig');\\r\\n\",\"export class ModFrameworkConfig {\\r\\n    loginSiteUrl: string;\\r\\n    loadingDelay: number;\\r\\n    urlsToSkip: string[];\\r\\n    showHelp: boolean = false;\\r\\n    helpOptions: string[] = [];\\r\\n    showSearch: boolean = false;\\r\\n    userOptions: string[] = [];\\r\\n    profileUrl: string = 'https://portfolio.staging.omb.gov/portfolio';\\r\\n}\\r\\n\",\"//loading.service.ts\\r\\nimport { Injectable, Inject } from '@angular/core';\\r\\nimport { BehaviorSubject } from 'rxjs';\\r\\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\\r\\nimport { ModConfig } from '../static/mod-config.const';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: 'root'\\r\\n})\\r\\nexport class LoadingService {\\r\\n\\r\\n    public isLoading = new BehaviorSubject(false);\\r\\n    public loadingDelay: number = 500;\\r\\n\\r\\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\\r\\n        this.loadingDelay = config ? config.loadingDelay : 500;\\r\\n    }\\r\\n}\\r\\n\",\"// loader.interceptors.ts\\r\\nimport { Inject, Injectable } from '@angular/core';\\r\\nimport { HttpErrorResponse, HttpResponse, HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\\r\\nimport { Observable } from 'rxjs';\\r\\nimport { LoadingService } from './loading.service';\\r\\nimport { ModConfig } from '../static/mod-config.const';\\r\\nimport { ModFrameworkConfig } from '../../public-api';\\r\\n\\n@Injectable({\\r\\n    providedIn: 'root'\\r\\n})\\r\\nexport class LoadingIntercepter implements HttpInterceptor {\\n    private requests: HttpRequest<any>[] = [];\\r\\n\\r\\n    private urlsToSkip: string[] = ['frameworkapi/maxpicker/search'];\\r\\n\\r\\n    constructor(private loadingService: LoadingService, @Inject(ModConfig) config: ModFrameworkConfig) {\\r\\n        for (let x of config.urlsToSkip)\\r\\n            this.urlsToSkip.push(x);\\r\\n    }\\r\\n\\r\\n    removeRequest(req: HttpRequest<any>) {\\r\\n        const i = this.requests.indexOf(req);\\r\\n        if (i >= 0) {\\r\\n            this.requests.splice(i, 1);\\r\\n        }\\r\\n        this.loadingService.isLoading.next(this.requests.length > 0);\\r\\n    }\\r\\n\\r\\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\\r\\n        if (this.skipThisRequest(req)) {\\n            return next.handle(req);\\n        } else {\\n            this.requests.push(req);\\n            setTimeout(() => {\\n                if (this.requests.length > 0)\\r\\n                    this.loadingService.isLoading.next(true);\\n            }, this.loadingService.loadingDelay);\\n            \\r\\n            return Observable.create(observer => {\\r\\n                const subscription = next.handle(req)\\r\\n                    .subscribe(\\r\\n                        event => {\\r\\n                            if (event instanceof HttpResponse) {\\r\\n                                this.removeRequest(req);\\r\\n                                observer.next(event);\\r\\n                            }\\r\\n                        },\\r\\n                        err => {\\r\\n                            this.removeRequest(req);\\r\\n                            observer.error(err);\\r\\n                        },\\r\\n                        () => {\\r\\n                            this.removeRequest(req);\\r\\n                            observer.complete();\\r\\n                        });\\r\\n                // remove request from queue when cancelled\\r\\n                return () => {\\r\\n                    this.removeRequest(req);\\r\\n                    subscription.unsubscribe();\\r\\n                };\\r\\n            });\\n        }\\r\\n    }\\n\\n    private skipThisRequest(req: HttpRequest<any>): boolean {\\n        var matched = false;\\n        for (let url of this.urlsToSkip) {\\n            matched = req.url.match(url) != null;\\n            if (matched) break;\\r\\n        }\\n        return matched;\\r\\n    }\\r\\n}\\r\\n\",\"export class CurrentUser {\\r\\n    userId: string;\\r\\n    upn: string;\\r\\n    emailAddress: string;\\r\\n    firstName: string;\\r\\n    lastName: string;\\r\\n    title: string;\\r\\n    phone: string;\\r\\n    groups: string[];\\r\\n    roles: string[];\\r\\n    displayName: string;\\r\\n\\tphoneNumber: string;\\r\\n}\\n\",\"import { Injectable, Inject } from '@angular/core';\\r\\nimport { CurrentUser } from '../models/current-user.model';\\r\\nimport { HttpClient } from '@angular/common/http';\\r\\n\\r\\nimport * as parseUri from 'parse-uri';\\r\\nimport { ModConfig } from '../static/mod-config.const';\\r\\nimport { ModFrameworkConfig } from '../models/mod-framework-config.model';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: 'root'\\r\\n})\\r\\nexport class CurrentUserService {\\r\\n    public loginPromise: Promise<CurrentUser>;\\r\\n\\r\\n    private serviceUrl = '';\\r\\n    private setCookieUrl = '';\\r\\n    private checkCookieUrl = '';\\r\\n    private noOpUrl = '';\\r\\n    private cookieName = 'CookieSettingsCheck';\\r\\n\\r\\n    private _user: CurrentUser;\\r\\n    private _browserOk: boolean = false;\\r\\n\\r\\n    private loginSiteUrl = \\\"https://localhost:44374\\\";\\r\\n\\r\\n    constructor(private http: HttpClient, @Inject(ModConfig) config: ModFrameworkConfig) {\\r\\n        this.loginSiteUrl = config ? config.loginSiteUrl : 'https://localhost:44374';\\r\\n\\r\\n        this.serviceUrl = this.siteUrl + \\\"api/claims/user\\\";\\r\\n        this.setCookieUrl = this.siteUrl + \\\"api/health/setcookie\\\";\\r\\n        this.checkCookieUrl = this.siteUrl + \\\"api/health/checkcookie\\\";\\r\\n        this.noOpUrl = this.siteUrl + \\\"api/health/noop\\\";\\r\\n    }\\r\\n\\r\\n    public getDomain(url): string {\\r\\n        var u = parseUri(url);\\r\\n        return u.host;\\r\\n    }\\r\\n\\r\\n    public get user(): CurrentUser {\\r\\n        return this._user;\\r\\n    }\\r\\n\\r\\n    public get browserOk(): boolean {\\r\\n        return this._browserOk;\\r\\n    }\\r\\n\\r\\n    public get domain(): string {\\r\\n        return this.getDomain(this.loginSiteUrl);\\r\\n    }\\r\\n\\r\\n    public get siteUrl(): string {\\r\\n        return this.loginSiteUrl + (this.loginSiteUrl.endsWith(\\\"/\\\") ? \\\"\\\" : \\\"/\\\");\\r\\n    }\\r\\n\\r\\n    browserCheck(): Promise<boolean> {\\r\\n        return this.http.get(this.noOpUrl, { withCredentials: false })\\r\\n            .toPromise()\\r\\n            .then(() => {\\r\\n                return this.http.get(this.setCookieUrl)\\r\\n                    .toPromise()\\r\\n                    .then(response => {\\r\\n                        return this.http.get(this.checkCookieUrl)\\r\\n                            .toPromise().then(response => {\\r\\n                                this._browserOk = true;\\r\\n                                return true;\\r\\n                            })\\r\\n                    })\\r\\n                    .catch((error: Response) => {\\r\\n                        this._browserOk = false;\\r\\n                        this._user = null;\\r\\n                        return Promise.reject<boolean>(\\\"Domain \\\" + this.getDomain(this.setCookieUrl) + \\\" probably doesn't allow CORS from domain \\\" + this.domain);\\r\\n                    });\\r\\n            })\\r\\n            .catch(error => {\\r\\n                this._browserOk = false;\\r\\n                this._user = null;\\r\\n                return Promise.reject<boolean>(\\\"Can't reach site \\\" + this.loginSiteUrl);\\r\\n            });\\r\\n    }\\r\\n\\r\\n    preFlight(): Promise<any> {\\r\\n        return this.http.options(this.serviceUrl)\\r\\n            .toPromise()\\r\\n            .then(response => { return response; })\\r\\n            .catch(this.handleError);\\r\\n    }\\r\\n\\r\\n    redirectLogin() {\\r\\n        var returnUrl = window.location.href;\\r\\n\\r\\n        sessionStorage.setItem('authenticating', 'authenticating');\\r\\n        var url = this.siteUrl + 'api/login' + \\\"?ReturnUrl=\\\" + returnUrl;\\r\\n        window.open(url, '_self');\\r\\n    }\\r\\n\\r\\n    login(): Promise<CurrentUser> {\\r\\n        this.loginPromise = this.http.get(this.serviceUrl)\\r\\n            .toPromise()\\r\\n            .then((response: CurrentUser) => {\\r\\n                var user: CurrentUser;\\r\\n                user = Object.assign(new CurrentUser(), response);\\r\\n                this._user = user;\\r\\n                return user;\\r\\n            })\\r\\n            .catch(error => {\\r\\n                return this.handleError(error);\\r\\n            });\\r\\n        return this.loginPromise;\\r\\n    }\\r\\n\\r\\n    logout() {\\r\\n        this._user = null;\\r\\n    }\\r\\n\\r\\n    private handleError(error: any): Promise<any> {\\r\\n        return Promise.reject(error.message || error);\\r\\n    }\\r\\n\\r\\n    public isInRole(role: string): boolean {\\r\\n        return this.user.roles.find(x => x == role) !== undefined;\\r\\n    }\\r\\n\\r\\n    public isInRoles(roles: string[]): boolean {\\r\\n        var returnValue = false;\\r\\n\\r\\n        roles.forEach(x => {\\r\\n            returnValue = returnValue || this.isInRole(x);\\r\\n        });\\r\\n\\r\\n        return returnValue;\\r\\n    }\\r\\n}\\r\\n\",\"<mat-sidenav-container class=\\\"mod-side-menu-container\\\">\\r\\n    <mat-sidenav #sidenav mode=\\\"side\\\" opened role=\\\"navigation\\\" id=\\\"navigation-menu\\\" [ngClass]=\\\"{'mod-side-menu' : true, 'collapsed' : (!expanded && opened)}\\\">\\r\\n        <h1 mat-subheader>\\r\\n            {{ expanded ? config.title : \\\"\\\" }}\\r\\n            <mat-icon *ngIf=\\\"expanded\\\" class=\\\"menu-close\\\" (click)=\\\"expandMenu(!this.expanded)\\\">\\r\\n                keyboard_arrow_left\\r\\n            </mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!expanded\\\" class=\\\"menu-open\\\" (click)=\\\"expandMenu(!this.expanded)\\\">\\r\\n                keyboard_arrow_right\\r\\n            </mat-icon>\\r\\n        </h1>\\r\\n\\r\\n        <div *ngFor=\\\"let section of viewableSections\\\">\\r\\n            <h1 mat-subheader>\\r\\n                {{ expanded ? section.name : \\\"\\\" }}\\r\\n            </h1>\\r\\n            <mat-nav-list>\\r\\n                <mat-list-item *ngFor=\\\"let item of getViewableMenuItems(section)\\\"\\r\\n                               [routerLink]=\\\"item.route\\\"\\r\\n                               routerLinkActive=\\\"active\\\"\\r\\n                               [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\r\\n                               (keyup.enter)=\\\"navigateTo(item.route)\\\">\\r\\n                    <mat-icon matListItemIcon [matTooltip]=\\\"item.text\\\">{{item.icon}}</mat-icon>\\r\\n                    {{ expanded ? item.text : \\\"\\\"}}\\r\\n                </mat-list-item>\\r\\n            </mat-nav-list>\\r\\n        </div>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content [ngClass]=\\\"{'mod-side-menu-content' : true, 'collapsed' : (!expanded && opened)}\\\" role=\\\"main\\\" #mainContent tabindex=\\\"0\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\",\"import { Component, OnInit, OnChanges, Input, SimpleChange, ElementRef, ViewChild, Renderer2 } from '@angular/core';\\nimport { ModSideMenuConfig, ModMenuItem, ModMenuSection } from '../../models/mod-side-menu-config.model';\\r\\nimport { Router, ActivatedRoute } from '@angular/router';\\r\\nimport { MatSidenav } from '@angular/material/sidenav';\\r\\nimport { CurrentUserService } from '../../services/current-user.service';\\r\\n\\n@Component({\\n    selector: 'mod-side-menu',\\n    templateUrl: './mod-side-menu.component.html',\\n    styleUrls: ['./mod-side-menu.component.scss']\\n})\\nexport class ModSideMenuComponent implements OnInit, OnChanges {\\n\\n    public menuOption: string;\\n    public expanded: boolean = true;\\n    public opened: boolean = true;\\n\\n    @Input()\\n    config: ModSideMenuConfig;\\n\\n    @ViewChild('mainContent', { static: true }) mainContentElement: ElementRef;\\n    @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\\n\\n    constructor(\\n        public router: Router,\\n        private activatedRoute: ActivatedRoute,\\n        private renderer: Renderer2,\\n        private userService: CurrentUserService) {\\n    }\\n\\n    public ngOnInit() {\\n    }\\n\\n    public ngOnChanges(changes: { [propName: string]: SimpleChange }) {\\n        if (changes['config'] && changes['config'].previousValue != changes['config'].currentValue) {\\n            this.selectCurrentRoute();\\n        }\\n    }\\n\\n    private selectCurrentRoute(): void {\\n        var urls = this.router.url.split('/');\\n\\n        for (let section of this.config.sections) {\\n            for (let item of section.menuItems) {\\n                if (urls[urls.length - 1].toString() == item.route) {\\n                    this.menuOption = item.text;\\n\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    // Used by menu item keyup.enter handler to provide keyboard navigation\\n    public navigateTo(urlSegment: string) {\\n        urlSegment = urlSegment.split('#')[0];\\n        var url = \\\"\\\";\\n        if (urlSegment.startsWith('/')) {\\n            url = urlSegment;\\n        } else {\\n            url = this.activatedRoute.snapshot.url.join('/') + '/' + urlSegment;\\n        }\\n\\n        // nav to the route, and then set focus on the main content div rather than keep focus\\n        // on the nav menu itself (users will need to Shift+Tab their way back to nav menu)\\n        this.router.navigateByUrl(url).then(x => {\\n            if (this.mainContentElement)\\n                this.mainContentElement.nativeElement.focus();\\n        });\\n    }\\n\\n    public expandMenu(expanded: boolean = true) {\\n        this.expanded = expanded;\\n    }\\n\\n    public toggleSideNav() {\\n        //this.sidenav.toggle();\\n        var opening = !this.opened;\\n\\n        if (opening) {\\n            this.opened = !this.opened;\\n            this.sidenav.toggle();\\n        }\\n        else {\\n            this.sidenav.toggle().then(() => {\\r\\n                this.opened = !this.opened;\\r\\n            });\\r\\n        }\\r\\n    }\\n\\n    public get viewableSections(): ModMenuSection[] {\\n        let sections: ModMenuSection[] = [];\\r\\n\\r\\n        this.config.sections.forEach(section => {\\r\\n            if (!section.allowedRoles || this.userService.isInRoles(section.allowedRoles))\\r\\n                sections.push(section);\\r\\n        });\\r\\n        return sections;\\r\\n    }\\n\\n    public getViewableMenuItems(section: ModMenuSection): ModMenuItem[] {\\n        let items: ModMenuItem[] = [];\\r\\n\\r\\n        section.menuItems.forEach(item => {\\r\\n            if (!item.allowedRoles || this.userService.isInRoles(item.allowedRoles))\\r\\n                items.push(item);\\r\\n        })\\r\\n\\r\\n        return items;\\r\\n    }\\n\\n}\\n\",\"<div *ngIf=\\\"user\\\">\\r\\n    <span style=\\\"padding-right: 5px; margin-top: -5px;\\\">{{ user.displayName }}</span>\\r\\n    <ng-container *ngIf=\\\"showUser;else showMenu\\\">\\r\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"mod-user-icon\\\" aria-label=\\\"User Menu\\\">\\r\\n            <mat-icon>account_circle</mat-icon>\\r\\n        </button>\\r\\n    </ng-container>\\r\\n    <ng-template #showMenu>\\r\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"mat-icon-button\\\" aria-label=\\\"User Menu\\\">\\r\\n            <mat-icon>keyboard_arrow_down</mat-icon>\\r\\n        </button>\\r\\n    </ng-template>\\r\\n    <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item *ngFor=\\\"let option of config.userOptions\\\" (click)=\\\"optionSelected(option)\\\">{{ option }}</button>\\r\\n    </mat-menu>\\r\\n</div>\\r\\n\",\"import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\\nimport { CurrentUserService } from '../../services/current-user.service';\\nimport { ModConfig } from '../../static/mod-config.const';\\r\\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\\r\\n\\n@Component({\\n    selector: 'mod-user-display',\\n    templateUrl: './mod-user-display.component.html',\\n    styleUrls: ['./mod-user-display.component.scss']\\n})\\nexport class ModUserDisplayComponent implements OnInit {\\n\\n    @Input()\\n    showUser: boolean = false;\\n\\n    @Output()\\n    selectOption = new EventEmitter<string>();\\n\\n\\n    public config: ModFrameworkConfig;\\n\\n    constructor(private userService: CurrentUserService, @Inject(ModConfig) config: ModFrameworkConfig) {\\n        this.config = config;\\n        this.config.userOptions.push('User Profile');\\n    }\\n\\n    ngOnInit() {\\n        \\n    }\\n\\n    get user() {\\n        return this.userService.user;\\n    }\\n\\n    public optionSelected(option: string) {\\n        if (option == \\\"User Profile\\\") {\\r\\n            window.open(this.config.profileUrl, '_blank')\\r\\n        }\\r\\n        else {\\r\\n            this.selectOption.emit(option);\\r\\n        }\\r\\n    }\\n}\\n\",\"<mat-toolbar class=\\\"mod-header\\\">\\r\\n    <!--<button mat-icon-button (click)=\\\"onMenuClick()\\\">\\r\\n        <mat-icon>\\r\\n            menu\\r\\n        </mat-icon>\\r\\n    </button>-->\\r\\n\\r\\n    <a class=\\\"logo-text-mark\\\" [routerLink]=\\\"['/']\\\">\\r\\n        <img class=\\\"mod-logo\\\" src=\\\"/assets/US-OfficeOfManagementAndBudget-Seal.png\\\" tabindex=\\\"-1\\\" />\\r\\n        <div tabindex=\\\"-1\\\" alt=\\\"Textmark\\\" class=\\\"text-mark\\\">{{ appName }}</div>\\r\\n    </a>\\r\\n\\r\\n    <span class=\\\"fill-remaining-space\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </span>\\r\\n\\r\\n    <div class=\\\"welcome-user\\\">\\r\\n        <mod-user-display [showUser]=\\\"true\\\" (selectOption)=\\\"onUserOptionSelect($event)\\\"></mod-user-display>\\r\\n        <div *ngIf=\\\"config.showHelp\\\">\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Help Menu\\\">\\r\\n                <mat-icon>help</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item *ngFor=\\\"let option of config.helpOptions\\\" (click)=\\\"optionSelected(option)\\\">{{ option }}</button>\\r\\n            </mat-menu>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-toolbar>\\r\\n\",\"import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\\nimport { ModConfig } from '../../static/mod-config.const';\\r\\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\\n\\n@Component({\\n    selector: 'mod-header',\\n    templateUrl: './mod-header.component.html',\\n    styleUrls: ['./mod-header.component.scss']\\n})\\nexport class ModHeaderComponent implements OnInit {\\n\\n    @Input()\\n    appName: string;\\n\\n    @Output()\\n    menuClick = new EventEmitter<any>();\\n\\n    @Output()\\n    userOptionSelect = new EventEmitter<string>();\\n\\n    @Output()\\n    helpOptionSelect = new EventEmitter<string>();\\n\\n    public config: ModFrameworkConfig;\\n\\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\\n        this.config = config;\\n    }\\n\\n    ngOnInit(): void {\\n    }\\n\\n    public onMenuClick(): void {\\n        this.menuClick.emit();\\r\\n    }\\n\\n    public onUserOptionSelect(option: string): void {\\n        this.userOptionSelect.emit(option);\\r\\n    }\\n\\n    public optionSelected(option: string): void {\\n        this.helpOptionSelect.emit(option);\\r\\n    }\\n}\\n\",\"<ng-container *ngIf=\\\"overlay;else progressSpinner\\\">\\r\\n    <div class=\\\"overlay\\\">\\r\\n        <div class=\\\"center\\\">\\r\\n            <ng-template [ngTemplateOutlet]=\\\"progressSpinner\\\"></ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-container>\\r\\n<ng-template #progressSpinner>\\r\\n    <mat-progress-spinner [diameter]=\\\"diameter\\\"\\r\\n                          [mode]=\\\"mode\\\"\\r\\n                          [color]=\\\"color\\\"\\r\\n                          [strokeWidth]=\\\"strokeWidth\\\"\\r\\n                          [value]=\\\"value\\\">\\r\\n    </mat-progress-spinner>\\r\\n</ng-template>\\r\\n\",\"import { Component, OnInit, Input } from '@angular/core';\\n\\n@Component({\\n    selector: 'mod-progress-spinner',\\n    templateUrl: './mod-progress-spinner.component.html',\\n    styleUrls: ['./mod-progress-spinner.component.scss']\\n})\\nexport class ModProgressSpinnerComponent implements OnInit {\\n\\n    @Input() value: number = 100;\\n    @Input() diameter: number = 100;\\n    @Input() mode: string = \\\"indeterminate\\\";\\n    @Input() strokeWidth: number = 10;\\n    @Input() overlay: boolean = false;\\n    @Input() color: string = \\\"primary\\\";\\n\\n    constructor() { }\\n\\n    ngOnInit(): void {\\n    }\\n\\n}\\n\",\"<mod-progress-spinner *ngIf=\\\"showProgressSpinner\\\" [overlay]=\\\"true\\\"></mod-progress-spinner>\\r\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { LoadingService } from '../../services/loading.service';\\r\\n\\n@Component({\\n    selector: 'mod-loading-overlay',\\n    templateUrl: './mod-loading-overlay.component.html',\\n    styleUrls: ['./mod-loading-overlay.component.scss']\\n})\\nexport class ModLoadingOverlayComponent implements OnInit {\\n\\n    public showProgressSpinner: boolean = false;\\n\\n    constructor(private loadingService: LoadingService) {\\n        this.loadingService.isLoading.subscribe((isLoading) => {\\n            if (isLoading) {\\n                this.showProgressSpinner = true;\\n            }\\n            else {\\n                this.showProgressSpinner = false;\\n            }\\n        })\\n    }\\n    ngOnInit(): void {\\n    }\\n\\n}\\n\",\"<mod-loading-overlay></mod-loading-overlay>\\r\\n<div class=\\\"mod-layout-container\\\">\\r\\n    <div class=\\\"layout-header\\\">\\r\\n        <!--<mod-welcome-banner>\\r\\n        </mod-welcome-banner>-->\\r\\n        <mod-header [appName]=\\\"appName\\\" (menuClick)=\\\"onMenuClicked()\\\" (userOptionSelect)=\\\"onUserOptionSelect($event)\\\" (helpOptionSelect)=\\\"onHelpOptionSelect($event)\\\">\\r\\n            <div *ngIf=\\\"config.showSearch\\\" style=\\\"display: flex; justify-content: center;\\\">\\r\\n                <input [(ngModel)]=\\\"searchText\\\" matInput placeholder=\\\"Search\\\" class=\\\"search-box\\\" (keyup.enter)=\\\"onSearch()\\\">\\r\\n            </div>\\r\\n        </mod-header>\\r\\n    </div>\\r\\n    <div class=\\\"layout-content\\\">\\r\\n        <mod-side-menu [config]=\\\"menuConfig\\\" #sidemenu>\\r\\n            <ng-content></ng-content>\\r\\n        </mod-side-menu>\\r\\n    </div>\\r\\n</div>\\r\\n\",\"import { Component, OnInit, ViewChild, Input, Output, EventEmitter, Inject } from '@angular/core';\\r\\nimport { ModSideMenuComponent } from '../mod-side-menu/mod-side-menu.component';\\r\\nimport { ModSideMenuConfig } from '../../models/mod-side-menu-config.model';\\r\\nimport { ModFrameworkConfig } from '../../models/mod-framework-config.model';\\r\\nimport { ModConfig } from '../../static/mod-config.const';\\r\\n\\r\\n@Component({\\r\\n    selector: 'mod-layout',\\r\\n    templateUrl: './mod-layout.component.html',\\r\\n    styleUrls: ['./mod-layout.component.scss']\\r\\n})\\r\\nexport class ModLayoutComponent implements OnInit {\\r\\n\\r\\n    @ViewChild('sidemenu', { static: true }) sideMenu: ModSideMenuComponent;\\r\\n\\r\\n    @Input()\\r\\n    appName: string;\\r\\n\\r\\n    @Input()\\r\\n    menuConfig: ModSideMenuConfig;\\r\\n\\r\\n    @Output()\\r\\n    userOptionSelect = new EventEmitter<string>();\\r\\n\\r\\n    @Output()\\r\\n    helpOptionSelect = new EventEmitter<string>();\\r\\n\\r\\n    @Output()\\r\\n    search = new EventEmitter<string>();\\r\\n\\r\\n    public searchText: string;\\r\\n\\r\\n    public config: ModFrameworkConfig;\\r\\n\\r\\n    constructor(@Inject(ModConfig) config: ModFrameworkConfig) {\\r\\n        this.config = config;\\r\\n    }\\r\\n\\r\\n    ngOnInit(): void {\\r\\n    }\\r\\n\\r\\n    public onMenuClicked(): void {\\r\\n        this.sideMenu.toggleSideNav();\\r\\n    }\\r\\n\\r\\n    public onUserOptionSelect(option: string): void {\\r\\n        this.userOptionSelect.emit(option);\\r\\n    }\\r\\n\\r\\n    public onHelpOptionSelect(option: string): void {\\r\\n        this.helpOptionSelect.emit(option);\\r\\n    }\\r\\n\\r\\n    public onSearch(): void {\\r\\n        this.search.emit(this.searchText);\\r\\n        this.searchText = '';\\r\\n    }\\r\\n}\\r\\n\",\"import { Component, OnInit, Output, EventEmitter } from '@angular/core';\\n\\n@Component({\\n    selector: 'mod-welcome-banner',\\n    templateUrl: './mod-welcome-banner.component.html',\\n    styleUrls: ['./mod-welcome-banner.component.scss']\\n})\\nexport class ModWelcomeBanner implements OnInit {\\n    @Output()\\n    onLogin = new EventEmitter<any>();\\n\\n    @Output()\\r\\n    onLogout = new EventEmitter<any>();\\n\\n    constructor() { }\\n\\n    ngOnInit() {\\n    }\\n\\n}\\n\",\"<header class=\\\"mod-header\\\" role=\\\"banner\\\">\\r\\n    <div class=\\\"mod-welcome-banner\\\">\\r\\n        <div class=\\\"welcome-user\\\">\\r\\n            <mod-user-display></mod-user-display>\\r\\n        </div>\\r\\n    </div>\\r\\n</header>\\r\\n\",\"<div *ngIf=\\\"browserFail\\\" class=\\\"container-fluid browser-check-container\\\">\\r\\n    <span class=\\\"fa fa-warning browser-check-icon\\\"></span><span class=\\\"browser-check-header-text\\\">&nbsp;&nbsp;You can't log in to this site.</span>\\r\\n    <div class=\\\"browser-check-text\\\">\\r\\n        Possible reasons for this include:\\r\\n        <ul>\\r\\n            <li>\\r\\n                You can't reach the site {{loginSite}}.\\r\\n                <ul>\\r\\n                    <li>Please check your network connection.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n            <li>\\r\\n                Site {{loginSite}} does not allow cross-origin scripting (CORS) from your domain {{myDomain}}.\\r\\n                <ul>\\r\\n                    <li>Please contact the administrator of {{loginSite}} and request access for your site.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n            <li>\\r\\n                Your browser doesn't accept third-party cookies from domain {{loginDomain}}.\\r\\n                <ul>\\r\\n                    <li>In your browser settings, either allow all third-party cookies, or </li>\\r\\n                    <li>Disallow third-party cookies, but add {{loginDomain}} as an exception.</li>\\r\\n                </ul>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <i>The actual error returned is \\\"{{browserFail}}\\\".<br /></i>\\r\\n        Please correct these problems and try again.\\r\\n    </div>\\r\\n</div>\\r\\n\",\"import { Component, OnInit, Input } from '@angular/core';\\nimport { CurrentUserService } from \\\"../../services/current-user.service\\\";\\n\\ndeclare var $: any;\\n\\n@Component({\\n    selector: 'mod-browser-check',\\n    templateUrl: './browser-check.component.html',\\n    styleUrls: ['./browser-check.component.scss']\\n})\\n\\nexport class BrowserCheckComponent implements OnInit {\\n\\n    constructor(private currentUserService: CurrentUserService) {\\n    }\\n\\n    public browserFail: string;\\n    public loginSite: string;\\n    public loginDomain: string;\\n    public myDomain: string;\\n\\n    ngOnInit(): void {\\n        this.currentUserService.browserCheck().then(response => {\\n            this.browserFail = '';\\n            return;\\n        }).catch(error => {\\n            $(\\\"#loginout\\\").css(\\\"display\\\", \\\"none\\\");\\n            this.browserFail = error;\\n            this.loginSite = this.currentUserService.siteUrl;\\n            this.loginDomain = this.currentUserService.domain;\\n            this.myDomain = this.currentUserService.getDomain(window.location.href);\\n        });\\n\\n    }\\n\\n}\\n\",\"import { Injectable } from '@angular/core';\\r\\n\\r\\nimport {\\r\\n    HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\\r\\n} from '@angular/common/http';\\r\\n\\r\\nimport { Observable } from 'rxjs';\\r\\nimport { tap, filter } from 'rxjs/operators';\\r\\nimport { CurrentUserService } from './current-user.service';\\r\\n\\r\\n// Add credentials to every request.\\r\\n// Credit to https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\\r\\n\\r\\n@Injectable()\\r\\nexport class HttpRequestInterceptor implements HttpInterceptor {\\r\\n\\r\\n    constructor(private userService: CurrentUserService) {\\r\\n\\r\\n    }\\r\\n\\r\\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\\r\\n\\r\\n        req = req.clone({\\r\\n            withCredentials: true\\r\\n        });\\r\\n\\r\\n        return next.handle(req).pipe(\\r\\n            filter(event => event instanceof HttpResponse),\\r\\n            tap((event: HttpResponse<any>) => {\\r\\n                // Don't force login when making a call to claims/user\\r\\n                if (!this.userService.user && !event.url.endsWith(\\\"claims/user\\\"))\\r\\n                    this.userService.login();\\r\\n            }, (err: any) => {\\r\\n                if (err.status == 0)\\r\\n                    this.userService.redirectLogin();\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"import { Injectable } from '@angular/core';\\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\\nimport { CurrentUserService } from './current-user.service';\\r\\n\\n@Injectable()\\nexport class RoleGuardService implements CanActivate {\\n    constructor(public userService: CurrentUserService, public router: Router) { }\\n    canActivate(route: ActivatedRouteSnapshot): boolean {\\n        // this will be passed from the route config\\n        // on the data property\\n        const expectedRoles = route.data.expectedRoles;\\n\\n        if (!this.userService.user || !this.userService.isInRoles(expectedRoles)\\n        ) {\\n            this.router.navigate(['/']);\\n            return false;\\n        }\\n        return true;\\n    }\\n}\\n\",\"import { NgModule, APP_INITIALIZER, SkipSelf, Optional, ModuleWithProviders, InjectionToken } from '@angular/core';\\r\\nimport { RouterModule } from '@angular/router';\\r\\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\\r\\n\\r\\n// Configuration\\r\\nimport { ModConfig } from './static/mod-config.const';\\r\\nimport { ModFrameworkConfig } from './models/mod-framework-config.model';\\r\\n\\r\\n// Services\\r\\nimport { LoadingIntercepter } from './services/loading.interceptor';\\r\\nimport { CurrentUserService } from './services/current-user.service';\\r\\nimport { LoadingService } from './services/loading.service';\\r\\n\\r\\n// Modules\\r\\nimport { MatIconModule } from '@angular/material/icon';\\r\\nimport { MatDividerModule } from '@angular/material/divider';\\r\\nimport { MatListModule } from '@angular/material/list';\\r\\nimport { MatSidenavModule } from '@angular/material/sidenav';\\r\\nimport { MatToolbarModule } from '@angular/material/toolbar';\\r\\nimport { MatMenuModule } from '@angular/material/menu';\\r\\nimport { MatButtonModule } from '@angular/material/button';\\r\\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\\r\\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\\r\\nimport { MatTooltipModule } from '@angular/material/tooltip';\\r\\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\\r\\nimport { MatFormFieldModule } from '@angular/material/form-field';\\r\\nimport { MatInputModule } from '@angular/material/input';\\r\\nimport { MatSelectModule } from '@angular/material/select';\\r\\nimport { CommonModule, NgIf } from '@angular/common';\\r\\n\\r\\n// Components\\r\\nimport { ModLayoutComponent } from './components/mod-layout/mod-layout.component';\\r\\nimport { ModHeaderComponent } from './components/mod-header/mod-header.component';\\r\\nimport { ModWelcomeBanner } from './components/mod-welcome-banner/mod-welcome-banner.component';\\r\\nimport { ModSideMenuComponent } from './components/mod-side-menu/mod-side-menu.component';\\r\\nimport { ModProgressSpinnerComponent } from './components/mod-progress-spinner/mod-progress-spinner.component';\\r\\nimport { ModLoadingOverlayComponent } from './components/mod-loading-overlay/mod-loading-overlay.component';\\r\\nimport { ModUserDisplayComponent } from './components/mod-user-display/mod-user-display.component';\\r\\nimport { BrowserCheckComponent } from './components/browser-check/browser-check.component';\\r\\nimport { HttpRequestInterceptor } from './services/http-request.interceptor';\\r\\nimport { RoleGuardService } from './services/role-guard.service';\\r\\nimport { BrowserModule } from '@angular/platform-browser';\\r\\n\\r\\n\\r\\nexport function initiateSingleSignOn(userService: CurrentUserService) {\\r\\n    return () => {\\r\\n        var auth = sessionStorage.getItem(\\\"authenticating\\\")?.toString();\\r\\n\\r\\n        if (auth) {\\r\\n            return userService.login().then(response => {\\r\\n                sessionStorage.removeItem(\\\"authenticating\\\");\\r\\n            });\\r\\n        }\\r\\n        else {\\r\\n            userService.redirectLogin();\\r\\n            let promise = new Promise((resolve, reject) => {\\r\\n                reject(\\\"Authenticating\\\");\\r\\n            });\\r\\n\\r\\n            return promise;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [\\r\\n        ModWelcomeBanner,\\r\\n        ModSideMenuComponent,\\r\\n        ModLayoutComponent,\\r\\n        ModHeaderComponent,\\r\\n        ModProgressSpinnerComponent,\\r\\n        ModLoadingOverlayComponent,\\r\\n        ModUserDisplayComponent,\\r\\n        BrowserCheckComponent,\\r\\n    ],\\r\\n    imports: [\\r\\n        CommonModule,\\r\\n        BrowserModule,\\r\\n        NgIf,\\r\\n        FormsModule,\\r\\n        ReactiveFormsModule,\\r\\n        HttpClientModule,\\r\\n        RouterModule,\\r\\n        MatIconModule, MatDividerModule, MatListModule, MatSidenavModule, MatToolbarModule, MatMenuModule, MatButtonModule, MatProgressSpinnerModule, MatAutocompleteModule, MatTooltipModule, MatFormFieldModule, MatInputModule, MatSelectModule,\\r\\n    ],\\r\\n    providers: [\\r\\n    ],\\r\\n    exports: [\\r\\n        ModHeaderComponent,\\r\\n        ModLayoutComponent,\\r\\n        ModLoadingOverlayComponent,\\r\\n        ModProgressSpinnerComponent,\\r\\n        ModSideMenuComponent,\\r\\n        ModUserDisplayComponent,\\r\\n        ModWelcomeBanner,\\r\\n        BrowserCheckComponent,\\r\\n    ]\\r\\n})\\r\\nexport class ModFrameworkModule {\\r\\n    static forRoot(config: ModFrameworkConfig = null): ModuleWithProviders<ModFrameworkModule> {\\r\\n        return {\\r\\n            ngModule: ModFrameworkModule,\\r\\n            providers: [\\r\\n                {\\r\\n                    provide: ModConfig,\\r\\n                    useValue: config\\r\\n                },\\r\\n                CurrentUserService,\\r\\n                {\\r\\n                    provide: HTTP_INTERCEPTORS,\\r\\n                    useClass: LoadingIntercepter,\\r\\n                    multi: true\\r\\n                },\\r\\n                LoadingService,\\r\\n                // see https://weblog.west-wind.com/posts/2019/Apr/07/Creating-a-custom-HttpInterceptor-to-handle-withCredentials\\r\\n                {\\r\\n                    provide: HTTP_INTERCEPTORS,\\r\\n                    useClass: HttpRequestInterceptor,\\r\\n                    multi: true\\r\\n                },\\r\\n                {\\r\\n                    provide: APP_INITIALIZER,\\r\\n                    useFactory: initiateSingleSignOn,\\r\\n                    multi: true,\\r\\n                    deps: [CurrentUserService]\\r\\n                },\\r\\n                RoleGuardService,\\r\\n            ]\\r\\n        }\\r\\n    }\\r\\n\\r\\n    constructor(@Optional() @SkipSelf() parentModule: ModFrameworkModule) {\\r\\n        if (parentModule) {\\r\\n            throw new Error('ModFrameworkModule is already loaded. Import it in the AppModule only');\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"import { IDto } from '../interfaces/dto.interface';\\r\\n\\r\\nexport abstract class DtoBase implements IDto {\\r\\n    id: number = 0;\\r\\n    createdBy: string;\\r\\n    createdTime: Date;\\r\\n    modifiedBy: string;\\r\\n    modifiedTime: Date;\\r\\n}\\r\\n\",\"export class ModSideMenuConfig {\\r\\n    public title: string;\\r\\n\\r\\n    public sections: ModMenuSection[] = [];\\r\\n\\r\\n    public constructor() {\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class ModMenuSection {\\r\\n    public name: string = \\\"\\\";\\r\\n    public shortName: string = \\\"\\\";\\r\\n    public visible: boolean = true;\\r\\n    public allowedRoles: string[] = [];\\r\\n    public menuItems: ModMenuItem[] = [];    \\r\\n}\\r\\n\\r\\nexport class ModMenuItem {\\r\\n    public text: string;\\r\\n    public icon: string;\\r\\n    public route: string;\\r\\n    public defaultState: string;\\r\\n    public allowedRoles: string[] = [];\\r\\n}\\r\\n\",\"export class UserInfo {\\r\\n    uniqueName: string;\\r\\n    upn: string;\\r\\n    displayName: string;\\r\\n    emailAddress: string;\\r\\n    userProfileUrl: string;\\r\\n\\r\\n    public constructor(uniqueName: string, upn: string) {\\r\\n        this.uniqueName = uniqueName;\\r\\n        this.upn = upn;\\r\\n        console.log(uniqueName + '[]asdf');\\r\\n        console.log(uniqueName == 'LOGIN\\\\\\\\kuennen_s');\\r\\n        this.displayName = (uniqueName == \\\"LOGIN\\\\\\\\kuennen_s\\\") ? \\\"Kuennen, Steve (Contractor)\\\" : uniqueName;\\r\\n        this.userProfileUrl = \\\"\\\";\\r\\n    }\\r\\n}\\r\\n\",\"export class Logging {\\r\\n    static logToConsole: boolean = true;\\r\\n\\r\\n    static log(val: any) {\\r\\n        if (this.logToConsole) \\r\\n            console.log(val);\\r\\n    }\\r\\n}\\r\\n\",\"import { HttpClient, HttpParams } from '@angular/common/http';\\r\\nimport { IDto } from '../interfaces/dto.interface';\\r\\nimport { Logging } from '../static/logging.static';\\r\\n\\r\\nexport abstract class ModPromiseServiceBase<T extends IDto> {\\r\\n    constructor(\\r\\n        public http: HttpClient,\\r\\n        public url: string,\\r\\n        public endpoint: string,\\n        private TCreator: { new(): T; }) {\\n\\n        this.url = (url.endsWith('/') ? url.slice(0, -1) : url) + '/api';\\n    }\\r\\n\\r\\n    public save(item: T): Promise<T> {\\r\\n        if (item.id <= 0)\\r\\n            return this.create(item);\\r\\n        else\\r\\n            return this.update(item);\\r\\n    }\\r\\n\\r\\n    public getAll(params?: HttpParams): Promise<T[]> {\\r\\n        var url = `${this.url}/${this.endpoint}`;\\r\\n\\r\\n        return this.http\\r\\n            .get<T[]>(url, {params})\\r\\n            .toPromise()\\r\\n            .then(response => {\\r\\n                var data: T[] = [];\\n\\n                response.forEach(x => {\\n                    var obj = this.formatResponse(x);\\n                    data.push(obj);\\n                });\\r\\n\\r\\n                return data;\\r\\n            })\\r\\n            .catch(this.handleError);\\r\\n    }\\r\\n\\r\\n    public create(item: T): Promise<T> {\\r\\n        var url = `${this.url}/${this.endpoint}`;\\r\\n\\r\\n        return this.http.post<T>(url, item)\\r\\n            .toPromise()\\r\\n            .then(response => {\\n                var obj = this.formatResponse(response);\\r\\n                return obj;\\r\\n            })\\r\\n            .catch(this.handleError);\\r\\n    }\\r\\n\\r\\n    public get(id: number): Promise<T> {\\r\\n        var url = `${this.url}/${this.endpoint}/${id}`;\\r\\n\\r\\n        return this.http.get<T>(url)\\r\\n            .toPromise()\\r\\n            .then(response => {\\n                var obj = this.formatResponse(response);\\r\\n                return obj;\\r\\n            })\\r\\n            .catch(this.handleError);\\r\\n    }\\r\\n\\r\\n    public update(item: T): Promise<T> {\\r\\n        var url = `${this.url}/${this.endpoint}/${item.id}`;\\r\\n\\r\\n        return this.http.put<T>(url, item)\\r\\n            .toPromise()\\r\\n            .then(response => {\\n                var obj = this.formatResponse(response);\\r\\n                return obj;\\r\\n            })\\r\\n            .catch(this.handleError);\\r\\n    }\\r\\n\\r\\n    public delete(id: number): Promise<any> {\\r\\n        return this.http.delete(`${this.url}/${this.endpoint}/${id}`).toPromise();\\r\\n    }\\n\\r\\n    // Override to fully instantiate child objects.  Be sure to call super.formatResponse first to instantiate the parent object.\\r\\n    formatResponse(data: T): T {\\n        return Object.assign(new this.TCreator(), data);\\r\\n    }\\r\\n\\r\\n    handleError(error: Response | any): Promise<any> {\\r\\n        Logging.log(error);\\r\\n        return Promise.reject(error.message || error);\\r\\n    }\\r\\n}\\r\\n\",\"/*\\n * Public API Surface of mod-framework\\n */\\n\\nexport * from './lib/mod-framework.module';\\n\\nexport * from './lib/interfaces/dto.interface';\\n\\nexport * from './lib/models/dto-base.model';\\nexport * from './lib/models/mod-framework-config.model';\\nexport * from './lib/models/mod-side-menu-config.model';\\nexport * from './lib/models/user-info.model';\\n\\nexport * from './lib/components/mod-header/mod-header.component';\\nexport * from './lib/components/mod-layout/mod-layout.component';\\nexport * from './lib/components/mod-loading-overlay/mod-loading-overlay.component';\\nexport * from './lib/components/mod-progress-spinner/mod-progress-spinner.component';\\nexport * from './lib/components/mod-side-menu/mod-side-menu.component';\\nexport * from './lib/components/mod-user-display/mod-user-display.component';\\nexport * from './lib/components/mod-welcome-banner/mod-welcome-banner.component';\\nexport * from './lib/components/browser-check/browser-check.component';\\n\\nexport * from './lib/services/current-user.service';\\nexport * from './lib/services/loading.interceptor';\\nexport * from './lib/services/loading.service';\\nexport * from './lib/services/mod-promise.service.base';\\nexport * from './lib/services/role-guard.service';\\n\\n\\n\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"i1\",\"i2.CurrentUserService\",\"_c1\",\"_c0\",\"i1.LoadingService\",\"i1.CurrentUserService\",\"i2\"],\"mappings\":\"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\"}","type":"asset"}]}